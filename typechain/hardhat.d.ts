/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "TwapOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwapOracle__factory>;
    getContractFactory(
      name: "PoolsharkHedgePoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePoolEvents__factory>;
    getContractFactory(
      name: "PoolsharkHedgePoolStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePoolStorage__factory>;
    getContractFactory(
      name: "PoolsharkHedgePoolView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePoolView__factory>;
    getContractFactory(
      name: "IConcentratedFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConcentratedFactory__factory>;
    getContractFactory(
      name: "IConcentratedPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConcentratedPool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IPoolsharkHedgePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolsharkHedgePool__factory>;
    getContractFactory(
      name: "IPoolsharkHedgePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolsharkHedgePoolFactory__factory>;
    getContractFactory(
      name: "IPositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPositionManager__factory>;
    getContractFactory(
      name: "SafeTransfers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeTransfers__factory>;
    getContractFactory(
      name: "TickMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickMath__factory>;
    getContractFactory(
      name: "TicksLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TicksLibrary__factory>;
    getContractFactory(
      name: "PoolsharkHedgePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePool__factory>;
    getContractFactory(
      name: "PoolsharkHedgePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePoolFactory__factory>;
    getContractFactory(
      name: "ConcentratedFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConcentratedFactoryMock__factory>;
    getContractFactory(
      name: "ConcentratedPoolMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConcentratedPoolMock__factory>;
    getContractFactory(
      name: "Token20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token20__factory>;
    getContractFactory(
      name: "PoolsharkHedgePoolErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePoolErrors__factory>;
    getContractFactory(
      name: "PoolsharkHedgePoolFactoryErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkHedgePoolFactoryErrors__factory>;
    getContractFactory(
      name: "PoolsharkMiscErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkMiscErrors__factory>;
    getContractFactory(
      name: "PoolsharkPositionErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkPositionErrors__factory>;
    getContractFactory(
      name: "PoolsharkTicksErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkTicksErrors__factory>;
    getContractFactory(
      name: "PoolsharkTransferErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkTransferErrors__factory>;

    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "TwapOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwapOracle>;
    getContractAt(
      name: "PoolsharkHedgePoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePoolEvents>;
    getContractAt(
      name: "PoolsharkHedgePoolStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePoolStorage>;
    getContractAt(
      name: "PoolsharkHedgePoolView",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePoolView>;
    getContractAt(
      name: "IConcentratedFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConcentratedFactory>;
    getContractAt(
      name: "IConcentratedPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConcentratedPool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IPoolsharkHedgePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolsharkHedgePool>;
    getContractAt(
      name: "IPoolsharkHedgePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolsharkHedgePoolFactory>;
    getContractAt(
      name: "IPositionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPositionManager>;
    getContractAt(
      name: "SafeTransfers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeTransfers>;
    getContractAt(
      name: "TickMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TickMath>;
    getContractAt(
      name: "TicksLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TicksLibrary>;
    getContractAt(
      name: "PoolsharkHedgePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePool>;
    getContractAt(
      name: "PoolsharkHedgePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePoolFactory>;
    getContractAt(
      name: "ConcentratedFactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConcentratedFactoryMock>;
    getContractAt(
      name: "ConcentratedPoolMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConcentratedPoolMock>;
    getContractAt(
      name: "Token20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token20>;
    getContractAt(
      name: "PoolsharkHedgePoolErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePoolErrors>;
    getContractAt(
      name: "PoolsharkHedgePoolFactoryErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkHedgePoolFactoryErrors>;
    getContractAt(
      name: "PoolsharkMiscErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkMiscErrors>;
    getContractAt(
      name: "PoolsharkPositionErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkPositionErrors>;
    getContractAt(
      name: "PoolsharkTicksErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkTicksErrors>;
    getContractAt(
      name: "PoolsharkTransferErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkTransferErrors>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}

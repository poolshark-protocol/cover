/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IOrderBook, IOrderBookInterface } from "../IOrderBook";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orderId",
        type: "string",
      },
    ],
    name: "CloseOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destAmount",
        type: "uint256",
      },
    ],
    name: "OpenOrder",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "orderTxn",
        type: "string",
      },
    ],
    name: "closeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "fromAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "destAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "destToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "tryInstant",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "leaveOverfill",
        type: "bool",
      },
    ],
    name: "openOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "user",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "token",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "reservationTxn",
        type: "bytes32[]",
      },
    ],
    name: "processCloseOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IOrderBook__factory {
  static readonly abi = _abi;
  static createInterface(): IOrderBookInterface {
    return new utils.Interface(_abi) as IOrderBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOrderBook {
    return new Contract(address, _abi, signerOrProvider) as IOrderBook;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_tickSpacing",
        type: "uint24",
      },
    ],
    name: "getMaxLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x611ae661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063121f0e0c1461006657806341ee16d71461009e57806391282ef4146100be578063aa62b7761461010d578063dc47a5c21461014c575b600080fd5b81801561007257600080fd5b50610086610081366004611576565b610177565b60405160029190910b81526020015b60405180910390f35b8180156100aa57600080fd5b506100866100b93660046115f1565b6105b7565b8180156100ca57600080fd5b506100de6100d93660046116d4565b610f0b565b60408051948552600293840b60208601529190920b908301526001600160801b03166060820152608001610095565b81801561011957600080fd5b5061012d61012836600461173e565b611195565b60408051938452600292830b6020850152910b90820152606001610095565b61015f61015a3660046117cd565b611363565b6040516001600160801b039091168152602001610095565b600284900b60008181526020879052604081209091620d89e719148015906101ae575060018101546001600160801b038581169116145b15610288578054600281810b600090815260208a905260408082206301000000909404830b80835291209188900b14610218578254825465ffffff000000191663010000009182900462ffffff9081169092021783558354825462ffffff1916911617815561026c565b600287810b600090815260208b9052604080822054855465ffffff000000191663010000009182900462ffffff8181169093029190911787558754940b83529120805462ffffff1916929091169190911790555b8760020b8560020b0361028157825460020b94505b50506102ad565b6001810180546001600160801b03808216879003166001600160801b03199091161790555b50600284900b60009081526020879052604090206102ce620d89e7196117fe565b60020b8560020b141580156102f2575060018101546001600160801b038581169116145b156103c5578054600281810b600081815260208b905260408082206301000000909504840b825290209189900b1461035b578254825465ffffff000000191663010000009182900462ffffff9081169092021783558354825462ffffff191691161781556103a9565b600288810b600090815260208b905260408082205486549381900b83529120805465ffffff000000191663010000009384900462ffffff908116909402179055825462ffffff191691161781555b8660020b8560020b036103be57825460020b94505b50506103ea565b6001810180546001600160801b03808216879003166001600160801b03199091161790555b600286900b620d89e71914801590610411575060018101546001600160801b038581169116145b1561046657600286810b600090815260208990526040812080546001600160b01b03191681556001810180546001600160801b0319169055918201819055600382015560040180546001600160a01b03191690555b610473620d89e7196117fe565b60020b8560020b14158015610497575060018101546001600160801b038581169116145b156104ec57600285810b600090815260208990526040812080546001600160b01b03191681556001810180546001600160801b0319169055918201819055600382015560040180546001600160a01b03191690555b604080518082018252601881527f72656d6f766564206c6f776572206c69717569646974793a0000000000000000602080830191909152600289900b6000908152908a9052919091206001015461054c91906001600160801b03166113a3565b604080518082018252601881527f72656d6f766564207570706572206c69717569646974793a0000000000000000602080830191909152600288900b6000908152908a905291909120600101546105ac91906001600160801b03166113a3565b509095945050505050565b60008560020b8860020b1215806105d457508660020b8960020b12155b156105f25760405163338d790760e01b815260040160405180910390fd5b600288900b620d89e719131561061b576040516345bde0e360e11b815260040160405180910390fd5b610628620d89e7196117fe565b60020b8660020b131561064e5760405163093cbe4760e21b815260040160405180910390fd5b60405163986cfba360e01b8152600289900b60048201526001600160a01b0383169073__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af41580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190611820565b6001600160a01b03161115610a0957600288900b600090815260208d8152604091829020600101548251808401909352601883527f63757272656e74206c6f776572206c69717569646974793a0000000000000000918301919091526001600160801b03169061074090826113a3565b6001600160801b03811615158061075e5750600289900b620d89e719145b156107a65761076d868261183d565b60028a900b600090815260208f90526040902060010180546001600160801b0319166001600160801b0392909216919091179055610a07565b60028a810b600090815260208f905260409020805490916301000000909104810b9089900b8113156107d55750875b60018201546001600160801b03161580156107f8575060028c900b620d89e71914155b801561080a57508560020b8c60020b14155b8061081b57508a60020b8c60020b12155b8061082c57508060020b8b60020b12155b1561084a576040516307dfb2f760e01b815260040160405180910390fd5b6040518060e001604052808d60020b81526020018260020b815260200160006001600160801b03168152602001896001600160801b031681526020018f81526020018f81526020018e6001600160a01b03168152508f60008d60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160006101000a8154816001600160801b0302191690836001600160801b031602179055506080820151816002015560a0820151816003015560c08201518160040160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050508a8260000160036101000a81548162ffffff021916908360020b62ffffff1602179055508a8f60008360020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff16021790555050505b505b60405163986cfba360e01b8152600287900b60048201526001600160a01b0383169073__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af4158015610a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8b9190611820565b6001600160a01b03161115610dcd57600286900b600090815260208d8152604091829020600101548251808401909352601883527f63757272656e74207570706572206c69717569646974793a0000000000000000918301919091526001600160801b031690610afb90826113a3565b6001600160801b038116151580610b235750610b1a620d89e7196117fe565b60020b8760020b145b15610b6b57610b32868261183d565b600288900b600090815260208f90526040902060010180546001600160801b0319166001600160801b0392909216919091179055610dcb565b600288810b600090815260208f9052604090208054600182015491926301000000909104900b906001600160801b0316158015610bba5750610bb0620d89e7196117fe565b60020b8a60020b14155b80610bcb57508860020b8a60020b13155b80610bdc57508060020b8960020b12155b15610bfa576040516315beab4760e01b815260040160405180910390fd5b815460028c810b91900b1215610c0e578a99505b6040518060e001604052808b60020b81526020018260020b815260200160006001600160801b03168152602001896001600160801b031681526020018f81526020018f81526020018e6001600160a01b03168152508f60008b60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160006101000a8154816001600160801b0302191690836001600160801b031602179055506080820151816002015560a0820151816003015560c08201518160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050888260000160006101000a81548162ffffff021916908360020b62ffffff160217905550888f60008360020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff16021790555050505b505b6040516309eed80b60e31b81526001600160a01b038316600482015260009073__$b52f7ddb7db4526c8b5c81c46a9292f776$__90634f76c05890602401602060405180830381865af4158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611868565b90508660020b8560020b128015610e6957508060020b8760020b13155b15610e7657869450610e9a565b8860020b8560020b128015610e9157508060020b8960020b13155b15610e9a578894505b610ed86040518060400160405280601981526020017f696e736572746564207469636b206166746572207a65726f3a000000000000008152506113ec565b600080805260208e90526040902054610efa906301000000900460020b611432565b50929b9a5050505050505050505050565b6000808080806002610f1d888b61189b565b610f2791906118d5565b60020b600003610f6d5750600288900b600090815260208b90526040902060010154670de0b6b3a764000090610f66906001600160801b0316896118f7565b9750611002565b8715610fca57600289900b600090815260208c905260409020600101548890610fa7906001600160801b0316670de0b6b3a764000061190f565b610fb1919061193e565b610fc390670de0b6b3a7640000611964565b9050610fd5565b50670de0b6b3a76400005b600289900b600090815260208c90526040902060010154610fff906001600160801b03168961198c565b97505b60028a810b600090815260208d905260408120600381015492015490916110289161198c565b905060008762ffffff16611041838c600160801b611477565b61104e90620f42406119a3565b61105891906119c2565b90506000670de0b6b3a76400006110786001600160801b038616846119a3565b61108291906119c2565b90506110976001600160801b0382168361198c565b8e60008e60020b60020b815260200190815260200160002060000160068282829054906101000a90046001600160801b03166110d3919061183d565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550818e60008f60020b60020b815260200190815260200160002060000160068282829054906101000a90046001600160801b03166111349190611964565b82546001600160801b039182166101009390930a92830291909202199091161790555060028c810b600090815260209f909f526040909e20808f01546003820155549a9e9b9d6301000000909b04909a0b9b50989998505050505050505050565b600286900b600090815260208990526040812060040154819081906111c3906001600160a01b0316896119d6565b60028a900b600090815260208d90526040902060040180546001600160a01b0319166001600160a01b039290921691909117905584156112a65760028460020b8a60020b8161121457611214611885565b0560020b8161122557611225611885565b0760020b60000361125957600289900b600090815260208c905260409020600101546001600160801b03169096039561127f565b600289900b600090815260208c905260409020600101546001600160801b031696909601955b600289810b600090815260208d90526040902080820188905554999a509890980b97611352565b60028460020b8a60020b816112bd576112bd611885565b0560020b816112ce576112ce611885565b0760020b60000361130357600289900b600090815260208c905260409020600101546001600160801b03169690960195611328565b600289900b600090815260208c905260409020600101546001600160801b0316909603955b600289810b600090815260208d90526040902080820188905554999a50630100000090990490980b975b509499979850959695505050505050565b60006113708260026119f6565b61137d620d89e7196117fe565b6113879190611a18565b61139d9062ffffff166001600160801b0361193e565b92915050565b6113e882826040516024016113b9929190611a7b565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261152a565b5050565b61142f816040516024016114009190611a9d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261152a565b50565b61142f8160405160240161144891815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316632d5b6cb960e01b17905261152a565b60008080600019858709858702925082811083820303915050806000036114b057600084116114a557600080fd5b508290049050611523565b8084116114bc57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8060020b811461142f57600080fd5b80356001600160801b038116811461157157600080fd5b919050565b600080600080600060a0868803121561158e57600080fd5b8535945060208601356115a08161154b565b935060408601356115b08161154b565b92506115be6060870161155a565b915060808601356115ce8161154b565b809150509295509295909350565b6001600160a01b038116811461142f57600080fd5b60008060008060008060008060008060006101608c8e03121561161357600080fd5b8b359a5060208c0135995060408c013561162c816115dc565b985060608c013561163c8161154b565b975060808c013561164c8161154b565b965060a08c013561165c8161154b565b955060c08c013561166c8161154b565b945061167a60e08d0161155a565b93506101008c013561168b8161154b565b92506101208c013561169c8161154b565b91506101408c01356116ad816115dc565b809150509295989b509295989b9093969950565b803562ffffff8116811461157157600080fd5b60008060008060008060c087890312156116ed57600080fd5b8635955060208701356116ff8161154b565b9450604087013561170f8161154b565b935060608701359250611724608088016116c1565b915061173260a088016116c1565b90509295509295509295565b600080600080600080600080610100898b03121561175b57600080fd5b88359750602089013561176d8161154b565b9650604089013561177d8161154b565b9550606089013561178d816115dc565b94506080890135935060a0890135925060c089013580151581146117b057600080fd5b91506117be60e08a016116c1565b90509295985092959890939650565b6000602082840312156117df57600080fd5b611523826116c1565b634e487b7160e01b600052601160045260246000fd5b60008160020b627fffff198103611817576118176117e8565b60000392915050565b60006020828403121561183257600080fd5b8151611523816115dc565b60006001600160801b0380831681851680830382111561185f5761185f6117e8565b01949350505050565b60006020828403121561187a57600080fd5b81516115238161154b565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806118b2576118b2611885565b627fffff198214600019821416156118cc576118cc6117e8565b90059392505050565b60008260020b806118e8576118e8611885565b808360020b0791505092915050565b6000821982111561190a5761190a6117e8565b500190565b60006001600160801b0380831681851681830481118215151615611935576119356117e8565b02949350505050565b60006001600160801b038084168061195857611958611885565b92169190910492915050565b60006001600160801b0383811690831681811015611984576119846117e8565b039392505050565b60008282101561199e5761199e6117e8565b500390565b60008160001904831182151516156119bd576119bd6117e8565b500290565b6000826119d1576119d1611885565b500490565b60006001600160a01b0383811690831681811015611984576119846117e8565b600062ffffff80831681851681830481118215151615611935576119356117e8565b600062ffffff8084168061195857611958611885565b6000815180845260005b81811015611a5457602081850181015186830182015201611a38565b81811115611a66576000602083870101525b50601f01601f19169290920160200192915050565b604081526000611a8e6040830185611a2e565b90508260208301529392505050565b6020815260006115236020830184611a2e56fea264697066735822122093736aac3ab214b23c4e7e513f596cf4407d9e1455ef0e58340ea2c69ea72a3e64736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

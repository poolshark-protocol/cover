/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "swapFee",
            type: "uint16",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "lastBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x612a3161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780635f580c66146100aa578063cdb98d07146100cc578063dd3fac92146100f9575b600080fd5b61006e61006936600461248a565b610119565b604080518351815260208085015190820152838201519181019190915260609283015192810192909252608082015260a0015b60405180910390f35b8180156100b657600080fd5b506100ca6100c5366004612549565b6106f2565b005b8180156100d857600080fd5b506100ec6100e73660046125a8565b610a85565b6040516100a19190612648565b81801561010557600080fd5b506100ca610114366004612709565b611690565b6101446040518060800160405280600081526020016000815260200160008152602001600081525090565b6000856101685782516001600160a01b03861611158061016357508251155b610177565b82516001600160a01b03861610155b15610187575081905060006106e9565b6101008401516001600160a01b031680871561044e57866001600160a01b03168110156101ba57506001600160a01b0386165b60208501518551604051630e8e499360e21b8152600481019290925260248201839052604482015260009073__$357eccfa53a4e88c122661903e0e603301$__90633a39264c90606401602060405180830381865af4158015610221573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610245919061278b565b9050808660600151116103a3576020860151865160608881015192901b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161028e90826127ba565b61029890876127d9565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610305919061278b565b60208901518951604051630b00d01b60e31b8152600481019290925260248201839052604482015290915073__$357eccfa53a4e88c122661903e0e603301$__9063580680d890606401602060405180830381865af415801561036c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610390919061278b565b9088526000606089015294506104489050565b60208601518651604051630b00d01b60e31b8152600481019290925260248201849052604482015273__$357eccfa53a4e88c122661903e0e603301$__9063580680d890606401602060405180830381865af4158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b919061278b565b82875260608701805191955082916104449083906127f1565b9052505b506106e3565b866001600160a01b031681111561046b57506001600160a01b0386165b60208501518551604051630b00d01b60e31b8152600481019290925260248201526044810183905260009073__$357eccfa53a4e88c122661903e0e603301$__9063580680d890606401602060405180830381865af41580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061278b565b90508086606001511161063c576060860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af4158015610570573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610594919061278b565b87516105a091906127d9565b60208801518851604051630e8e499360e21b8152600481019290925260248201526044810182905290915073__$357eccfa53a4e88c122661903e0e603301$__90633a39264c90606401602060405180830381865af4158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b919061278b565b9087526000606088015293506106e1565b60208601518651604051630e8e499360e21b8152600481019290925260248201526044810184905273__$357eccfa53a4e88c122661903e0e603301$__90633a39264c90606401602060405180830381865af41580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c4919061278b565b82875260608701805191955082916106dd9083906127f1565b9052505b505b84935050505b94509492505050565b6040518060600160405280620d89e71960020b8152602001620d89e71961071890612808565b60020b81526020018363ffffffff168152508660008560020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280620d89e71960020b81526020018460020b81526020018363ffffffff16815250866000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff16021790555090505060405180606001604052808460020b8152602001620d89e71961089f90612808565b60020b815263ffffffff84166020909101528660006108c1620d89e719612808565b60020b815260208082019290925260409081016000208351815493850151949092015163ffffffff1666010000000000000269ffffffff0000000000001962ffffff95861663010000000265ffffffffffff199095169590931694909417929092171691909117905573__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba361094e838661282a565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af415801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190612872565b6001860180546001600160a01b0319166001600160a01b039290921691909117905573__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba36109f78386612896565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190612872565b60019490940180546001600160a01b0319166001600160a01b03909516949094179093555050505050565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260016001607f1b036001600160801b0384161115610aff5760405163581a12d760e11b815260040160405180910390fd5b826001600160801b03168860e0015160016001607f1b03610b2091906128dd565b6001600160801b03161015610b485760405163581a12d760e11b815260040160405180910390fd5b60008a60008860020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160189054906101000a90046001600160401b03166001600160401b03166001600160401b031681525050905060008b60008760020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152505090508a60008960020b60020b815260200190815260200160002060000160009054906101000a900460020b60020b8b60008a60020b60020b815260200190815260200160002060000160039054906101000a900460020b60020b14610ecd578315610ea4578482600001818151610e799190612905565b600f0b905250602082018051869190610e9390839061294b565b6001600160801b03169052506110eb565b610eae8286611cb8565b91508482600001818151610ec29190612976565b600f0b9052506110eb565b8315610f27576040518060e0016040528086610ee8906129bc565b600f0b81526001600160801b0387166020820152600060408201819052606082018190526080820181905260a0820181905260c0909101529150610f67565b6040805160e081018252600f87900b8152600060208201819052918101829052606081018290526080810182905260a0810182905260c081019190915291505b600289810b600090815260208d9052604090205463010000009004810b9087900b811315610f96575085610fbb565b600281900b600090815260208d905260409020805462ffffff191662ffffff8b161790555b8860020b8a60020b121580610fd657508060020b8960020b12155b15610ff45760405163044f7fb160e51b815260040160405180910390fd5b60405180606001604052808b60020b81526020018260020b8152602001600063ffffffff168152508c60008b60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550905050888c60008c60020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550505b600286810b600090815260208d9052604090205463010000008104820b910b1461117b57831561113e5761111f8186611cb8565b905084816000018181516111339190612976565b600f0b9052506113ca565b84816000018181516111509190612905565b600f0b90525060208101805186919061116a90839061294b565b6001600160801b03169052506113ca565b83156111c457506040805160e081018252600f86900b8152600060208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152611214565b6040518060e00160405280866111d9906129bc565b600f0b81526001600160801b0387166020820152600060408201819052606082018190526080820181905260a0820181905260c09091015290505b600287810b600090815260208d90526040902054810b9089900b8112156112385750875b600288810b600090815260208e9052604090205463010000008104820b910b148061126957508660020b8860020b13155b8061127a57508060020b8760020b13155b15611298576040516329f7012160e21b815260040160405180910390fd5b60405180606001604052808260020b81526020018960020b8152602001600063ffffffff168152508c60008960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550905050868c60008360020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550868c60008a60020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff160217905550505b818c60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160401b0302191690836001600160401b0316021790555060c08201518160020160186101000a8154816001600160401b0302191690836001600160401b03160217905550905050808c60008860020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160401b0302191690836001600160401b0316021790555060c08201518160020160186101000a8154816001600160401b0302191690836001600160401b0316021790555090505089925050509998505050505050505050565b600286810b600090815260208b8152604091829020825160e0810184528154600f81900b82526001600160801b03600160801b91829004811694830194909452600183015480851695830195909552938490048316606082015293015490811660808401526001600160401b03918104821660a0840152600160c01b90041660c082015282156117db5783156117885780602001516001600160801b0316856001600160801b03160361174b576117488160006120e5565b90505b848160000181815161175d9190612976565b600f0b9052506020810180518691906117779083906128dd565b6001600160801b0316905250611838565b60208101518151611799919061294b565b6001600160801b0316856001600160801b0316036117be576117bc8160016120e5565b505b84816000018181516117d09190612905565b600f0b905250611838565b8315611838578560020b8760020b036118195780604001516001600160801b0316856001600160801b031603611819576118168160006120e5565b90505b848160400181815161182b91906128dd565b6001600160801b03169052505b808a60008960020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160401b0302191690836001600160401b0316021790555060c08201518160020160186101000a8154816001600160401b0302191690836001600160401b031602179055509050505060008960008760020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160189054906101000a90046001600160401b03166001600160401b03166001600160401b03168152505090508115611bb8578315611b505760208101518151611b0e919061294b565b6001600160801b0316856001600160801b031603611b3357611b318160016120e5565b505b8481600001818151611b459190612905565b600f0b905250611c14565b80602001516001600160801b0316856001600160801b031603611b7b57611b788160006120e5565b90505b8481600001818151611b8d9190612976565b600f0b905250602081018051869190611ba79083906128dd565b6001600160801b0316905250611c14565b83611c14578560020b8760020b03611bf55780604001516001600160801b0316856001600160801b031603611bf557611bf28160006120e5565b90505b8481604001818151611c0791906128dd565b6001600160801b03169052505b600295860b600090815260209a8b5260409081902082519b8301516001600160801b039c8d16600160801b918e168202178255918301516060840151908d16908d16830217600182015560808301519701805460a084015160c09094015198909c166001600160c01b0319909c169b909b176001600160401b03928316909102176001600160c01b0316600160c01b91909616029490941790975550505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260a08301516001600160401b0316156120de5760208301518351600091611d1791612976565b6001600160801b031690506000670de0b6b3a76400008560a001516001600160401b031686606001516001600160801b0316611d5391906127ba565b611d5d91906129d9565b90508085606001818151611d7191906128dd565b6001600160801b031690525060405163554d048960e11b81526004810182905260248101839052600160601b604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a09129082908290606401602060405180830381865af4158015611de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e09919061278b565b600160601b611e216001600160801b038a16886127d9565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af4158015611e6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8e919061278b565b6001600160801b03169050670de0b6b3a764000086606001516001600160801b031682611ebb91906127ba565b611ec591906129d9565b6001600160401b031660a0870152606086018051829190611ee790839061294b565b6001600160801b0316905250505060c08401516001600160401b0316156120dc576000670de0b6b3a76400008560c001516001600160401b031686608001516001600160801b0316611f3991906127ba565b611f4391906129d9565b90508085608001818151611f5791906128dd565b6001600160801b031690525060405163554d048960e11b81526004810182905260248101839052600160601b604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a09129082908290606401602060405180830381865af4158015611fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fef919061278b565b600160601b6120076001600160801b038a16886127d9565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af4158015612050573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612074919061278b565b6001600160801b03169050670de0b6b3a764000086608001516001600160801b0316826120a191906127ba565b6120ab91906129d9565b6001600160401b031660c08701526080860180518291906120cd90839061294b565b6001600160801b031690525050505b505b5090919050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152811561220a5760a08301516001600160401b03161561220557670de0b6b3a76400008360a001516001600160401b031684606001516001600160801b031661216691906127ba565b61217091906129d9565b8360600181815161218191906128dd565b6001600160801b0316905250600060a084015260c08301516001600160401b03161561220557670de0b6b3a76400008360c001516001600160401b031684608001516001600160801b03166121d691906127ba565b6121e091906129d9565b836080018181516121f191906128dd565b6001600160801b0316905250600060c08401525b6120de565b60a08301516001600160401b0316156122df57670de0b6b3a76400008360a001516001600160401b031684606001516001600160801b031661224c91906127ba565b61225691906129d9565b6001600160801b03166060840152670de0b6b3a764000060a084015260c08301516001600160401b03161561220557670de0b6b3a76400008360c001516001600160401b031684608001516001600160801b03166122b491906127ba565b6122be91906129d9565b6001600160801b03166080840152670de0b6b3a764000060c08401526120de565b5050600060608201819052608082015290565b8035801515811461230257600080fd5b919050565b6001600160a01b038116811461231c57600080fd5b50565b803561230281612307565b60405161012081016001600160401b038111828210171561235b57634e487b7160e01b600052604160045260246000fd5b60405290565b803560ff8116811461230257600080fd5b803561ffff8116811461230257600080fd5b8035600181900b811461230257600080fd5b8035600281900b811461230257600080fd5b803563ffffffff8116811461230257600080fd5b80356001600160801b038116811461230257600080fd5b600061012082840312156123e657600080fd5b6123ee61232a565b90506123f982612361565b815261240760208301612372565b602082015261241860408301612384565b604082015261242960608301612372565b606082015261243a60808301612396565b608082015261244b60a083016123a8565b60a082015261245c60c083016123a8565b60c082015261246d60e083016123bc565b60e082015261010061248081840161231f565b9082015292915050565b6000806000808486036101e08112156124a257600080fd5b6124ab866122f2565b945060208601356124bb81612307565b93506124ca87604088016123d3565b9250608061015f19820112156124df57600080fd5b50604051608081018181106001600160401b038211171561251057634e487b7160e01b600052604160045260246000fd5b6040908152610160870135825261018087013560208301526101a0870135908201526101c0909501356060860152509194909350909190565b60008060008060008060c0878903121561256257600080fd5b86359550602087013594506040870135935061258060608801612396565b925061258e608088016123a8565b915061259c60a08801612396565b90509295509295509295565b60008060008060008060008060006102208a8c0312156125c757600080fd5b8935985060208a013597506125df8b60408c016123d3565b96506125ee6101608b01612396565b95506125fd6101808b01612396565b945061260c6101a08b01612396565b935061261b6101c08b01612396565b925061262a6101e08b016123bc565b91506126396102008b016122f2565b90509295985092959850929598565b60006101208201905060ff835116825261ffff6020840151166020830152604083015161267a604084018260010b9052565b506060830151612690606084018261ffff169052565b5060808301516126a5608084018260020b9052565b5060a08301516126bd60a084018263ffffffff169052565b5060c08301516126d560c084018263ffffffff169052565b5060e08301516126f060e08401826001600160801b03169052565b50610100928301516001600160a01b0316919092015290565b60008060008060008060008060006102208a8c03121561272857600080fd5b8935985060208a013597506127408b60408c016123d3565b965061274f6101608b01612396565b955061275e6101808b01612396565b945061276d6101a08b016123bc565b935061277c6101c08b016122f2565b925061262a6101e08b016122f2565b60006020828403121561279d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156127d4576127d46127a4565b500290565b600082198211156127ec576127ec6127a4565b500190565b600082821015612803576128036127a4565b500390565b60008160020b627fffff198103612821576128216127a4565b60000392915050565b60008160020b8360020b6000811281627fffff1901831281151615612851576128516127a4565b81627fffff018313811615612868576128686127a4565b5090039392505050565b60006020828403121561288457600080fd5b815161288f81612307565b9392505050565b60008160020b8360020b6000821282627fffff038213811516156128bc576128bc6127a4565b82627fffff190382128116156128d4576128d46127a4565b50019392505050565b60006001600160801b03838116908316818110156128fd576128fd6127a4565b039392505050565b600081600f0b83600f0b600081128160016001607f1b031901831281151615612930576129306127a4565b8160016001607f1b03018313811615612868576128686127a4565b60006001600160801b0380831681851680830382111561296d5761296d6127a4565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b03038213811516156129a0576129a06127a4565b8260016001607f1b03190382128116156128d4576128d46127a4565b600081600f0b60016001607f1b03198103612821576128216127a4565b6000826129f657634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122053ab7e253f0e4afaa53848313048b79d09109e667c9300388b0a200a20514e3364736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

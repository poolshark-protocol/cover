/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "liquidityDeltaMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidityDeltaMinusInactive",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "amountInDeltaCarryPercent",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "amountOutDeltaCarryPercent",
            type: "uint64",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "tick",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "previousTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "nextTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "accumEpochLast",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidityDeltaPlusStashPercent",
            type: "uint64",
          },
        ],
        internalType: "struct ICoverPoolStructs.TickNode",
        name: "tickNode",
        type: "tuple",
      },
    ],
    name: "diluteCarry",
    outputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "liquidityDeltaMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidityDeltaMinusInactive",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "amountInDeltaCarryPercent",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "amountOutDeltaCarryPercent",
            type: "uint64",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "previousTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "nextTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "accumEpochLast",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidityDeltaPlusStashPercent",
            type: "uint64",
          },
        ],
        internalType: "struct ICoverPoolStructs.TickNode",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
          {
            internalType: "contract IRangePool",
            name: "inputPool",
            type: "IRangePool",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x613d3c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c80635a9d606f1461006657806381d2bae2146100d45780638aa596c6146100f6578063c3663fda14610123578063cdb98d0714610144575b600080fd5b6100796100743660046133c8565b610164565b6040805183518152602080850151908201528382015191810191909152606080840151908201526080808401519082015260a0808401519082015260c0928301519281019290925260e0820152610100015b60405180910390f35b8180156100e057600080fd5b506100f46100ef366004613493565b610b5a565b005b81801561010257600080fd5b50610116610111366004613549565b6113c8565b6040516100cb919061358a565b610136610131366004613716565b6119ce565b6040516100cb9291906137d3565b81801561015057600080fd5b5061011661015f36600461388f565b611e77565b6101a46040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000856101d55782516001600160a01b0386161115806101c357508251155b806101d057506040830151155b6101e4565b82516001600160a01b03861610155b156101f457508190506000610b51565b6101408401516020850151606086015160808601516001600160a01b0390931692839261ffff90811692169081101561023557876060015161ffff1661023b565b86608001515b61024b90655af3107a400061394d565b6102559190613982565b61025f919061394d565b60a08601819052670de0b6b3a76400009061027a9082613996565b8660400151610289919061394d565b6102939190613982565b6060860152871561070c5780876001600160a01b031611156102bb57506001600160a01b0386165b60208501518551604051639026147360e01b815260048101929092526024820183905260448201526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d91906139ae565b90508086606001511161057a576020860151865160608881015192901b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f918591610396908261394d565b6103a09087613996565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d91906139ae565b60208901518951604051630724718960e41b815260048101929092526024820183905260448201526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f91906139ae565b6001600160a01b0382168952606089015160408a015191975073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9163aa9a091291906104df908761394d565b6104e99190613982565b6104f390866139c7565b60208b01516040516001600160e01b031960e085901b1681526004810192909252600160601b60248301526044820152606401602060405180830381865af4158015610543573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056791906139ae565b60c0890152505060006040870152610706565b80156107065760208601518651604051630724718960e41b815260048101929092526024820184905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af41580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f91906139ae565b8287526060870151604088015191955073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9163aa9a09129190610646908561394d565b6106509190613982565b61065a90846139c7565b60208901516040516001600160e01b031960e085901b1681526004810192909252600160601b60248301526044820152606401602060405180830381865af41580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce91906139ae565b60c0870152606086015160408701516106e7908361394d565b6106f19190613982565b8660400181815161070291906139c7565b9052505b50610b4b565b80876001600160a01b0316101561072957506001600160a01b0386165b60208501518551604051630724718960e41b815260048101929092526024820152604481018290526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb91906139ae565b9050808660600151116109b2576060860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af4158015610835573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085991906139ae565b87516108659190613996565b60208801518851604051639026147360e01b815260048101929092526024820152604481018290526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af41580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f791906139ae565b8188526040880151606089015191965073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9163aa9a09129161092c916139c7565b60208a01516040516001600160e01b031960e085901b1681526004810192909252600160601b60248301526044820152606401602060405180830381865af415801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906139ae565b60c08801525060006040870152610b49565b8015610b495760208601518651604051639026147360e01b815260048101929092526024820152604481018490526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4791906139ae565b8287526060870151604088015191955073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9163aa9a09129190610a7e908561394d565b610a889190613982565b610a9290846139c7565b60208901516040516001600160e01b031960e085901b1681526004810192909252600160601b60248301526044820152606401602060405180830381865af4158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0691906139ae565b60c087015260608601516040870151610b1f908361394d565b610b299190613982565b610b34906001613996565b86604001818151610b4591906139c7565b9052505b505b84935050505b94509492505050565b600287810b600090815260208c8152604091829020825160e0810184528154600f81900b82526001600160801b03600160801b91829004811694830194909452600183015480851695830195909552938490048316606082015293015490811660808401526001600160401b03918104821660a0840152600160c01b90041660c08201528215610d97578315610c525780602001516001600160801b0316866001600160801b031603610c1557610c12816000612cc9565b90505b8581600001818151610c2791906139de565b600f0b905250602081018051879190610c41908390613a2d565b6001600160801b0316905250610e49565b60208101518151610c6391906139de565b600f0b86600f0b03610c7c57610c7a816001612cc9565b505b600288810b600090815260208c81526040918290208251608081018452905480850b82526301000000810490940b91810191909152600160301b830463ffffffff1691810191909152600160501b9091046001600160401b03166060820152610ce89082908888612ed9565b600289900b600090815260208c81526040918290208351815492850151938501516060909501516001600160401b0316600160501b0267ffffffffffffffff60501b1963ffffffff909616600160301b0295909516600160301b600160901b031962ffffff95861663010000000265ffffffffffff199095169590921694909417929092179190911691909117919091179055805186908290610d8c908390613a55565b600f0b905250610e49565b8315610e49578660020b8860020b03610dd55780604001516001600160801b0316866001600160801b031603610dd557610dd2816000612cc9565b90505b610e18604051806040016040528060148152602001733637bbb2b9103a34b1b59034b730b1ba34bb329d60611b81525082604001516001600160801b0316612fff565b610e2a866001600160801b0316613048565b8581604001818151610e3c9190613a2d565b6001600160801b03169052505b808b60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160401b0302191690836001600160401b0316021790555060c08201518160020160186101000a8154816001600160401b0302191690836001600160401b031602179055509050505060008a60008860020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820160189054906101000a90046001600160401b03166001600160401b03166001600160401b031681525050905081156112c757831561125f576020810151815161111f9190613aa5565b6001600160801b0316866001600160801b03160361114457611142816001612cc9565b505b600287810b600090815260208c81526040918290208251608081018452905480850b82526301000000810490940b91810191909152600160301b830463ffffffff1691810191909152600160501b9091046001600160401b031660608201526111b09082908888612ed9565b600288900b600090815260208c81526040918290208351815492850151938501516060909501516001600160401b0316600160501b0267ffffffffffffffff60501b1963ffffffff909616600160301b0295909516600160301b600160901b031962ffffff95861663010000000265ffffffffffff199095169590921694909417929092179190911691909117919091179055805186908290611254908390613a55565b600f0b905250611323565b80602001516001600160801b0316866001600160801b03160361128a57611287816000612cc9565b90505b858160000181815161129c91906139de565b600f0b9052506020810180518791906112b6908390613a2d565b6001600160801b0316905250611323565b83611323578660020b8860020b036113045780604001516001600160801b0316866001600160801b03160361130457611301816000612cc9565b90505b85816040018181516113169190613a2d565b6001600160801b03169052505b600296870b600090815260209b8c5260409081902082519c8301516001600160801b039d8e16600160801b918f168202178255918301516060840151908e16908e16830217600182015560808301519801805460a084015160c09094015199909d166001600160c01b0319909d169c909c176001600160401b03928316909102176001600160c01b0316600160c01b9190971602959095179098555050505050505050565b6113d0613158565b815160ff166000036119c6576101608201516040808401519051630d979ec560e11b81526001600160a01b03909216600483015261ffff16602482015273__$657d9a64028a7d57fe1695a914827e9925$__90631b2f3d8a906044016040805180830381865af4158015611448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146c9190613ad0565b60020b608084015260ff168083526001036119c6576020820151608083015160019190910b9061149d908290613b0a565b6114a79190613b44565b60020b6080830181905260405163986cfba360e01b8152600481019190915273__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af4158015611502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115269190613bd1565b6001600160a01b031661014083015260a082015161154a9063ffffffff16436139c7565b63ffffffff1660e083015260016101008301526040805160808101909152620d89e719808252602082019061157e90613bee565b60020b815260200183610100015163ffffffff16815260200160006001600160401b0316815250856000846080015160020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b031602179055509050506040518060800160405280620d89e71960020b8152602001836080015160020b815260200183610100015163ffffffff16815260200160006001600160401b0316815250856000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b031602179055509050506040518060800160405280836080015160020b8152602001620d89e71961179590613bee565b60020b815261010084015163ffffffff1660208201526000604090910181905286906117c4620d89e719613bee565b60020b815260208082019290925260409081016000208351815485850151938601516060909601516001600160401b0316600160501b0267ffffffffffffffff60501b1963ffffffff909716600160301b0296909616600160301b600160901b031962ffffff95861663010000000265ffffffffffff19909316959093169490941717169190911792909217909155820151608083015173__$b52f7ddb7db4526c8b5c81c46a9292f776$__9163986cfba3916118849160010b90613c10565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af41580156118c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e79190613bd1565b8460010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555073__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba3836020015160010b84608001516119409190613c4e565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af415801561197f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a39190613bd1565b6001840180546001600160a01b0319166001600160a01b03929092169190911790555b509392505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408051608081018252600080825260208201819052918101829052606081019190915260a08401516001600160401b031615611e6f5760208401518451600091611a51916139de565b6001600160801b031690506000670de0b6b3a76400008286606001516001600160401b0316611a80919061394d565b611a8a9190613982565b9050670de0b6b3a76400008286606001516001600160401b0316611aae919061394d565b611ab89190613982565b611ac290836139c7565b91506000670de0b6b3a76400008760a001516001600160401b031688606001516001600160801b0316611af5919061394d565b611aff9190613982565b90508087606001818151611b139190613a2d565b6001600160801b031690525060405163554d048960e11b81526004810182905260248101849052600160601b604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a09129082908290606401602060405180830381865af4158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab91906139ae565b600160601b611bba8789613996565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af4158015611c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2791906139ae565b6001600160801b03169050670de0b6b3a764000088606001516001600160801b031682611c54919061394d565b611c5e9190613982565b6001600160401b031660a0890152606088018051829190611c80908390613aa5565b6001600160801b0316905250505060c08601516001600160401b031615611e6c576000670de0b6b3a76400008760c001516001600160401b031688608001516001600160801b0316611cd2919061394d565b611cdc9190613982565b90508087608001818151611cf09190613a2d565b6001600160801b031690525060405163554d048960e11b81526004810182905260248101849052600160601b604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$657d9a64028a7d57fe1695a914827e9925\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TwapOracle.sol:TwapOracle"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TwapOracle.sol:TwapOracle"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

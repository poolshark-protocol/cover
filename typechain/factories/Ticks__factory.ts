/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
          {
            internalType: "contract IRangePool",
            name: "inputPool",
            type: "IRangePool",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61285861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780638aa596c6146100e1578063cdb98d071461010e578063f2f3f2461461012e575b600080fd5b61006e61006936600461214f565b610150565b6040516100d8929190600061012082019050835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015260c084015160c083015260e084015160e0830152826101008301529392505050565b60405180910390f35b8180156100ed57600080fd5b506101016100fc36600461220f565b6108b4565b6040516100d89190612250565b81801561011a57600080fd5b5061010161012936600461234b565b610e15565b81801561013a57600080fd5b5061014e6101493660046123f3565b611bfd565b005b61019860405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000856101c95782516001600160a01b0386161115806101b757508251155b806101c457506060830151155b6101d8565b82516001600160a01b03861610155b156101e8575081905060006108ab565b6101408401516020850151606086015160a08601516001600160a01b0390931692839261ffff90811692169081101561022957876060015161ffff1661022f565b8660a001515b61023f90655af3107a40006124bf565b61024991906124f4565b61025391906124bf565b60c08601819052670de0b6b3a76400009061026e9082612508565b866060015161027d91906124bf565b61028791906124f4565b608086015287156105aa5780876001600160a01b031611156102af57506001600160a01b0386165b60208501518551604051639026147360e01b815260048101929092526024820183905260448201526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af415801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190612520565b9050808660800151116104bc5760208601518651608088015160609290921b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161038c90826124bf565b6103969087612508565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190612520565b60208901518951604051630724718960e41b815260048101929092526024820183905260448201526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190612520565b6001600160a01b03909116885260006060890152604088015160e089015294506105a49050565b80156105a45760208601518651604051630724718960e41b815260048101929092526024820184905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561052d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105519190612520565b828752608087015160608801519195509061056c90836124bf565b61057691906124f4565b866060018181516105879190612539565b9052506060860151604087015161059e9190612539565b60e08701525b506108a5565b80876001600160a01b031610156105c757506001600160a01b0386165b60208501518551604051630724718960e41b815260048101929092526024820152604481018290526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190612520565b9050808660800151116107b0576080860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f79190612520565b87516107039190612508565b60208801518851604051639026147360e01b815260048101929092526024820152604481018290526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190612520565b90875260006060880152604087015160e088015293506108a3565b80156108a35760208601518651604051639026147360e01b815260048101929092526024820152604481018490526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190612520565b828752608087015160608801519195509061086090836124bf565b61086a91906124f4565b610875906001612508565b866060018181516108869190612539565b9052506060860151604087015161089d9190612539565b60e08701525b505b84935050505b94509492505050565b6108bc611ed9565b815160ff16600003610e0d576101608201516040808401519051630d979ec560e11b81526001600160a01b03909216600483015261ffff16602482015273__$657d9a64028a7d57fe1695a914827e9925$__90631b2f3d8a906044016040805180830381865af4158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190612550565b60020b608084015260ff16808352600103610e0d576020820151608083015160019190910b9061098990829061258a565b61099391906125c4565b60020b6080830181905260405163986cfba360e01b8152600481019190915273__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af41580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190612651565b6001600160a01b031661014083015260a0820151610a369063ffffffff1643612539565b63ffffffff1660e083015260016101008301526040805160608101909152620d89e7198082526020820190610a6a90612675565b60020b815260200183610100015163ffffffff16815250856000846080015160020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280620d89e71960020b8152602001836080015160020b815260200183610100015163ffffffff16815250856000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280836080015160020b8152602001620d89e719610c0790612675565b60020b815261010084015163ffffffff16602090910152856000610c2e620d89e719612675565b60020b815260208082019290925260409081016000208351815485850151959093015162ffffff91821665ffffffffffff1990941693909317630100000091909516029390931769ffffffff0000000000001916660100000000000063ffffffff9092169190910217909155820151608083015173__$b52f7ddb7db4526c8b5c81c46a9292f776$__9163986cfba391610ccb9160010b90612697565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e9190612651565b8460020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555073__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba3836020015160010b8460800151610d8791906126df565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190612651565b6002840180546001600160a01b0319166001600160a01b03929092169190911790555b509392505050565b610e1d611ed9565b60016001607f1b036001600160801b0384161115610e4e5760405163581a12d760e11b815260040160405180910390fd5b826001600160801b031688610120015160016001607f1b03610e709190612726565b6001600160801b03161015610e985760405163581a12d760e11b815260040160405180910390fd5b60008a60008860020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008b60008760020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008b60008a60020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008c60008960020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050816000015160020b826020015160020b1461135d578515611340578684600001818151611315919061274e565b600f0b90525060208401805188919061132f908390612794565b6001600160801b031690525061150e565b868460000181815161135291906127bf565b600f0b90525061150e565b85156113ca576040518060a001604052808861137890612805565b600f0b81526001600160801b038916602080830191909152600060408084018290526060808501839052815160808181018452848252948101849052918201839052810191909152910152935061141a565b6040805160a081018252600f89900b815260006020808301829052828401829052606080840183905284516080818101875284825292810184905294850183905284019190915281019190915293505b60028b810b600090815260208f9052604090205463010000009004810b9089900b81131561144957508761146e565b600281900b600090815260208f905260409020805462ffffff191662ffffff8d161790555b8a60020b8c60020b12158061148957508060020b8b60020b12155b156114a75760405163044f7fb160e51b815260040160405180910390fd5b60405180606001604052808d60020b81526020018260020b8152602001600063ffffffff1681525092508a8e60008e60020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550505b806000015160020b816020015160020b1461158357851561154657868360000181815161153b91906127bf565b600f0b90525061179f565b8683600001818151611558919061274e565b600f0b905250602083018051889190611572908390612794565b6001600160801b031690525061179f565b85156115dd576040805160a081018252600f89900b81526000602080830182905282840182905260608084018390528451608081810187528482529281018490529485018390528401919091528101919091529250611640565b6040518060a00160405280886115f290612805565b600f0b81526001600160801b03891660208083019190915260006040808401829052606080850183905281516080818101845284825294810184905291820183905281019190915291015292505b600289810b600090815260208f90526040902054810b908b900b8112156116645750895b8d60008b60020b60020b815260200190815260200160002060000160009054906101000a900460020b60020b8e60008c60020b60020b815260200190815260200160002060000160039054906101000a900460020b60020b14806116ce57508860020b8a60020b13155b806116df57508060020b8960020b13155b156116fd576040516329f7012160e21b815260040160405180910390fd5b60405180606001604052808260020b81526020018b60020b8152602001600063ffffffff168152509150888e60008360020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550888e60008c60020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff160217905550505b838e60008c60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050828e60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050818d60008c60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550905050808d60008a60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050508b9450505050509998505050505050505050565b600287810b600090815260208c8152604091829020825160a0810184528154600f81900b82526001600160801b03600160801b91829004811683860152600184015480821684880152829004811660608085019190915286516080818101895298860154808416825284900483169681019690965260039094015480821696860196909652940490931690820152918101919091528215611cf4578315611cdb578581600001818151611cb091906127bf565b600f0b905250602081018051879190611cca908390612726565b6001600160801b0316905250611cf4565b8581600001818151611ced919061274e565b600f0b9052505b600288810b600090815260208d815260408083208551868401516001600160801b03918216600160801b9183168202178355878401516060808a01519184169184168302919091176001808601919091556080998a0151805181890151908616908616850217868b015580870151908301519085169085168402176003958601558f890b885296859020855160a0810187528154600f81900b825284900485168189015297810154808516898801528390048416888301528551808b018752988101548085168a5283900484169689019690965294909201548082169387019390935291041690830152918201528115611e44578315611e0b578581600001818151611e00919061274e565b600f0b905250611e44565b8581600001818151611e1d91906127bf565b600f0b905250602081018051879190611e37908390612726565b6001600160801b03169052505b600296870b600090815260209b8c526040908190208251838e01516001600160801b03918216600160801b918316820217835584840151606080870151918416918416830291909117600185015560809095015180519f8101519f83169f831682029f909f179a83019a909a55918d01519c909201519b81169b16909602999099176003909501949094555050505050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b80358015158114611f4d57600080fd5b919050565b6001600160a01b0381168114611f6757600080fd5b50565b8035611f4d81611f52565b604051610180810167ffffffffffffffff81118282101715611fa757634e487b7160e01b600052604160045260246000fd5b60405290565b604051610100810167ffffffffffffffff81118282101715611fa757634e487b7160e01b600052604160045260246000fd5b60ff81168114611f6757600080fd5b8035611f4d81611fdf565b8035600181900b8114611f4d57600080fd5b803561ffff81168114611f4d57600080fd5b8060020b8114611f6757600080fd5b8035611f4d8161201d565b803563ffffffff81168114611f4d57600080fd5b80356001600160801b0381168114611f4d57600080fd5b6000610180828403121561207557600080fd5b61207d611f75565b905061208882611fee565b815261209660208301611ff9565b60208201526120a76040830161200b565b60408201526120b86060830161200b565b60608201526120c96080830161202c565b60808201526120da60a08301612037565b60a08201526120eb60c08301612037565b60c08201526120fc60e08301612037565b60e082015261010061210f818401612037565b9082015261012061212183820161204b565b90820152610140612133838201611f6a565b90820152610160612145838201611f6a565b9082015292915050565b6000806000808486036102c081121561216757600080fd5b61217086611f3d565b9450602086013561218081611f52565b935061218f8760408801612062565b92506101006101bf19820112156121a557600080fd5b506121ae611fad565b6101c086013581526101e0860135602082015261020086013560408201526102208601356060820152610240860135608082015261026086013560a082015261028086013560c08201526102a09095013560e0860152509194909350909190565b6000806000806101e0858703121561222657600080fd5b8435935060208501359250604085013591506122458660608701612062565b905092959194509250565b815160ff16815261018081016020830151612270602084018260010b9052565b506040830151612286604084018261ffff169052565b50606083015161229c606084018261ffff169052565b5060808301516122b1608084018260020b9052565b5060a08301516122c960a084018263ffffffff169052565b5060c08301516122e160c084018263ffffffff169052565b5060e08301516122f960e084018263ffffffff169052565b506101008381015163ffffffff1690830152610120808401516001600160801b031690830152610140808401516001600160a01b03908116918401919091526101609384015116929091019190915290565b60008060008060008060008060006102808a8c03121561236a57600080fd5b8935985060208a013597506123828b60408c01612062565b96506101c08a01356123938161201d565b95506101e08a01356123a48161201d565b94506102008a01356123b58161201d565b93506102208a01356123c68161201d565b92506123d56102408b0161204b565b91506123e46102608b01611f3d565b90509295985092959850929598565b6000806000806000806000806000806102a08b8d03121561241357600080fd5b8a35995060208b0135985061242b8c60408d01612062565b97506101c08b013561243c8161201d565b96506101e08b013561244d8161201d565b955061245c6102008c0161204b565b945061246b6102208c0161204b565b935061247a6102408c01611f3d565b92506124896102608c01611f3d565b91506124986102808c01611f3d565b90509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156124d9576124d96124a9565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612503576125036124de565b500490565b6000821982111561251b5761251b6124a9565b500190565b60006020828403121561253257600080fd5b5051919050565b60008282101561254b5761254b6124a9565b500390565b6000806040838503121561256357600080fd5b825161256e81611fdf565b602084015190925061257f8161201d565b809150509250929050565b60008160020b8360020b806125a1576125a16124de565b627fffff198214600019821416156125bb576125bb6124a9565b90059392505050565b60008160020b8360020b627fffff6000821360008413838304851182821616156125f0576125f06124a9565b627fffff19600085128281168783058712161561260f5761260f6124a9565b6000871292508582058712848416161561262b5761262b6124a9565b85850587128184161615612641576126416124a9565b5050509290910295945050505050565b60006020828403121561266357600080fd5b815161266e81611f52565b9392505050565b60008160020b627fffff19810361268e5761268e6124a9565b60000392915050565b60008160020b8360020b6000811281627fffff19018312811516156126be576126be6124a9565b81627fffff0183138116156126d5576126d56124a9565b5090039392505050565b60008160020b8360020b6000821282627fffff03821381151615612705576127056124a9565b82627fffff1903821281161561271d5761271d6124a9565b50019392505050565b60006001600160801b0383811690831681811015612746576127466124a9565b039392505050565b600081600f0b83600f0b600081128160016001607f1b031901831281151615612779576127796124a9565b8160016001607f1b030183138116156126d5576126d56124a9565b60006001600160801b038083168185168083038211156127b6576127b66124a9565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b03038213811516156127e9576127e96124a9565b8260016001607f1b031903821281161561271d5761271d6124a9565b600081600f0b60016001607f1b0319810361268e5761268e6124a956fea2646970667358221220e1d6206d840e6c8a569abbafb281efb913449f69434e3a4d367ba23b3b70f8c064736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$657d9a64028a7d57fe1695a914827e9925\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TwapOracle.sol:TwapOracle"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TwapOracle.sol:TwapOracle"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
          {
            internalType: "contract IRangePool",
            name: "inputPool",
            type: "IRangePool",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x612a1661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780638aa596c6146100e1578063cdb98d071461010e578063f2f3f2461461012e575b600080fd5b61006e6100693660046122b8565b610150565b6040516100d8929190600061012082019050835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015260c084015160c083015260e084015160e0830152826101008301529392505050565b60405180910390f35b8180156100ed57600080fd5b506101016100fc366004612378565b6108b4565b6040516100d891906123b9565b81801561011a57600080fd5b506101016101293660046124b4565b610e15565b81801561013a57600080fd5b5061014e61014936600461255c565b611cc1565b005b61019860405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000856101c95782516001600160a01b0386161115806101b757508251155b806101c457506060830151155b6101d8565b82516001600160a01b03861610155b156101e8575081905060006108ab565b6101408401516020850151606086015160a08601516001600160a01b0390931692839261ffff90811692169081101561022957876060015161ffff1661022f565b8660a001515b61023f90655af3107a4000612628565b610249919061265d565b6102539190612628565b60c08601819052670de0b6b3a76400009061026e9082612671565b866060015161027d9190612628565b610287919061265d565b608086015287156105aa5780876001600160a01b031611156102af57506001600160a01b0386165b60208501518551604051639026147360e01b815260048101929092526024820183905260448201526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af415801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190612689565b9050808660800151116104bc5760208601518651608088015160609290921b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161038c9082612628565b6103969087612671565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190612689565b60208901518951604051630724718960e41b815260048101929092526024820183905260448201526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190612689565b6001600160a01b03909116885260006060890152604088015160e089015294506105a49050565b80156105a45760208601518651604051630724718960e41b815260048101929092526024820184905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561052d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105519190612689565b828752608087015160608801519195509061056c9083612628565b610576919061265d565b8660600181815161058791906126a2565b9052506060860151604087015161059e91906126a2565b60e08701525b506108a5565b80876001600160a01b031610156105c757506001600160a01b0386165b60208501518551604051630724718960e41b815260048101929092526024820152604481018290526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190612689565b9050808660800151116107b0576080860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f79190612689565b87516107039190612671565b60208801518851604051639026147360e01b815260048101929092526024820152604481018290526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190612689565b90875260006060880152604087015160e088015293506108a3565b80156108a35760208601518651604051639026147360e01b815260048101929092526024820152604481018490526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190612689565b82875260808701516060880151919550906108609083612628565b61086a919061265d565b610875906001612671565b8660600181815161088691906126a2565b9052506060860151604087015161089d91906126a2565b60e08701525b505b84935050505b94509492505050565b6108bc612045565b815160ff16600003610e0d576101608201516040808401519051630d979ec560e11b81526001600160a01b03909216600483015261ffff16602482015273__$657d9a64028a7d57fe1695a914827e9925$__90631b2f3d8a906044016040805180830381865af4158015610934573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095891906126b9565b60020b608084015260ff16808352600103610e0d576020820151608083015160019190910b906109899082906126f3565b610993919061272d565b60020b6080830181905260405163986cfba360e01b8152600481019190915273__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af41580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906127ba565b6001600160a01b031661014083015260a0820151610a369063ffffffff16436126a2565b63ffffffff1660e083015260016101008301526040805160608101909152620d89e7198082526020820190610a6a906127de565b60020b815260200183610100015163ffffffff16815250856000846080015160020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280620d89e71960020b8152602001836080015160020b815260200183610100015163ffffffff16815250856000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280836080015160020b8152602001620d89e719610c07906127de565b60020b815261010084015163ffffffff16602090910152856000610c2e620d89e7196127de565b60020b815260208082019290925260409081016000208351815485850151959093015162ffffff91821665ffffffffffff1990941693909317630100000091909516029390931769ffffffff0000000000001916660100000000000063ffffffff9092169190910217909155820151608083015173__$b52f7ddb7db4526c8b5c81c46a9292f776$__9163986cfba391610ccb9160010b90612800565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e91906127ba565b8460020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555073__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba3836020015160010b8460800151610d879190612848565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906127ba565b6002840180546001600160a01b0319166001600160a01b03929092169190911790555b509392505050565b610e1d612045565b60016001607f1b036001600160801b0384161115610e4e5760405163581a12d760e11b815260040160405180910390fd5b826001600160801b031688610120015160016001607f1b03610e70919061288f565b6001600160801b03161015610e985760405163581a12d760e11b815260040160405180910390fd5b60008a60008860020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008b60008760020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008b60008a60020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008c60008960020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050816000015160020b826020015160020b1461138857851561134057868460000181815161131591906128b7565b600f0b90525060208401805188919061132f9083906128fd565b6001600160801b0316905250611359565b86846000018181516113529190612928565b600f0b9052505b600289810b600090815260208f90526040902054810b9089900b0361138357600288900b60208301525b611539565b85156113f5576040518060a00160405280886113a39061296e565b600f0b81526001600160801b0389166020808301919091526000604080840182905260608085018390528151608081810184528482529481018490529182018390528101919091529101529350611445565b6040805160a081018252600f89900b815260006020808301829052828401829052606080840183905284516080818101875284825292810184905294850183905284019190915281019190915293505b60028b810b600090815260208f9052604090205463010000009004810b9089900b811315611474575087611499565b600281900b600090815260208f905260409020805462ffffff191662ffffff8d161790555b8a60020b8c60020b1215806114b457508060020b8b60020b12155b156114d25760405163044f7fb160e51b815260040160405180910390fd5b60405180606001604052808d60020b81526020018260020b8152602001600063ffffffff1681525092508a8e60008e60020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550505b806000015160020b816020015160020b146116475785156115715786836000018181516115669190612928565b600f0b9052506115aa565b868360000181815161158391906128b7565b600f0b90525060208301805188919061159d9083906128fd565b6001600160801b03169052505b6115d56040518060400160405280600a8152602001697469636b20636865636b60b01b815250611f9d565b6115e18860020b611fe3565b6115ed8a60020b611fe3565b60028b810b600090815260208f90526040902054611614916301000000909104900b611fe3565b60028b810b600090815260208f9052604090205463010000009004810b908b900b036116425760028a900b81525b611863565b85156116a1576040805160a081018252600f89900b81526000602080830182905282840182905260608084018390528451608081810187528482529281018490529485018390528401919091528101919091529250611704565b6040518060a00160405280886116b69061296e565b600f0b81526001600160801b03891660208083019190915260006040808401829052606080850183905281516080818101845284825294810184905291820183905281019190915291015292505b600289810b600090815260208f90526040902054810b908b900b8112156117285750895b8d60008b60020b60020b815260200190815260200160002060000160009054906101000a900460020b60020b8e60008c60020b60020b815260200190815260200160002060000160039054906101000a900460020b60020b148061179257508860020b8a60020b13155b806117a357508060020b8960020b13155b156117c1576040516329f7012160e21b815260040160405180910390fd5b60405180606001604052808260020b81526020018b60020b8152602001600063ffffffff168152509150888e60008360020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550888e60008c60020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff160217905550505b838e60008c60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050828e60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050818d60008c60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550905050808d60008a60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050508b9450505050509998505050505050505050565b600287810b600090815260208c8152604091829020825160a0810184528154600f81900b82526001600160801b03600160801b91829004811683860152600184015480821684880152829004811660608085019190915286516080818101895298860154808416825284900483169681019690965260039094015480821696860196909652940490931690820152918101919091528215611db8578315611d9f578581600001818151611d749190612928565b600f0b905250602081018051879190611d8e90839061288f565b6001600160801b0316905250611db8565b8581600001818151611db191906128b7565b600f0b9052505b600288810b600090815260208d815260408083208551868401516001600160801b03918216600160801b9183168202178355878401516060808a01519184169184168302919091176001808601919091556080998a0151805181890151908616908616850217868b015580870151908301519085169085168402176003958601558f890b885296859020855160a0810187528154600f81900b825284900485168189015297810154808516898801528390048416888301528551808b018752988101548085168a5283900484169689019690965294909201548082169387019390935291041690830152918201528115611f08578315611ecf578581600001818151611ec491906128b7565b600f0b905250611f08565b8581600001818151611ee19190612928565b600f0b905250602081018051879190611efb90839061288f565b6001600160801b03169052505b600296870b600090815260209b8c526040908190208251838e01516001600160801b03918216600160801b918316820217835584840151606080870151918416918416830291909117600185015560809095015180519f8101519f83169f831682029f909f179a83019a909a55918d01519c909201519b81169b16909602999099176003909501949094555050505050505050565b611fe081604051602401611fb1919061298b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052612024565b50565b611fe081604051602401611ff991815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316632d5b6cb960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b803580151581146120b957600080fd5b919050565b6001600160a01b0381168114611fe057600080fd5b80356120b9816120be565b604051610180810167ffffffffffffffff8111828210171561211057634e487b7160e01b600052604160045260246000fd5b60405290565b604051610100810167ffffffffffffffff8111828210171561211057634e487b7160e01b600052604160045260246000fd5b60ff81168114611fe057600080fd5b80356120b981612148565b8035600181900b81146120b957600080fd5b803561ffff811681146120b957600080fd5b8060020b8114611fe057600080fd5b80356120b981612186565b803563ffffffff811681146120b957600080fd5b80356001600160801b03811681146120b957600080fd5b600061018082840312156121de57600080fd5b6121e66120de565b90506121f182612157565b81526121ff60208301612162565b602082015261221060408301612174565b604082015261222160608301612174565b606082015261223260808301612195565b608082015261224360a083016121a0565b60a082015261225460c083016121a0565b60c082015261226560e083016121a0565b60e08201526101006122788184016121a0565b9082015261012061228a8382016121b4565b9082015261014061229c8382016120d3565b908201526101606122ae8382016120d3565b9082015292915050565b6000806000808486036102c08112156122d057600080fd5b6122d9866120a9565b945060208601356122e9816120be565b93506122f887604088016121cb565b92506101006101bf198201121561230e57600080fd5b50612317612116565b6101c086013581526101e0860135602082015261020086013560408201526102208601356060820152610240860135608082015261026086013560a082015261028086013560c08201526102a09095013560e0860152509194909350909190565b6000806000806101e0858703121561238f57600080fd5b8435935060208501359250604085013591506123ae86606087016121cb565b905092959194509250565b815160ff168152610180810160208301516123d9602084018260010b9052565b5060408301516123ef604084018261ffff169052565b506060830151612405606084018261ffff169052565b50608083015161241a608084018260020b9052565b5060a083015161243260a084018263ffffffff169052565b5060c083015161244a60c084018263ffffffff169052565b5060e083015161246260e084018263ffffffff169052565b506101008381015163ffffffff1690830152610120808401516001600160801b031690830152610140808401516001600160a01b03908116918401919091526101609384015116929091019190915290565b60008060008060008060008060006102808a8c0312156124d357600080fd5b8935985060208a013597506124eb8b60408c016121cb565b96506101c08a01356124fc81612186565b95506101e08a013561250d81612186565b94506102008a013561251e81612186565b93506102208a013561252f81612186565b925061253e6102408b016121b4565b915061254d6102608b016120a9565b90509295985092959850929598565b6000806000806000806000806000806102a08b8d03121561257c57600080fd5b8a35995060208b013598506125948c60408d016121cb565b97506101c08b01356125a581612186565b96506101e08b01356125b681612186565b95506125c56102008c016121b4565b94506125d46102208c016121b4565b93506125e36102408c016120a9565b92506125f26102608c016120a9565b91506126016102808c016120a9565b90509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561264257612642612612565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261266c5761266c612647565b500490565b6000821982111561268457612684612612565b500190565b60006020828403121561269b57600080fd5b5051919050565b6000828210156126b4576126b4612612565b500390565b600080604083850312156126cc57600080fd5b82516126d781612148565b60208401519092506126e881612186565b809150509250929050565b60008160020b8360020b8061270a5761270a612647565b627fffff1982146000198214161561272457612724612612565b90059392505050565b60008160020b8360020b627fffff60008213600084138383048511828216161561275957612759612612565b627fffff19600085128281168783058712161561277857612778612612565b6000871292508582058712848416161561279457612794612612565b858505871281841616156127aa576127aa612612565b5050509290910295945050505050565b6000602082840312156127cc57600080fd5b81516127d7816120be565b9392505050565b60008160020b627fffff1981036127f7576127f7612612565b60000392915050565b60008160020b8360020b6000811281627fffff190183128115161561282757612827612612565b81627fffff01831381161561283e5761283e612612565b5090039392505050565b60008160020b8360020b6000821282627fffff0382138115161561286e5761286e612612565b82627fffff1903821281161561288657612886612612565b50019392505050565b60006001600160801b03838116908316818110156128af576128af612612565b039392505050565b600081600f0b83600f0b600081128160016001607f1b0319018312811516156128e2576128e2612612565b8160016001607f1b0301831381161561283e5761283e612612565b60006001600160801b0380831681851680830382111561291f5761291f612612565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b030382138115161561295257612952612612565b8260016001607f1b031903821281161561288657612886612612565b600081600f0b60016001607f1b031981036127f7576127f7612612565b600060208083528351808285015260005b818110156129b85785810183015185820160400152820161299c565b818111156129ca576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220564934a0d95f0f3174a23ec23d94fb677095ea55eda58e8be2cb25e1c19dca6164736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$657d9a64028a7d57fe1695a914827e9925\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TwapOracle.sol:TwapOracle"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TwapOracle.sol:TwapOracle"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

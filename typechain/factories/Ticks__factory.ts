/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "PriceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "TickOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_tickSpacing",
        type: "uint24",
      },
    ],
    name: "getMaxLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610fff61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063121f0e0c1461005057806377e0596114610088578063dc47a5c2146100a8575b600080fd5b81801561005c57600080fd5b5061007061006b366004610d80565b6100d3565b60405160029190910b81526020015b60405180910390f35b81801561009457600080fd5b506100706100a3366004610df5565b610346565b6100bb6100b6366004610ea1565b6106d6565b6040516001600160801b03909116815260200161007f565b600284900b60008181526020879052604081209091620d89e71914801590610111575060018101546001600160801b03858116600160801b90920416145b156101dc578054600281810b600090815260208a9052604080822063010000009485900480850b845291909220825465ffffff000000191662ffffff9283169095029490941782558454845462ffffff19169116178355919088810b9086900b0361017e57825460020b94505b5050600286810b600090815260208990526040812080546001600160b01b031916815560018101829055918201556003810180546001600160a01b031990811690915560048201805482169055600590910180549091169055610200565b6001810180546001600160801b03600160801b808304821688900382160291161790555b50600284900b6000908152602087905260409020610221620d89e719610ee3565b60020b8560020b1415801561024c575060018101546001600160801b03858116600160801b90920416145b15610317578054600281810b600090815260208a9052604080822063010000009485900480850b845291909220825465ffffff000000191662ffffff9283169095029490941782558454845462ffffff19169116178355919087810b9086900b036102b957825460020b94505b5050600285810b600090815260208990526040812080546001600160b01b031916815560018101829055918201556003810180546001600160a01b03199081169091556004820180548216905560059091018054909116905561033b565b6001810180546001600160801b03600160801b808304821688900382160291161790555b509095945050505050565b60008460020b8760020b12158061036357508560020b8860020b12155b156103815760405163338d790760e01b815260040160405180910390fd5b600287900b620d89e71913156103aa576040516345bde0e360e11b815260040160405180910390fd5b6103b7620d89e719610ee3565b60020b8560020b13156103dd5760405163093cbe4760e21b815260040160405180910390fd5b600287900b600090815260208c90526040902060010154600160801b90046001600160801b0316801515806104195750600288900b620d89e719145b1561045e576104288582610f05565b600289900b600090815260208e90526040902060010180546001600160801b03928316600160801b029216919091179055610529565b600289810b600090815260208e9052604090208054600182015491926301000000909104900b90600160801b90046001600160801b03161580156104aa575060028b900b620d89e71914155b806104bb57508960020b8b60020b12155b806104cc57508060020b8a60020b12155b156104ea576040516307dfb2f760e01b815260040160405180910390fd5b815465ffffff0000001916630100000062ffffff8c169081029190911790925560020b600090815260208e905260409020805462ffffff191690911790555b50600285900b600090815260208c90526040902060010154600160801b90046001600160801b0316801515806105705750610567620d89e719610ee3565b60020b8660020b145b156105b55761057f8582610f05565b600287900b600090815260208e90526040902060010180546001600160801b03928316600160801b02921691909117905561066c565b600287810b600090815260208e9052604090208054600182015491926301000000909104900b90600160801b90046001600160801b031615806105fe57508760020b8160020b13155b8061060f57508760020b8960020b12155b1561062d576040516315beab4760e01b815260040160405180910390fd5b815465ffffff0000001916630100000062ffffff8a169081029190911790925560020b600090815260208e905260409020805462ffffff191690911790555b600061067784610716565b90508660020b8560020b12801561069457508060020b8760020b13155b156106a1578694506106c5565b8860020b8560020b1280156106bc57508060020b8960020b13155b156106c5578894505b50929b9a5050505050505050505050565b60006106e3826002610f30565b6106f0620d89e719610ee3565b6106fa9190610f71565b6107109062ffffff166001600160801b03610f93565b92915050565b60006401000276a36001600160a01b0383161080610751575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561076f57604051636e4ba61d60e01b815260040160405180910390fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061080357607f810383901c915061080d565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14610a0d57886001600160a01b03166109f282610a1c565b6001600160a01b03161115610a075781610a0f565b80610a0f565b815b9998505050505050505050565b60008060008360020b12610a33578260020b610a40565b8260020b610a4090610fad565b9050610a4f620d89e719610ee3565b62ffffff16811115610a7457604051633e1f710360e21b815260040160405180910390fd5b600081600116600003610a8b57600160801b610a9d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610ad1576ffff97272373d413259a46990580e213a0260801c5b6004821615610af0576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610b0f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610b2e576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610b4d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610b6c576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610b8b576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610bab576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610bcb576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610beb576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610c0b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610c2b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610c4b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610c6b576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610c8b576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610cac576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610ccc576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610ceb576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610d08576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610d29578060001981610d2557610d25610f5b565b0490505b640100000000810615610d3d576001610d40565b60005b60ff16602082901c0192505050919050565b8035600281900b8114610d6457600080fd5b919050565b80356001600160801b0381168114610d6457600080fd5b600080600080600060a08688031215610d9857600080fd5b85359450610da860208701610d52565b9350610db660408701610d52565b9250610dc460608701610d69565b9150610dd260808701610d52565b90509295509295909350565b80356001600160a01b0381168114610d6457600080fd5b6000806000806000806000806000806101408b8d031215610e1557600080fd5b8a35995060208b01359850610e2c60408c01610dde565b9750610e3a60608c01610d52565b9650610e4860808c01610d52565b9550610e5660a08c01610d52565b9450610e6460c08c01610d52565b9350610e7260e08c01610d69565b9250610e816101008c01610d52565b9150610e906101208c01610dde565b90509295989b9194979a5092959850565b600060208284031215610eb357600080fd5b813562ffffff81168114610ec657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008160020b627fffff198103610efc57610efc610ecd565b60000392915050565b60006001600160801b03808316818516808303821115610f2757610f27610ecd565b01949350505050565b600062ffffff80831681851681830481118215151615610f5257610f52610ecd565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600062ffffff80841680610f8757610f87610f5b565b92169190910492915050565b60006001600160801b0380841680610f8757610f87610f5b565b6000600160ff1b8201610fc257610fc2610ecd565b506000039056fea2646970667358221220128297c99f03a39af5de1a0a0a8338fefe5fd9fe480b75f19e4aa5ecfdac769464736f6c634300080d0033";

export class Ticks__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
          {
            internalType: "contract IRangePool",
            name: "inputPool",
            type: "IRangePool",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x612c8d61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780638aa596c6146100c9578063cdb98d07146100f6578063f2f3f24614610116575b600080fd5b61006e610069366004612590565b610138565b6040805183518152602080850151908201528382015191810191909152606080840151908201526080808401519082015260a0808401519082015260c0928301519281019290925260e0820152610100015b60405180910390f35b8180156100d557600080fd5b506100e96100e4366004612644565b6108ee565b6040516100c09190612685565b81801561010257600080fd5b506100e9610111366004612780565b610f02565b81801561012257600080fd5b50610136610131366004612828565b611b2f565b005b6101786040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000856101a95782516001600160a01b03861611158061019757508251155b806101a457506040830151155b6101b8565b82516001600160a01b03861610155b156101c8575081905060006108e5565b6101408401516020850151606086015160808601516001600160a01b0390931692839261ffff90811692169081101561020957876060015161ffff1661020f565b86608001515b61021f90655af3107a40006128f4565b6102299190612929565b61023391906128f4565b60a08601819052670de0b6b3a76400009061024e908261293d565b866040015161025d91906128f4565b6102679190612929565b606086015287156105c05780876001600160a01b0316111561028f57506001600160a01b0386165b60208501518551604051639026147360e01b815260048101929092526024820183905260448201526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af41580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103219190612955565b9050808660600151116104be576020860151865160608881015192901b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161036a90826128f4565b610374908761293d565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e19190612955565b60208901518951604051630724718960e41b815260048101929092526024820183905260448201526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190612955565b6001600160a01b0382168952606089015160408a01519197509061049790856128f4565b6104a19190612929565b6104ab908461296e565b60c08901525050600060408701526105ba565b80156105ba5760208601518651604051630724718960e41b815260048101929092526024820184905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190612955565b828752606087015160408801519195509061056e90836128f4565b6105789190612929565b610582908261296e565b60c08701526060860151604087015161059b90836128f4565b6105a59190612929565b866040018181516105b6919061296e565b9052505b506108df565b80876001600160a01b031610156105dd57506001600160a01b0386165b60208501518551604051630724718960e41b815260048101929092526024820152604481018290526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190612955565b9050808660600151116107d6576060860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190612955565b8751610719919061293d565b60208801518851604051639026147360e01b815260048101929092526024820152604481018290526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab9190612955565b818852604088015160608901519196506107c49161296e565b60c088015250600060408701526108dd565b80156108dd5760208601518651604051639026147360e01b815260048101929092526024820152604481018490526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190612955565b828752606087015160408801519195509061088690836128f4565b6108909190612929565b61089a908261296e565b60c0870152606086015160408701516108b390836128f4565b6108bd9190612929565b6108c890600161293d565b866040018181516108d9919061296e565b9052505b505b84935050505b94509492505050565b6108f661231e565b815160ff16600003610efa576101608201516040808401519051630d979ec560e11b81526001600160a01b03909216600483015261ffff16602482015273__$657d9a64028a7d57fe1695a914827e9925$__90631b2f3d8a906044016040805180830381865af415801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190612985565b60020b608084015260ff16808352600103610efa576020820151608083015160019190910b906109c39082906129bf565b6109cd91906129f9565b60020b6080830181905260405163986cfba360e01b8152600481019190915273__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af4158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190612a86565b6001600160a01b031661014083015260a0820151610a709063ffffffff164361296e565b63ffffffff1660e083015260016101008301526040805160808101909152620d89e7198082526020820190610aa490612aaa565b60020b815260200183610100015163ffffffff16815260200160006001600160801b0316815250856000846080015160020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600a6101000a8154816001600160801b0302191690836001600160801b031602179055509050506040518060800160405280620d89e71960020b8152602001836080015160020b815260200183610100015163ffffffff16815260200160006001600160801b0316815250856000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600a6101000a8154816001600160801b0302191690836001600160801b031602179055509050506040518060800160405280836080015160020b8152602001620d89e719610cbb90612aaa565b60020b815261010084015163ffffffff166020820152600060409091018190528690610cea620d89e719612aaa565b60020b815260208082019290925260409081016000208351815485850151938601516060909601516001600160801b0316600160501b026fffffffffffffffffffffffffffffffff60501b1963ffffffff909716660100000000000002969096166601000000000000600160d01b031962ffffff95861663010000000265ffffffffffff19909316959093169490941717169190911792909217909155820151608083015173__$b52f7ddb7db4526c8b5c81c46a9292f776$__9163986cfba391610db89160010b90612acc565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610df7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1b9190612a86565b8460010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555073__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba3836020015160010b8460800151610e749190612b14565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610eb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed79190612a86565b6001840180546001600160a01b0319166001600160a01b03929092169190911790555b509392505050565b610f0a61231e565b60016001607f1b036001600160801b0384161115610f3b5760405163581a12d760e11b815260040160405180910390fd5b826001600160801b031688610120015160016001607f1b03610f5d9190612b5b565b6001600160801b03161015610f855760405163581a12d760e11b815260040160405180910390fd5b60008a60008860020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016003820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681525050905060008b60008760020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016003820160009054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505090508a60008960020b60020b815260200190815260200160002060000160009054906101000a900460020b60020b8b60008a60020b60020b815260200190815260200160002060000160039054906101000a900460020b60020b146112fe5783156112e15784826000018181516112b69190612b83565b600f0b9052506020820180518691906112d0908390612bc9565b6001600160801b0316905250611559565b84826000018181516112f39190612bf4565b600f0b905250611559565b8315611358576040518060e001604052808661131990612c3a565b600f0b81526001600160801b0387166020820152600060408201819052606082018190526080820181905260a0820181905260c0909101529150611398565b6040805160e081018252600f87900b8152600060208201819052918101829052606081018290526080810182905260a0810182905260c081019190915291505b600289810b600090815260208d9052604090205463010000009004810b9087900b8113156113c75750856113ec565b600281900b600090815260208d905260409020805462ffffff191662ffffff8b161790555b8860020b8a60020b12158061140757508060020b8960020b12155b156114255760405163044f7fb160e51b815260040160405180910390fd5b60405180608001604052808b60020b81526020018260020b8152602001600063ffffffff16815260200160006001600160801b03168152508c60008b60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600a6101000a8154816001600160801b0302191690836001600160801b03160217905550905050888c60008c60020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550505b600286810b600090815260208d9052604090205463010000008104820b910b146115dd5783156115a05784816000018181516115959190612bf4565b600f0b905250611869565b84816000018181516115b29190612b83565b600f0b9052506020810180518691906115cc908390612bc9565b6001600160801b0316905250611869565b831561162657506040805160e081018252600f86900b8152600060208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152611676565b6040518060e001604052808661163b90612c3a565b600f0b81526001600160801b0387166020820152600060408201819052606082018190526080820181905260a0820181905260c09091015290505b600287810b600090815260208d90526040902054810b9089900b81121561169a5750875b600288810b600090815260208e9052604090205463010000008104820b910b14806116cb57508660020b8860020b13155b806116dc57508060020b8760020b13155b156116fa576040516329f7012160e21b815260040160405180910390fd5b60405180608001604052808260020b81526020018960020b8152602001600063ffffffff16815260200160006001600160801b03168152508c60008960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600a6101000a8154816001600160801b0302191690836001600160801b03160217905550905050868c60008360020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550868c60008a60020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff160217905550505b818c60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c08201518160030160006101000a8154816001600160801b0302191690836001600160801b03160217905550905050808c60008860020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c08201518160030160006101000a8154816001600160801b0302191690836001600160801b0316021790555090505089925050509998505050505050505050565b600287810b600090815260208c8152604091829020825160e0810184528154600f81900b82526001600160801b03600160801b91829004811694830194909452600183015480851695830195909552938490048316606082015293810154808316608086015292909204811660a08401526003909101541660c082015283611c3b57600288900b600090815260208b9052604090208054869190600a90611be7908490600160501b90046001600160801b0316612b5b565b82546101009290920a6001600160801b0381810219909316918316021790915560028a900b600090815260208d90526040812054600160501b900490911690039050611c3b57611c38816001612239565b90505b8215611ccc578315611caf5780602001516001600160801b0316866001600160801b031603611c7257611c6f816000612239565b90505b8581600001818151611c849190612bf4565b600f0b905250602081018051879190611c9e908390612b5b565b6001600160801b0316905250611d29565b8581600001818151611cc19190612b83565b600f0b905250611d29565b8315611d29578660020b8860020b03611d0a5780604001516001600160801b0316866001600160801b031603611d0a57611d07816000612239565b90505b8581604001818151611d1c9190612b5b565b6001600160801b03169052505b808b60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160006101000a8154816001600160801b0302191690836001600160801b0316021790555060a08201518160020160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c08201518160030160006101000a8154816001600160801b0302191690836001600160801b031602179055509050505060008a60008860020b60020b81526020019081526020016000206040518060e00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016002820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016003820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681525050905083156120b157600287900b600090815260208b9052604090205461201590600160501b90046001600160801b03166122b5565b612027856001600160801b03166122b5565b600287900b600090815260208b9052604090208054869190600a9061205d908490600160501b90046001600160801b0316612b5b565b82546101009290920a6001600160801b03818102199093169183160217909155600289900b600090815260208d90526040812054600160501b9004909116900390506120b1576120ae816001612239565b90505b81156121425783156120da5785816000018181516120cf9190612b83565b600f0b90525061219e565b80602001516001600160801b0316866001600160801b03160361210557612102816000612239565b90505b85816000018181516121179190612bf4565b600f0b905250602081018051879190612131908390612b5b565b6001600160801b031690525061219e565b8361219e578660020b8860020b0361217f5780604001516001600160801b0316866001600160801b03160361217f5761217c816000612239565b90505b85816040018181516121919190612b5b565b6001600160801b03169052505b600296870b600090815260209b8c5260409081902082519c8301516001600160801b039d8e16600160801b918f168202178255918301516060840151908e16908e168302176001820155608083015160a0840151908e16908e16909202919091179781019790975560c00151600390960180546fffffffffffffffffffffffffffffffff191696909a16959095179098555050505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152811561229f5760a08301516001600160801b03161561229a57600060a0840181905260c08401525b6122ae565b60006060840181905260808401525b5090919050565b6122fa816040516024016122cb91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b1790526122fd565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b8035801515811461239257600080fd5b919050565b6001600160a01b03811681146122fa57600080fd5b803561239281612397565b604051610180810167ffffffffffffffff811182821017156123e957634e487b7160e01b600052604160045260246000fd5b60405290565b60405160e0810167ffffffffffffffff811182821017156123e957634e487b7160e01b600052604160045260246000fd5b60ff811681146122fa57600080fd5b803561239281612420565b8035600181900b811461239257600080fd5b803561ffff8116811461239257600080fd5b8060020b81146122fa57600080fd5b80356123928161245e565b803563ffffffff8116811461239257600080fd5b80356001600160801b038116811461239257600080fd5b600061018082840312156124b657600080fd5b6124be6123b7565b90506124c98261242f565b81526124d76020830161243a565b60208201526124e86040830161244c565b60408201526124f96060830161244c565b606082015261250a6080830161246d565b608082015261251b60a08301612478565b60a082015261252c60c08301612478565b60c082015261253d60e08301612478565b60e0820152610100612550818401612478565b9082015261012061256283820161248c565b908201526101406125748382016123ac565b908201526101606125868382016123ac565b9082015292915050565b6000806000808486036102a08112156125a857600080fd5b6125b186612382565b945060208601356125c181612397565b93506125d087604088016124a3565b925060e06101bf19820112156125e557600080fd5b506125ee6123ef565b6101c086013581526101e0860135602082015261020086013560408201526102208601356060820152610240860135608082015261026086013560a08201526102809095013560c0860152509194909350909190565b6000806000806101e0858703121561265b57600080fd5b84359350602085013592506040850135915061267a86606087016124a3565b905092959194509250565b815160ff168152610180810160208301516126a5602084018260010b9052565b5060408301516126bb604084018261ffff169052565b5060608301516126d1606084018261ffff169052565b5060808301516126e6608084018260020b9052565b5060a08301516126fe60a084018263ffffffff169052565b5060c083015161271660c084018263ffffffff169052565b5060e083015161272e60e084018263ffffffff169052565b506101008381015163ffffffff1690830152610120808401516001600160801b031690830152610140808401516001600160a01b03908116918401919091526101609384015116929091019190915290565b60008060008060008060008060006102808a8c03121561279f57600080fd5b8935985060208a013597506127b78b60408c016124a3565b96506101c08a01356127c88161245e565b95506101e08a01356127d98161245e565b94506102008a01356127ea8161245e565b93506102208a01356127fb8161245e565b925061280a6102408b0161248c565b91506128196102608b01612382565b90509295985092959850929598565b6000806000806000806000806000806102a08b8d03121561284857600080fd5b8a35995060208b013598506128608c60408d016124a3565b97506101c08b01356128718161245e565b96506101e08b01356128828161245e565b95506128916102008c0161248c565b94506128a06102208c0161248c565b93506128af6102408c01612382565b92506128be6102608c01612382565b91506128cd6102808c01612382565b90509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561290e5761290e6128de565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261293857612938612913565b500490565b60008219821115612950576129506128de565b500190565b60006020828403121561296757600080fd5b5051919050565b600082821015612980576129806128de565b500390565b6000806040838503121561299857600080fd5b82516129a381612420565b60208401519092506129b48161245e565b809150509250929050565b60008160020b8360020b806129d6576129d6612913565b627fffff198214600019821416156129f0576129f06128de565b90059392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615612a2557612a256128de565b627fffff196000851282811687830587121615612a4457612a446128de565b60008712925085820587128484161615612a6057612a606128de565b85850587128184161615612a7657612a766128de565b5050509290910295945050505050565b600060208284031215612a9857600080fd5b8151612aa381612397565b9392505050565b60008160020b627fffff198103612ac357612ac36128de565b60000392915050565b60008160020b8360020b6000811281627fffff1901831281151615612af357612af36128de565b81627fffff018313811615612b0a57612b0a6128de565b5090039392505050565b60008160020b8360020b6000821282627fffff03821381151615612b3a57612b3a6128de565b82627fffff19038212811615612b5257612b526128de565b50019392505050565b60006001600160801b0383811690831681811015612b7b57612b7b6128de565b039392505050565b600081600f0b83600f0b600081128160016001607f1b031901831281151615612bae57612bae6128de565b8160016001607f1b03018313811615612b0a57612b0a6128de565b60006001600160801b03808316818516808303821115612beb57612beb6128de565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b0303821381151615612c1e57612c1e6128de565b8260016001607f1b0319038212811615612b5257612b526128de565b600081600f0b60016001607f1b03198103612ac357612ac36128de56fea26469706673582212200222f0acd7d95fcf492120ade92b4a19f7192e55ec15cbe68f9dc5c10fc5b1a264736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$657d9a64028a7d57fe1695a914827e9925\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TwapOracle.sol:TwapOracle"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TwapOracle.sol:TwapOracle"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

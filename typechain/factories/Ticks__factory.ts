/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
          {
            internalType: "contract IRangePool",
            name: "inputPool",
            type: "IRangePool",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6129a961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780638aa596c6146100e1578063cdb98d071461010e578063f2f3f24614610130575b600080fd5b61006e61006936600461224b565b610150565b6040516100d8929190600061012082019050835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015260c084015160c083015260e084015160e0830152826101008301529392505050565b60405180910390f35b8180156100ed57600080fd5b506101016100fc36600461230b565b6108b4565b6040516100d8919061234c565b81801561011a57600080fd5b5061012e610129366004612447565b610e6e565b005b81801561013c57600080fd5b5061012e61014b3660046124ef565b611cb8565b61019860405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000856101c95782516001600160a01b0386161115806101b757508251155b806101c457506060830151155b6101d8565b82516001600160a01b03861610155b156101e8575081905060006108ab565b6101408401516020850151606086015160a08601516001600160a01b0390931692839261ffff90811692169081101561022957876060015161ffff1661022f565b8660a001515b61023f90655af3107a40006125bb565b61024991906125f0565b61025391906125bb565b60c08601819052670de0b6b3a76400009061026e9082612604565b866060015161027d91906125bb565b61028791906125f0565b608086015287156105aa5780876001600160a01b031611156102af57506001600160a01b0386165b60208501518551604051639026147360e01b815260048101929092526024820183905260448201526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af415801561031d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610341919061261c565b9050808660800151116104bc5760208601518651608088015160609290921b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161038c90826125bb565b6103969087612604565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156103df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610403919061261c565b60208901518951604051630724718960e41b815260048101929092526024820183905260448201526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610471573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610495919061261c565b6001600160a01b03909116885260006060890152604088015160e089015294506105a49050565b80156105a45760208601518651604051630724718960e41b815260048101929092526024820184905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af415801561052d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610551919061261c565b828752608087015160608801519195509061056c90836125bb565b61057691906125f0565b866060018181516105879190612635565b9052506060860151604087015161059e9190612635565b60e08701525b506108a5565b80876001600160a01b031610156105c757506001600160a01b0386165b60208501518551604051630724718960e41b815260048101929092526024820152604481018290526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af4158015610635573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610659919061261c565b9050808660800151116107b0576080860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f7919061261c565b87516107039190612604565b60208801518851604051639026147360e01b815260048101929092526024820152604481018290526000606482015290915073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610771573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610795919061261c565b90875260006060880152604087015160e088015293506108a3565b80156108a35760208601518651604051639026147360e01b815260048101929092526024820152604481018490526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af4158015610821573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610845919061261c565b828752608087015160608801519195509061086090836125bb565b61086a91906125f0565b610875906001612604565b866060018181516108869190612635565b9052506060860151604087015161089d9190612635565b60e08701525b505b84935050505b94509492505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810191909152815160ff16600003610e66576101608201516040808401519051630d979ec560e11b81526001600160a01b03909216600483015261ffff16602482015273__$657d9a64028a7d57fe1695a914827e9925$__90631b2f3d8a906044016040805180830381865af415801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b1919061264c565b60020b608084015260ff16808352600103610e66576020820151608083015160019190910b906109e2908290612686565b6109ec91906126c0565b60020b6080830181905260405163986cfba360e01b8152600481019190915273__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af4158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b919061274d565b6001600160a01b031661014083015260a0820151610a8f9063ffffffff1643612635565b63ffffffff1660e083015260016101008301526040805160608101909152620d89e7198082526020820190610ac390612771565b60020b815260200183610100015163ffffffff16815250856000846080015160020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280620d89e71960020b8152602001836080015160020b815260200183610100015163ffffffff16815250856000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280836080015160020b8152602001620d89e719610c6090612771565b60020b815261010084015163ffffffff16602090910152856000610c87620d89e719612771565b60020b815260208082019290925260409081016000208351815485850151959093015162ffffff91821665ffffffffffff1990941693909317630100000091909516029390931769ffffffff0000000000001916660100000000000063ffffffff9092169190910217909155820151608083015173__$b52f7ddb7db4526c8b5c81c46a9292f776$__9163986cfba391610d249160010b90612793565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d87919061274d565b8460020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555073__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba3836020015160010b8460800151610de091906127db565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e43919061274d565b6002840180546001600160a01b0319166001600160a01b03929092169190911790555b509392505050565b60016001607f1b036001600160801b0383161115610e9f5760405163581a12d760e11b815260040160405180910390fd5b816001600160801b031687610120015160016001607f1b03610ec19190612822565b6001600160801b03161015610ee95760405163581a12d760e11b815260040160405180910390fd5b60008960008760020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008a60008660020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008a60008960020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008b60008860020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050816000015160020b826020015160020b146113d9578415611391578584600001818151611366919061284a565b600f0b905250602084018051879190611380908390612890565b6001600160801b03169052506113aa565b85846000018181516113a391906128bb565b600f0b9052505b600288810b600090815260208e90526040902054810b9088900b036113d457600287900b60208301525b61156e565b8415611446576040518060a00160405280876113f490612901565b600f0b81526001600160801b0388166020808301919091526000604080840182905260608085018390528151608081810184528482529481018490529182018390528101919091529101529350611496565b6040805160a081018252600f88900b815260006020808301829052828401829052606080840183905284516080818101875284825292810184905294850183905284019190915281019190915293505b60028a810b600090815260208e9052604090205463010000009004810b9088900b8113156114c55750866114ea565b600281900b600090815260208e905260409020805462ffffff191662ffffff8c161790555b8960020b8b60020b12158061150557508060020b8a60020b12155b156115235760405163044f7fb160e51b815260040160405180910390fd5b6040805160608101825260028d810b80835293900b60208083019190915260008284018190529384528f90529120805465ffffff0000001916630100000062ffffff8d160217905591505b806000015160020b816020015160020b1461167c5784156115a657858360000181815161159b91906128bb565b600f0b9052506115df565b85836000018181516115b8919061284a565b600f0b9052506020830180518791906115d2908390612890565b6001600160801b03169052505b61160a6040518060400160405280600a8152602001697469636b20636865636b60b01b815250611f94565b6116168760020b611fda565b6116228960020b611fda565b60028a810b600090815260208e90526040902054611649916301000000909104900b611fda565b60028a810b600090815260208e9052604090205463010000009004810b908a900b0361167757600289900b81525b61185f565b84156116d6576040805160a081018252600f88900b81526000602080830182905282840182905260608084018390528451608081810187528482529281018490529485018390528401919091528101919091529250611739565b6040518060a00160405280876116eb90612901565b600f0b81526001600160801b03881660208083019190915260006040808401829052606080850183905281516080818101845284825294810184905291820183905281019190915291015292505b600288810b600090815260208e90526040902054810b908a900b81121561175d5750885b600289810b600090815260208f9052604090205463010000008104820b910b148061178e57508760020b8960020b13155b8061179f57508060020b8860020b13155b156117bd576040516329f7012160e21b815260040160405180910390fd5b60405180606001604052808260020b81526020018a60020b8152602001600063ffffffff168152509150878d60008360020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550878d60008b60020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff160217905550505b838d60008b60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050828d60008960020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050818c60008b60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550905050808c60008960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff16021790555090505050505050505050505050505050565b600287810b600090815260208c8152604091829020825160a0810184528154600f81900b82526001600160801b03600160801b91829004811683860152600184015480821684880152829004811660608085019190915286516080818101895298860154808416825284900483169681019690965260039094015480821696860196909652940490931690820152918101919091528215611daf578315611d96578581600001818151611d6b91906128bb565b600f0b905250602081018051879190611d85908390612822565b6001600160801b0316905250611daf565b8581600001818151611da8919061284a565b600f0b9052505b600288810b600090815260208d815260408083208551868401516001600160801b03918216600160801b9183168202178355878401516060808a01519184169184168302919091176001808601919091556080998a0151805181890151908616908616850217868b015580870151908301519085169085168402176003958601558f890b885296859020855160a0810187528154600f81900b825284900485168189015297810154808516898801528390048416888301528551808b018752988101548085168a5283900484169689019690965294909201548082169387019390935291041690830152918201528115611eff578315611ec6578581600001818151611ebb919061284a565b600f0b905250611eff565b8581600001818151611ed891906128bb565b600f0b905250602081018051879190611ef2908390612822565b6001600160801b03169052505b600296870b600090815260209b8c526040908190208251838e01516001600160801b03918216600160801b918316820217835584840151606080870151918416918416830291909117600185015560809095015180519f8101519f83169f831682029f909f179a83019a909a55918d01519c909201519b81169b16909602999099176003909501949094555050505050505050565b611fd781604051602401611fa8919061291e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261201b565b50565b611fd781604051602401611ff091815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316632d5b6cb960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8035801515811461204c57600080fd5b919050565b6001600160a01b0381168114611fd757600080fd5b803561204c81612051565b604051610180810167ffffffffffffffff811182821017156120a357634e487b7160e01b600052604160045260246000fd5b60405290565b604051610100810167ffffffffffffffff811182821017156120a357634e487b7160e01b600052604160045260246000fd5b60ff81168114611fd757600080fd5b803561204c816120db565b8035600181900b811461204c57600080fd5b803561ffff8116811461204c57600080fd5b8060020b8114611fd757600080fd5b803561204c81612119565b803563ffffffff8116811461204c57600080fd5b80356001600160801b038116811461204c57600080fd5b6000610180828403121561217157600080fd5b612179612071565b9050612184826120ea565b8152612192602083016120f5565b60208201526121a360408301612107565b60408201526121b460608301612107565b60608201526121c560808301612128565b60808201526121d660a08301612133565b60a08201526121e760c08301612133565b60c08201526121f860e08301612133565b60e082015261010061220b818401612133565b9082015261012061221d838201612147565b9082015261014061222f838201612066565b90820152610160612241838201612066565b9082015292915050565b6000806000808486036102c081121561226357600080fd5b61226c8661203c565b9450602086013561227c81612051565b935061228b876040880161215e565b92506101006101bf19820112156122a157600080fd5b506122aa6120a9565b6101c086013581526101e0860135602082015261020086013560408201526102208601356060820152610240860135608082015261026086013560a082015261028086013560c08201526102a09095013560e0860152509194909350909190565b6000806000806101e0858703121561232257600080fd5b843593506020850135925060408501359150612341866060870161215e565b905092959194509250565b815160ff1681526101808101602083015161236c602084018260010b9052565b506040830151612382604084018261ffff169052565b506060830151612398606084018261ffff169052565b5060808301516123ad608084018260020b9052565b5060a08301516123c560a084018263ffffffff169052565b5060c08301516123dd60c084018263ffffffff169052565b5060e08301516123f560e084018263ffffffff169052565b506101008381015163ffffffff1690830152610120808401516001600160801b031690830152610140808401516001600160a01b03908116918401919091526101609384015116929091019190915290565b60008060008060008060008060006102808a8c03121561246657600080fd5b8935985060208a0135975061247e8b60408c0161215e565b96506101c08a013561248f81612119565b95506101e08a01356124a081612119565b94506102008a01356124b181612119565b93506102208a01356124c281612119565b92506124d16102408b01612147565b91506124e06102608b0161203c565b90509295985092959850929598565b6000806000806000806000806000806102a08b8d03121561250f57600080fd5b8a35995060208b013598506125278c60408d0161215e565b97506101c08b013561253881612119565b96506101e08b013561254981612119565b95506125586102008c01612147565b94506125676102208c01612147565b93506125766102408c0161203c565b92506125856102608c0161203c565b91506125946102808c0161203c565b90509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125d5576125d56125a5565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826125ff576125ff6125da565b500490565b60008219821115612617576126176125a5565b500190565b60006020828403121561262e57600080fd5b5051919050565b600082821015612647576126476125a5565b500390565b6000806040838503121561265f57600080fd5b825161266a816120db565b602084015190925061267b81612119565b809150509250929050565b60008160020b8360020b8061269d5761269d6125da565b627fffff198214600019821416156126b7576126b76125a5565b90059392505050565b60008160020b8360020b627fffff6000821360008413838304851182821616156126ec576126ec6125a5565b627fffff19600085128281168783058712161561270b5761270b6125a5565b60008712925085820587128484161615612727576127276125a5565b8585058712818416161561273d5761273d6125a5565b5050509290910295945050505050565b60006020828403121561275f57600080fd5b815161276a81612051565b9392505050565b60008160020b627fffff19810361278a5761278a6125a5565b60000392915050565b60008160020b8360020b6000811281627fffff19018312811516156127ba576127ba6125a5565b81627fffff0183138116156127d1576127d16125a5565b5090039392505050565b60008160020b8360020b6000821282627fffff03821381151615612801576128016125a5565b82627fffff19038212811615612819576128196125a5565b50019392505050565b60006001600160801b0383811690831681811015612842576128426125a5565b039392505050565b600081600f0b83600f0b600081128160016001607f1b031901831281151615612875576128756125a5565b8160016001607f1b030183138116156127d1576127d16125a5565b60006001600160801b038083168185168083038211156128b2576128b26125a5565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b03038213811516156128e5576128e56125a5565b8260016001607f1b0319038212811615612819576128196125a5565b600081600f0b60016001607f1b0319810361278a5761278a6125a5565b600060208083528351808285015260005b8181101561294b5785810183015185820160400152820161292f565b8181111561295d576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220bea5a1f6221854ee96bfc3b9c066c48a4e43e7aa22d38d5ae0c035ba35edbec064736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$657d9a64028a7d57fe1695a914827e9925\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TwapOracle.sol:TwapOracle"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TwapOracle.sol:TwapOracle"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

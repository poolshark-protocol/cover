/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
          {
            internalType: "contract IRangePool",
            name: "inputPool",
            type: "IRangePool",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputBoosted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "auctionBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x612a3761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780638aa596c6146100c9578063cdb98d07146100f6578063f2f3f24614610116575b600080fd5b61006e6100693660046122dd565b610138565b6040805183518152602080850151908201528382015191810191909152606080840151908201526080808401519082015260a0808401519082015260c0928301519281019290925260e0820152610100015b60405180910390f35b8180156100d557600080fd5b506100e96100e4366004612391565b610994565b6040516100c091906123d2565b81801561010257600080fd5b506100e96101113660046124cd565b610ef5565b81801561012257600080fd5b50610136610131366004612575565b611cdd565b005b6101786040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000856101a95782516001600160a01b03861611158061019757508251155b806101a457506040830151155b6101b8565b82516001600160a01b03861610155b156101c85750819050600061098b565b6101408401516020850151606086015160808601516001600160a01b0390931692839261ffff90811692169081101561020957876060015161ffff1661020f565b86608001515b61021f90655af3107a4000612641565b6102299190612676565b6102339190612641565b60a08601819052670de0b6b3a76400009061024e908261268a565b866040015161025d9190612641565b6102679190612676565b6060860152871561063d5780876001600160a01b0316111561028f57506001600160a01b0386165b60208501518551604051639026147360e01b815260048101929092526024820183905260448201526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af41580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032191906126a2565b90508086606001511161053b576020860151865160608881015192901b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161036a9082612641565b610374908761268a565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e191906126a2565b905061040d604051806040016040528060088152602001676e6577507269636560c01b81525082611fb9565b61043c604051806040016040528060098152602001686f6c6420707269636560b81b8152508960000151611fb9565b6104498860200151612002565b875161045490612002565b6104618860400151612002565b60208801518851604051630724718960e41b815260048101929092526024820183905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af41580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f091906126a2565b6001600160a01b0382168952606089015160408a0151919750906105149085612641565b61051e9190612676565b61052890846126bb565b60c0890152505060006040870152610637565b80156106375760208601518651604051630724718960e41b815260048101929092526024820184905260448201526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af41580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906126a2565b82875260608701516040880151919550906105eb9083612641565b6105f59190612676565b6105ff90826126bb565b60c0870152606086015160408701516106189083612641565b6106229190612676565b8660400181815161063391906126bb565b9052505b50610985565b80876001600160a01b0316101561065a57506001600160a01b0386165b60208501518551604051630724718960e41b815260048101929092526024820152604481018290526000606482018190529073__$357eccfa53a4e88c122661903e0e603301$__90637247189090608401602060405180830381865af41580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec91906126a2565b90508086606001511161087c576060860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af4158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a91906126a2565b8751610796919061268a565b90506107c2604051806040016040528060088152602001676e6577507269636560c01b81525082611fb9565b60208701518751604051639026147360e01b815260048101929092526024820152604481018290526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af415801561082d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085191906126a2565b8188526040880151606089015191965061086a916126bb565b60c08801525060006040870152610983565b80156109835760208601518651604051639026147360e01b815260048101929092526024820152604481018490526000606482015273__$357eccfa53a4e88c122661903e0e603301$__90639026147390608401602060405180830381865af41580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091191906126a2565b828752606087015160408801519195509061092c9083612641565b6109369190612676565b61094090826126bb565b60c0870152606086015160408701516109599083612641565b6109639190612676565b61096e90600161268a565b8660400181815161097f91906126bb565b9052505b505b84935050505b94509492505050565b61099c61206b565b815160ff16600003610eed576101608201516040808401519051630d979ec560e11b81526001600160a01b03909216600483015261ffff16602482015273__$657d9a64028a7d57fe1695a914827e9925$__90631b2f3d8a906044016040805180830381865af4158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3891906126d2565b60020b608084015260ff16808352600103610eed576020820151608083015160019190910b90610a6990829061270c565b610a739190612746565b60020b6080830181905260405163986cfba360e01b8152600481019190915273__$b52f7ddb7db4526c8b5c81c46a9292f776$__9063986cfba390602401602060405180830381865af4158015610ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af291906127d3565b6001600160a01b031661014083015260a0820151610b169063ffffffff16436126bb565b63ffffffff1660e083015260016101008301526040805160608101909152620d89e7198082526020820190610b4a906127f7565b60020b815260200183610100015163ffffffff16815250856000846080015160020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280620d89e71960020b8152602001836080015160020b815260200183610100015163ffffffff16815250856000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280836080015160020b8152602001620d89e719610ce7906127f7565b60020b815261010084015163ffffffff16602090910152856000610d0e620d89e7196127f7565b60020b815260208082019290925260409081016000208351815485850151959093015162ffffff91821665ffffffffffff1990941693909317630100000091909516029390931769ffffffff0000000000001916660100000000000063ffffffff9092169190910217909155820151608083015173__$b52f7ddb7db4526c8b5c81c46a9292f776$__9163986cfba391610dab9160010b90612819565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0e91906127d3565b8460020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555073__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba3836020015160010b8460800151610e679190612861565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af4158015610ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eca91906127d3565b6002840180546001600160a01b0319166001600160a01b03929092169190911790555b509392505050565b610efd61206b565b60016001607f1b036001600160801b0384161115610f2e5760405163581a12d760e11b815260040160405180910390fd5b826001600160801b031688610120015160016001607f1b03610f5091906128a8565b6001600160801b03161015610f785760405163581a12d760e11b815260040160405180910390fd5b60008a60008860020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008b60008760020b60020b81526020019081526020016000206040518060a00160405290816000820160009054906101000a9004600f0b600f0b600f0b81526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600282016040518060800160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016001820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152505081525050905060008b60008a60020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008c60008960020b60020b81526020019081526020016000206040518060600160405290816000820160009054906101000a900460020b60020b60020b81526020016000820160039054906101000a900460020b60020b60020b81526020016000820160069054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050816000015160020b826020015160020b1461143d5785156114205786846000018181516113f591906128d0565b600f0b90525060208401805188919061140f908390612916565b6001600160801b03169052506115ee565b86846000018181516114329190612941565b600f0b9052506115ee565b85156114aa576040518060a001604052808861145890612987565b600f0b81526001600160801b03891660208083019190915260006040808401829052606080850183905281516080818101845284825294810184905291820183905281019190915291015293506114fa565b6040805160a081018252600f89900b815260006020808301829052828401829052606080840183905284516080818101875284825292810184905294850183905284019190915281019190915293505b60028b810b600090815260208f9052604090205463010000009004810b9089900b81131561152957508761154e565b600281900b600090815260208f905260409020805462ffffff191662ffffff8d161790555b8a60020b8c60020b12158061156957508060020b8b60020b12155b156115875760405163044f7fb160e51b815260040160405180910390fd5b60405180606001604052808d60020b81526020018260020b8152602001600063ffffffff1681525092508a8e60008e60020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550505b806000015160020b816020015160020b1461166357851561162657868360000181815161161b9190612941565b600f0b90525061187f565b868360000181815161163891906128d0565b600f0b905250602083018051889190611652908390612916565b6001600160801b031690525061187f565b85156116bd576040805160a081018252600f89900b81526000602080830182905282840182905260608084018390528451608081810187528482529281018490529485018390528401919091528101919091529250611720565b6040518060a00160405280886116d290612987565b600f0b81526001600160801b03891660208083019190915260006040808401829052606080850183905281516080818101845284825294810184905291820183905281019190915291015292505b600289810b600090815260208f90526040902054810b908b900b8112156117445750895b8d60008b60020b60020b815260200190815260200160002060000160009054906101000a900460020b60020b8e60008c60020b60020b815260200190815260200160002060000160039054906101000a900460020b60020b14806117ae57508860020b8a60020b13155b806117bf57508060020b8960020b13155b156117dd576040516329f7012160e21b815260040160405180910390fd5b60405180606001604052808260020b81526020018b60020b8152602001600063ffffffff168152509150888e60008360020b60020b815260200190815260200160002060000160036101000a81548162ffffff021916908360020b62ffffff160217905550888e60008c60020b60020b815260200190815260200160002060000160006101000a81548162ffffff021916908360020b62ffffff160217905550505b838e60008c60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050828e60008a60020b60020b815260200190815260200160002060008201518160000160006101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160020160008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160010160106101000a8154816001600160801b0302191690836001600160801b031602179055505050905050818d60008c60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff160217905550905050808d60008a60020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050508b9450505050509998505050505050505050565b600287810b600090815260208c8152604091829020825160a0810184528154600f81900b82526001600160801b03600160801b91829004811683860152600184015480821684880152829004811660608085019190915286516080818101895298860154808416825284900483169681019690965260039094015480821696860196909652940490931690820152918101919091528215611dd4578315611dbb578581600001818151611d909190612941565b600f0b905250602081018051879190611daa9083906128a8565b6001600160801b0316905250611dd4565b8581600001818151611dcd91906128d0565b600f0b9052505b600288810b600090815260208d815260408083208551868401516001600160801b03918216600160801b9183168202178355878401516060808a01519184169184168302919091176001808601919091556080998a0151805181890151908616908616850217868b015580870151908301519085169085168402176003958601558f890b885296859020855160a0810187528154600f81900b825284900485168189015297810154808516898801528390048416888301528551808b018752988101548085168a5283900484169689019690965294909201548082169387019390935291041690830152918201528115611f24578315611eeb578581600001818151611ee091906128d0565b600f0b905250611f24565b8581600001818151611efd9190612941565b600f0b905250602081018051879190611f179083906128a8565b6001600160801b03169052505b600296870b600090815260209b8c526040908190208251838e01516001600160801b03918216600160801b918316820217835584840151606080870151918416918416830291909117600185015560809095015180519f8101519f83169f831682029f909f179a83019a909a55918d01519c909201519b81169b16909602999099176003909501949094555050505050505050565b611ffe8282604051602401611fcf9291906129a4565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261204a565b5050565b6120478160405160240161201891815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b17905261204a565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b803580151581146120df57600080fd5b919050565b6001600160a01b038116811461204757600080fd5b80356120df816120e4565b604051610180810167ffffffffffffffff8111828210171561213657634e487b7160e01b600052604160045260246000fd5b60405290565b60405160e0810167ffffffffffffffff8111828210171561213657634e487b7160e01b600052604160045260246000fd5b60ff8116811461204757600080fd5b80356120df8161216d565b8035600181900b81146120df57600080fd5b803561ffff811681146120df57600080fd5b8060020b811461204757600080fd5b80356120df816121ab565b803563ffffffff811681146120df57600080fd5b80356001600160801b03811681146120df57600080fd5b6000610180828403121561220357600080fd5b61220b612104565b90506122168261217c565b815261222460208301612187565b602082015261223560408301612199565b604082015261224660608301612199565b6060820152612257608083016121ba565b608082015261226860a083016121c5565b60a082015261227960c083016121c5565b60c082015261228a60e083016121c5565b60e082015261010061229d8184016121c5565b908201526101206122af8382016121d9565b908201526101406122c18382016120f9565b908201526101606122d38382016120f9565b9082015292915050565b6000806000808486036102a08112156122f557600080fd5b6122fe866120cf565b9450602086013561230e816120e4565b935061231d87604088016121f0565b925060e06101bf198201121561233257600080fd5b5061233b61213c565b6101c086013581526101e0860135602082015261020086013560408201526102208601356060820152610240860135608082015261026086013560a08201526102809095013560c0860152509194909350909190565b6000806000806101e085870312156123a857600080fd5b8435935060208501359250604085013591506123c786606087016121f0565b905092959194509250565b815160ff168152610180810160208301516123f2602084018260010b9052565b506040830151612408604084018261ffff169052565b50606083015161241e606084018261ffff169052565b506080830151612433608084018260020b9052565b5060a083015161244b60a084018263ffffffff169052565b5060c083015161246360c084018263ffffffff169052565b5060e083015161247b60e084018263ffffffff169052565b506101008381015163ffffffff1690830152610120808401516001600160801b031690830152610140808401516001600160a01b03908116918401919091526101609384015116929091019190915290565b60008060008060008060008060006102808a8c0312156124ec57600080fd5b8935985060208a013597506125048b60408c016121f0565b96506101c08a0135612515816121ab565b95506101e08a0135612526816121ab565b94506102008a0135612537816121ab565b93506102208a0135612548816121ab565b92506125576102408b016121d9565b91506125666102608b016120cf565b90509295985092959850929598565b6000806000806000806000806000806102a08b8d03121561259557600080fd5b8a35995060208b013598506125ad8c60408d016121f0565b97506101c08b01356125be816121ab565b96506101e08b01356125cf816121ab565b95506125de6102008c016121d9565b94506125ed6102208c016121d9565b93506125fc6102408c016120cf565b925061260b6102608c016120cf565b915061261a6102808c016120cf565b90509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561265b5761265b61262b565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261268557612685612660565b500490565b6000821982111561269d5761269d61262b565b500190565b6000602082840312156126b457600080fd5b5051919050565b6000828210156126cd576126cd61262b565b500390565b600080604083850312156126e557600080fd5b82516126f08161216d565b6020840151909250612701816121ab565b809150509250929050565b60008160020b8360020b8061272357612723612660565b627fffff1982146000198214161561273d5761273d61262b565b90059392505050565b60008160020b8360020b627fffff6000821360008413838304851182821616156127725761277261262b565b627fffff1960008512828116878305871216156127915761279161262b565b600087129250858205871284841616156127ad576127ad61262b565b858505871281841616156127c3576127c361262b565b5050509290910295945050505050565b6000602082840312156127e557600080fd5b81516127f0816120e4565b9392505050565b60008160020b627fffff1981036128105761281061262b565b60000392915050565b60008160020b8360020b6000811281627fffff19018312811516156128405761284061262b565b81627fffff0183138116156128575761285761262b565b5090039392505050565b60008160020b8360020b6000821282627fffff038213811516156128875761288761262b565b82627fffff1903821281161561289f5761289f61262b565b50019392505050565b60006001600160801b03838116908316818110156128c8576128c861262b565b039392505050565b600081600f0b83600f0b600081128160016001607f1b0319018312811516156128fb576128fb61262b565b8160016001607f1b030183138116156128575761285761262b565b60006001600160801b038083168185168083038211156129385761293861262b565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b030382138115161561296b5761296b61262b565b8260016001607f1b031903821281161561289f5761289f61262b565b600081600f0b60016001607f1b031981036128105761281061262b565b604081526000835180604084015260005b818110156129d257602081870181015160608684010152016129b5565b818111156129e4576000606083860101525b50602083019390935250601f91909101601f19160160600191905056fea264697066735822122060aeaa708f3be87251dcd9db1640c3b53c5747956e5aff21755ad3baccf77edf64736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$657d9a64028a7d57fe1695a914827e9925\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TwapOracle.sol:TwapOracle"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TwapOracle.sol:TwapOracle"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

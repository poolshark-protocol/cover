/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ticks, TicksInterface } from "../Ticks";

const _abi = [
  {
    inputs: [],
    name: "AmountInDeltaNeutral",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountOutDeltaNeutral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop0",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "InfiniteTickLoop1",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLatestTick",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoLiquidityToRollover",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickLowerRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperOld",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTickUpperRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "unlocked",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "swapFee",
            type: "uint16",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "int24",
            name: "latestTick",
            type: "int24",
          },
          {
            internalType: "uint32",
            name: "genesisBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastBlock",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "auctionStart",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "accumEpoch",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "liquidityGlobal",
            type: "uint128",
          },
          {
            internalType: "uint160",
            name: "latestPrice",
            type: "uint160",
          },
        ],
        internalType: "struct ICoverPoolStructs.GlobalState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "cache",
        type: "tuple",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInDelta",
            type: "uint256",
          },
        ],
        internalType: "struct ICoverPoolStructs.SwapCache",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x612ad861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635a9d606f1461005b5780635f580c66146100b4578063cdb98d07146100d6578063dd3fac9214610103575b600080fd5b61006e61006936600461251a565b610123565b6040805183518152602080850151908201528382015191810191909152606080840151908201526080928301519281019290925260a082015260c0015b60405180910390f35b8180156100c057600080fd5b506100d46100cf3660046125b8565b610703565b005b8180156100e257600080fd5b506100f66100f1366004612617565b610a96565b6040516100ab91906126b7565b81801561010f57600080fd5b506100d461011e3660046127b0565b6116ba565b6101556040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6000856101795782516001600160a01b03861611158061017457508251155b610188565b82516001600160a01b03861610155b15610198575081905060006106fa565b6101608401516001600160a01b031680871561045f57866001600160a01b03168110156101cb57506001600160a01b0386165b60208501518551604051630e8e499360e21b8152600481019290925260248201839052604482015260009073__$357eccfa53a4e88c122661903e0e603301$__90633a39264c90606401602060405180830381865af4158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190612832565b9050808660600151116103b4576020860151865160608881015192901b9160009173__$1b9fef1800622f5f6a93914ffdeb7ba32f$__91630af8b27f91859161029f9082612861565b6102a99087612880565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af41580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103169190612832565b60208901518951604051630b00d01b60e31b8152600481019290925260248201839052604482015290915073__$357eccfa53a4e88c122661903e0e603301$__9063580680d890606401602060405180830381865af415801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190612832565b9088526000606089015294506104599050565b60208601518651604051630b00d01b60e31b8152600481019290925260248201849052604482015273__$357eccfa53a4e88c122661903e0e603301$__9063580680d890606401602060405180830381865af4158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190612832565b8287526060870180519195508291610455908390612898565b9052505b506106f4565b866001600160a01b031681111561047c57506001600160a01b0386165b60208501518551604051630b00d01b60e31b8152600481019290925260248201526044810183905260009073__$357eccfa53a4e88c122661903e0e603301$__9063580680d890606401602060405180830381865af41580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190612832565b90508086606001511161064d576060860151602087015160405163554d048960e11b81526004810192909252600160601b6024830152604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af4158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190612832565b87516105b19190612880565b60208801518851604051630e8e499360e21b8152600481019290925260248201526044810182905290915073__$357eccfa53a4e88c122661903e0e603301$__90633a39264c90606401602060405180830381865af4158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190612832565b9087526000606088015293506106f2565b60208601518651604051630e8e499360e21b8152600481019290925260248201526044810184905273__$357eccfa53a4e88c122661903e0e603301$__90633a39264c90606401602060405180830381865af41580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190612832565b82875260608701805191955082916106ee908390612898565b9052505b505b84935050505b94509492505050565b6040518060600160405280620d89e71960020b8152602001620d89e719610729906128af565b60020b81526020018363ffffffff168152508660008560020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280620d89e71960020b81526020018460020b81526020018363ffffffff16815250866000620d89e71960020b60020b815260200190815260200160002060008201518160000160006101000a81548162ffffff021916908360020b62ffffff16021790555060208201518160000160036101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160066101000a81548163ffffffff021916908363ffffffff16021790555090505060405180606001604052808460020b8152602001620d89e7196108b0906128af565b60020b815263ffffffff84166020909101528660006108d2620d89e7196128af565b60020b815260208082019290925260409081016000208351815493850151949092015163ffffffff1666010000000000000269ffffffff0000000000001962ffffff95861663010000000265ffffffffffff199095169590931694909417929092171691909117905573__$b52f7ddb7db4526c8b5c81c46a9292f776$__63986cfba361095f83866128d1565b6040516001600160e01b031960e084901b16815260029190910b6004820152602401602060405180830381865af415801561099e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c29190612919565b6001860180546001600160a01b0319166001600160a01b039290921691909117905573__$b52f7ddb7db4526c8b5c81c46a9292f776$$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a09129082908290606401602060405180830381865af4158015611e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e339190612832565b600160601b611e4b6001600160801b038a1688612880565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af4158015611e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb89190612832565b6001600160801b03169050670de0b6b3a764000086606001516001600160801b031682611ee59190612861565b611eef9190612a80565b6001600160401b031660a0870152606086018051829190611f119083906129f2565b6001600160801b0316905250505060c08401516001600160401b031615612106576000670de0b6b3a76400008560c001516001600160401b031686608001516001600160801b0316611f639190612861565b611f6d9190612a80565b90508085608001818151611f819190612984565b6001600160801b031690525060405163554d048960e11b81526004810182905260248101839052600160601b604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a09129082908290606401602060405180830381865af4158015611ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120199190612832565b600160601b6120316001600160801b038a1688612880565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865af415801561207a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209e9190612832565b6001600160801b03169050670de0b6b3a764000086608001516001600160801b0316826120cb9190612861565b6120d59190612a80565b6001600160401b031660c08701526080860180518291906120f79083906129f2565b6001600160801b031690525050505b505b5090919050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915281156122345760a08301516001600160401b03161561222f57670de0b6b3a76400008360a001516001600160401b031684606001516001600160801b03166121909190612861565b61219a9190612a80565b836060018181516121ab9190612984565b6001600160801b0316905250600060a084015260c08301516001600160401b03161561222f57670de0b6b3a76400008360c001516001600160401b031684608001516001600160801b03166122009190612861565b61220a9190612a80565b8360800181815161221b9190612984565b6001600160801b0316905250600060c08401525b612108565b60a08301516001600160401b03161561230957670de0b6b3a76400008360a001516001600160401b031684606001516001600160801b03166122769190612861565b6122809190612a80565b6001600160801b03166060840152670de0b6b3a764000060a084015260c08301516001600160401b03161561222f57670de0b6b3a76400008360c001516001600160401b031684608001516001600160801b03166122de9190612861565b6122e89190612a80565b6001600160801b03166080840152670de0b6b3a764000060c0840152612108565b5050600060608201819052608082015290565b8035801515811461232c57600080fd5b919050565b6001600160a01b038116811461234657600080fd5b50565b803561232c81612331565b60405161018081016001600160401b038111828210171561238557634e487b7160e01b600052604160045260246000fd5b60405290565b60405160a081016001600160401b038111828210171561238557634e487b7160e01b600052604160045260246000fd5b803560ff8116811461232c57600080fd5b803561ffff8116811461232c57600080fd5b8035600181900b811461232c57600080fd5b8035600281900b811461232c57600080fd5b803563ffffffff8116811461232c57600080fd5b80356001600160801b038116811461232c57600080fd5b6000610180828403121561244057600080fd5b612448612354565b9050612453826123bb565b8152612461602083016123cc565b6020820152612472604083016123de565b6040820152612483606083016123cc565b6060820152612494608083016123f0565b60808201526124a560a08301612402565b60a08201526124b660c08301612402565b60c08201526124c760e08301612402565b60e08201526101006124da8184016123cc565b908201526101206124ec838201612402565b908201526101406124fe838201612416565b90820152610160612510838201612349565b9082015292915050565b60008060008084860361026081121561253257600080fd5b61253b8661231c565b9450602086013561254b81612331565b935061255a876040880161242d565b925060a06101bf198201121561256f57600080fd5b5061257861238b565b6101c086013581526101e0860135602082015261020086013560408201526102208601356060820152610240909501356080860152509194909350909190565b60008060008060008060c087890312156125d157600080fd5b8635955060208701359450604087013593506125ef606088016123f0565b92506125fd60808801612402565b915061260b60a088016123f0565b90509295509295509295565b60008060008060008060008060006102808a8c03121561263657600080fd5b8935985060208a0135975061264e8b60408c0161242d565b965061265d6101c08b016123f0565b955061266c6101e08b016123f0565b945061267b6102008b016123f0565b935061268a6102208b016123f0565b92506126996102408b01612416565b91506126a86102608b0161231c565b90509295985092959850929598565b815160ff168152610180810160208301516126d8602084018261ffff169052565b5060408301516126ed604084018260010b9052565b506060830151612703606084018261ffff169052565b506080830151612718608084018260020b9052565b5060a083015161273060a084018263ffffffff169052565b5060c083015161274860c084018263ffffffff169052565b5060e083015161276060e084018263ffffffff169052565b506101008381015161ffff16908301526101208084015163ffffffff1690830152610140808401516001600160801b031690830152610160928301516001600160a01b0316929091019190915290565b60008060008060008060008060006102808a8c0312156127cf57600080fd5b8935985060208a013597506127e78b60408c0161242d565b96506127f66101c08b016123f0565b95506128056101e08b016123f0565b94506128146102008b01612416565b93506128236102208b0161231c565b92506126996102408b0161231c565b60006020828403121561284457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561287b5761287b61284b565b500290565b600082198211156128935761289361284b565b500190565b6000828210156128aa576128aa61284b565b500390565b60008160020b627fffff1981036128c8576128c861284b565b60000392915050565b60008160020b8360020b6000811281627fffff19018312811516156128f8576128f861284b565b81627fffff01831381161561290f5761290f61284b565b5090039392505050565b60006020828403121561292b57600080fd5b815161293681612331565b9392505050565b60008160020b8360020b6000821282627fffff038213811516156129635761296361284b565b82627fffff1903821281161561297b5761297b61284b565b50019392505050565b60006001600160801b03838116908316818110156129a4576129a461284b565b039392505050565b600081600f0b83600f0b600081128160016001607f1b0319018312811516156129d7576129d761284b565b8160016001607f1b0301831381161561290f5761290f61284b565b60006001600160801b03808316818516808303821115612a1457612a1461284b565b01949350505050565b600081600f0b83600f0b600082128260016001607f1b0303821381151615612a4757612a4761284b565b8260016001607f1b031903821281161561297b5761297b61284b565b600081600f0b60016001607f1b031981036128c8576128c861284b565b600082612a9d57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209d5893aa976599844dc9f871b528a175726f9859c67f58bc97b7054b84528c6f64736f6c634300080d0033";

type TicksConstructorParams =
  | [linkLibraryAddresses: TicksLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Ticks__factory extends ContractFactory {
  constructor(...args: TicksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Ticks__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TicksLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$357eccfa53a4e88c122661903e0e603301\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/DyDxMath.sol:DyDxMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b52f7ddb7db4526c8b5c81c46a9292f776\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/TickMath.sol:TickMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}

export interface TicksLibraryAddresses {
  ["contracts/libraries/DyDxMath.sol:DyDxMath"]: string;
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
  ["contracts/libraries/TickMath.sol:TickMath"]: string;
}

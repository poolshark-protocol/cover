/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OrderBookRouter20,
  OrderBookRouter20Interface,
} from "../OrderBookRouter20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "destToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limitPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "makerOnly",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "takerOnly",
        type: "bool",
      },
    ],
    name: "limitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "selector",
        type: "uint8[]",
      },
      {
        internalType: "bytes[]",
        name: "params",
        type: "bytes[]",
      },
    ],
    name: "routerMultiCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516108e03803806108e083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516108486100986000396000818160600152818161013d015261032f01526108486000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063870dac4314610046578063c45a01551461005b578063df186a5d1461009e575b600080fd5b61005961005436600461054e565b6100b1565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100596100ac3660046105e7565b61032b565b6000805b82811015610323578585828181106100cf576100cf610666565b90506020020160208101906100e4919061067c565b60ff16600003610313576000806000806000806000808b8b8a81811061010c5761010c610666565b905060200281019061011e91906106a6565b81019061012b91906106ed565b975097509750975097509750975097507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c0dee70866001600160a01b0316886001600160a01b0316106101b3578688866040516020016101989392919061074f565b604051602081830303815290604052805190602001206101df565b8787866040516020016101c89392919061074f565b604051602081830303815290604052805190602001205b6040518263ffffffff1660e01b81526004016101fd91815260200190565b602060405180830381865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e9190610773565b99506001600160a01b038a166102905760405162461bcd60e51b8152602060048201526012602482015271109bdbdac8191bd95cdb89dd08195e1a5cdd60721b60448201526064015b60405180910390fd5b60405163136008fd60e01b81526001600160a01b038b169063136008fd906102c69089908c908c908a9089908990600401610790565b60408051808303816000875af11580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030891906107c7565b505050505050505050505b61031c816107eb565b90506100b5565b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c0dee70896001600160a01b03168b6001600160a01b0316106103a557898b8760405160200161038a9392919061074f565b604051602081830303815290604052805190602001206103d1565b8a8a876040516020016103ba9392919061074f565b604051602081830303815290604052805190602001205b6040518263ffffffff1660e01b81526004016103ef91815260200190565b602060405180830381865afa15801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610773565b90506001600160a01b03811661047d5760405162461bcd60e51b8152602060048201526012602482015271109bdbdac8191bd95cdb89dd08195e1a5cdd60721b6044820152606401610287565b60405163136008fd60e01b81526001600160a01b0382169063136008fd906104b3908c908b908b908b908a908a90600401610790565b60408051808303816000875af11580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906107c7565b5050505050505050505050565b60008083601f84011261051457600080fd5b50813567ffffffffffffffff81111561052c57600080fd5b6020830191508360208260051b850101111561054757600080fd5b9250929050565b6000806000806040858703121561056457600080fd5b843567ffffffffffffffff8082111561057c57600080fd5b61058888838901610502565b909650945060208701359150808211156105a157600080fd5b506105ae87828801610502565b95989497509550505050565b6001600160a01b03811681146105cf57600080fd5b50565b803580151581146105e257600080fd5b919050565b600080600080600080600080610100898b03121561060457600080fd5b883561060f816105ba565b9750602089013561061f816105ba565b965060408901359550606089013594506080890135935060a0890135925061064960c08a016105d2565b915061065760e08a016105d2565b90509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561068e57600080fd5b813560ff8116811461069f57600080fd5b9392505050565b6000808335601e198436030181126106bd57600080fd5b83018035915067ffffffffffffffff8211156106d857600080fd5b60200191503681900382131561054757600080fd5b600080600080600080600080610100898b03121561070a57600080fd5b88359750602089013596506040890135610723816105ba565b95506060890135610733816105ba565b94506080890135935060a0890135925061064960c08a016105d2565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561078557600080fd5b815161069f816105ba565b6001600160a01b0396909616865260208601949094526040850192909252606084015215156080830152151560a082015260c00190565b600080604083850312156107da57600080fd5b505080516020909101519092909150565b60006001820161080b57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220cd7f367606a45cdbdf6c151d006927e9c0c9a489cce18c52729088bd3f3d27d464736f6c634300080d0033";

export class OrderBookRouter20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrderBookRouter20> {
    return super.deploy(
      _factory,
      overrides || {}
    ) as Promise<OrderBookRouter20>;
  }
  getDeployTransaction(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  attach(address: string): OrderBookRouter20 {
    return super.attach(address) as OrderBookRouter20;
  }
  connect(signer: Signer): OrderBookRouter20__factory {
    return super.connect(signer) as OrderBookRouter20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookRouter20Interface {
    return new utils.Interface(_abi) as OrderBookRouter20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBookRouter20 {
    return new Contract(address, _abi, signerOrProvider) as OrderBookRouter20;
  }
}

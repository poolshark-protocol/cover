/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  PoolsharkHedgePoolFactoryErrors,
  PoolsharkHedgePoolFactoryErrorsInterface,
} from "../PoolsharkHedgePoolFactoryErrors";

const _abi = [
  {
    inputs: [],
    name: "FeeTierNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalTokenAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolAlreadyExists",
    type: "error",
  },
];

export class PoolsharkHedgePoolFactoryErrors__factory {
  static readonly abi = _abi;
  static createInterface(): PoolsharkHedgePoolFactoryErrorsInterface {
    return new utils.Interface(
      _abi
    ) as PoolsharkHedgePoolFactoryErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolsharkHedgePoolFactoryErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PoolsharkHedgePoolFactoryErrors;
  }
}

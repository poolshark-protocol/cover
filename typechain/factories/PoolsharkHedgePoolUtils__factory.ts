/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolsharkHedgePoolUtils,
  PoolsharkHedgePoolUtilsInterface,
} from "../PoolsharkHedgePoolUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "concentratedFactory",
    outputs: [
      {
        internalType: "contract IConcentratedFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
    ],
    name: "getSqrtPriceLimitX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "initializePoolObservations",
    outputs: [
      {
        internalType: "bool",
        name: "initializable",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "isPoolObservationsEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDivRoundingUp",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "within1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b7a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063392b952d11610066578063392b952d1461013957806365e8e4d11461014c578063677342ce14610172578063786570c214610185578063aa9a09121461019857600080fd5b80630af8b27f1461009857806313a1ec75146100be57806335393974146100e1578063382d7a821461010e575b600080fd5b6100ab6100a636600461067c565b6101ab565b6040519081526020015b60405180910390f35b6100d16100cc3660046106a8565b6101c2565b60405190151581526020016100b5565b6100f46100ef3660046106e2565b6101d7565b60408051921515835260029190910b6020830152016100b5565b61012161011c36600461070d565b61020f565b6040516001600160a01b0390911681526020016100b5565b6100d16101473660046106e2565b61024a565b61015f61015a3660046106e2565b610255565b60405160029190910b81526020016100b5565b6100ab61018036600461072a565b610260565b600054610121906001600160a01b031681565b6100ab6101a636600461067c565b61026b565b60006101b8848484610278565b90505b9392505050565b60006101ce83836102b5565b90505b92915050565b6000806101e3836102d7565b6101fb576101f083610353565b506000928392509050565b6001610206846103b0565b91509150915091565b60008161023a57610235600173fffd8963efd1fc6a506488495d951d5263988d26610759565b6101d1565b6101d16401000000006001610781565b60006101d1826102d7565b60006101d1826103b0565b60006101d18261051f565b60006101b88484846105ca565b60006102858484846105ca565b90508180610295576102956107ac565b838509156101bb5760001981106102ab57600080fd5b6001019392505050565b6000818311156102cc5750600181830311156101d1565b506001919003111590565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c91906107d4565b5050600561ffff9091161015979650505050505050565b6040516332148f6760e01b8152600560048201526001600160a01b038216906332148f6790602401600060405180830381600087803b15801561039557600080fd5b505af11580156103a9573d6000803e3d6000fd5b5050505050565b60408051600380825260808201909252600091829190602082016060803683370190505090506000816000815181106103eb576103eb610889565b63ffffffff9092166020928302919091019091015261040c6005600c61089f565b61ffff168160018151811061042357610423610889565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0385169063883bdbfd906104679085906004016108c9565b600060405180830381865afa158015610484573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104ac91908101906109dc565b509050816001815181106104c2576104c2610889565b602002602001015160030b816001815181106104e0576104e0610889565b6020026020010151826000815181106104fb576104fb610889565b602002602001015161050d9190610aa8565b6105179190610af8565b949350505050565b60b581600160881b81106105385760409190911b9060801c5b690100000000000000000081106105545760209190911b9060401c5b65010000000000811061056c5760109190911b9060201c5b630100000081106105825760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c8082048111156105c55781045b919050565b600080806000198587098587029250828110838203039150508060000361060357600084116105f857600080fd5b5082900490506101bb565b80841161060f57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008060006060848603121561069157600080fd5b505081359360208301359350604090920135919050565b600080604083850312156106bb57600080fd5b50508035926020909101359150565b6001600160a01b03811681146106df57600080fd5b50565b6000602082840312156106f457600080fd5b81356101bb816106ca565b80151581146106df57600080fd5b60006020828403121561071f57600080fd5b81356101bb816106ff565b60006020828403121561073c57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b038381169083168181101561077957610779610743565b039392505050565b60006001600160a01b038281168482168083038211156107a3576107a3610743565b01949350505050565b634e487b7160e01b600052601260045260246000fd5b805161ffff811681146105c557600080fd5b600080600080600080600060e0888a0312156107ef57600080fd5b87516107fa816106ca565b8097505060208801518060020b811461081257600080fd5b9550610820604089016107c2565b945061082e606089016107c2565b935061083c608089016107c2565b925060a088015160ff8116811461085257600080fd5b60c0890151909250610863816106ff565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600061ffff808316818516818304811182151516156108c0576108c0610743565b02949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561090757835163ffffffff16835292840192918401916001016108e5565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561093c5761093c610873565b604052919050565b600067ffffffffffffffff82111561095e5761095e610873565b5060051b60200190565b600082601f83011261097957600080fd5b8151602061098e61098983610944565b610913565b82815260059290921b840181019181810190868411156109ad57600080fd5b8286015b848110156109d15780516109c4816106ca565b83529183019183016109b1565b509695505050505050565b600080604083850312156109ef57600080fd5b825167ffffffffffffffff80821115610a0757600080fd5b818501915085601f830112610a1b57600080fd5b81516020610a2b61098983610944565b82815260059290921b84018101918181019089841115610a4a57600080fd5b948201945b83861015610a785785518060060b8114610a695760008081fd5b82529482019490820190610a4f565b91880151919650909350505080821115610a9157600080fd5b50610a9e85828601610968565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615610ad357610ad3610743565b81667fffffffffffff018313811615610aee57610aee610743565b5090039392505050565b60008160060b8360060b80610b1d57634e487b7160e01b600052601260045260246000fd5b667fffffffffffff19821460001982141615610b3b57610b3b610743565b9005939250505056fea2646970667358221220c9369ecb3c437c0fe1611a0cef934c72bac5a1df1068635831bb182c371c9a3c64736f6c634300080d0033";

export class PoolsharkHedgePoolUtils__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolsharkHedgePoolUtils> {
    return super.deploy(overrides || {}) as Promise<PoolsharkHedgePoolUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolsharkHedgePoolUtils {
    return super.attach(address) as PoolsharkHedgePoolUtils;
  }
  connect(signer: Signer): PoolsharkHedgePoolUtils__factory {
    return super.connect(signer) as PoolsharkHedgePoolUtils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolsharkHedgePoolUtilsInterface {
    return new utils.Interface(_abi) as PoolsharkHedgePoolUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolsharkHedgePoolUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PoolsharkHedgePoolUtils;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolsharkHedgePoolLibraries,
  PoolsharkHedgePoolLibrariesInterface,
} from "../PoolsharkHedgePoolLibraries";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "concentratedFactory",
    outputs: [
      {
        internalType: "contract IConcentratedFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "token0amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "token1amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
    ],
    name: "getSqrtPriceLimitX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "swapFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "currentLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthGlobal",
        type: "uint256",
      },
    ],
    name: "handleFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "increaseV3Observation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "isPoolObservationsEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDivRoundingUp",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "toUint128",
    outputs: [
      {
        internalType: "uint128",
        name: "z",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "toUint160",
    outputs: [
      {
        internalType: "uint160",
        name: "z",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "within1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611123806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636afc5bc01161009757806390261473116100665780639026147314610291578063aa9a0912146102a4578063aec6cbfe146102b7578063dfef6beb146102ca57600080fd5b80636afc5bc01461022b5780637247189014610240578063786570c214610253578063809fdd331461026657600080fd5b8063392b952d116100d3578063392b952d146101ac5780633ef27011146101bf57806365e8e4d1146101f2578063677342ce1461021857600080fd5b80630af8b27f1461010557806313a1ec751461012b57806330d880251461014e578063382d7a8214610181575b600080fd5b610118610113366004610a6f565b6102dd565b6040519081526020015b60405180910390f35b61013e610139366004610a9b565b6102f4565b6040519015158152602001610122565b61016161015c366004610abd565b610309565b604080519485526020850193909352918301526060820152608001610122565b61019461018f366004610b2f565b61037e565b6040516001600160a01b039091168152602001610122565b61013e6101ba366004610b61565b6103b9565b6101d26101cd366004610b7e565b610435565b604080516001600160801b03938416815292909116602083015201610122565b610205610200366004610b61565b61052f565b60405160029190910b8152602001610122565b610118610226366004610bcb565b61069e565b61023e610239366004610b61565b6106a9565b005b61011861024e366004610be4565b610706565b600054610194906001600160a01b031681565b610279610274366004610bcb565b61071d565b6040516001600160801b039091168152602001610122565b61011861029f366004610be4565b610738565b6101186102b2366004610a6f565b610746565b6101186102c5366004610c25565b610753565b6101946102d8366004610bcb565b6107b4565b60006102ea8484846107ca565b90505b9392505050565b60006103008383610807565b90505b92915050565b60008060008060006103248c8c62ffffff16620f42406107ca565b9050610330818a610c76565b985061033c818d610c8e565b6103469089610c76565b9750891561036a5761035d81600160801b8c610829565b6103679087610c76565b95505b50969a959950939750919550929350505050565b6000816103a9576103a4600173fffd8963efd1fc6a506488495d951d5263988d26610ca5565b610303565b6103036401000000006001610ccd565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190610d0a565b5050600561ffff9091161015979650505050505050565b6000808486116104555761044e610274858989876108db565b9050610495565b8685116104725761046b6102748589898761090c565b9150610495565b6104816102748587898761090c565b9150610492610274858988876108db565b90505b6104dd6040518060400160405280601781526020017f746f6b656e496e20616d6f756e743a2020202020202020000000000000000000815250836001600160801b031661095d565b6105256040518060400160405280601781526020017f746f6b656e4f757420616d6f756e743a20202020202020000000000000000000815250826001600160801b031661095d565b9550959350505050565b604080516003808252608082019092526000918291906020820160608036833701905050905060008160008151811061056a5761056a610dbf565b63ffffffff9092166020928302919091019091015261058b6005600c610dd5565b61ffff16816001815181106105a2576105a2610dbf565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0385169063883bdbfd906105e6908590600401610dff565b600060405180830381865afa158015610603573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261062b9190810190610f12565b5090508160018151811061064157610641610dbf565b602002602001015160030b8160018151811061065f5761065f610dbf565b60200260200101518260008151811061067a5761067a610dbf565b602002602001015161068c9190610fde565b6106969190611044565b949350505050565b6000610303826109a6565b6040516332148f6760e01b8152600560048201526001600160a01b038216906332148f6790602401600060405180830381600087803b1580156106eb57600080fd5b505af11580156106ff573d6000803e3d6000fd5b5050505050565b6000610714858585856108db565b95945050505050565b806001600160801b038116811461073357600080fd5b919050565b60006107148585858561090c565b60006102ea848484610829565b60008385116107745761076d83600160601b888803610829565b9050610714565b8584116107965761076d8261078e8888600160601b610829565b888803610829565b60006107a984600160601b898803610829565b979650505050505050565b806001600160a01b038116811461073357600080fd5b60006107d7848484610829565b905081806107e7576107e761102e565b838509156102ed5760001981106107fd57600080fd5b6001019392505050565b60008183111561081e575060018183031115610303565b506001919003111590565b6000808060001985870985870292508281108382030391505080600003610862576000841161085757600080fd5b5082900490506102ed565b80841161086e57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600081156108fb576108f485858503600160601b6107ca565b9050610696565b61071485858503600160601b610829565b60008115610934576108f4610928606087901b868603866107ca565b85808204910615150190565b83610946606087901b86860386610829565b816109535761095361102e565b0495945050505050565b6109a28282604051602401610973929190611090565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610a4e565b5050565b60b581600160881b81106109bf5760409190911b9060801c5b690100000000000000000081106109db5760209190911b9060401c5b6501000000000081106109f35760109190911b9060201c5b63010000008110610a095760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c80820481111561073357900490565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080600060608486031215610a8457600080fd5b505081359360208301359350604090920135919050565b60008060408385031215610aae57600080fd5b50508035926020909101359150565b600080600080600080600060e0888a031215610ad857600080fd5b87359650602088013562ffffff81168114610af257600080fd5b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b8015158114610b2c57600080fd5b50565b600060208284031215610b4157600080fd5b81356102ed81610b1e565b6001600160a01b0381168114610b2c57600080fd5b600060208284031215610b7357600080fd5b81356102ed81610b4c565b600080600080600060a08688031215610b9657600080fd5b853594506020860135935060408601359250606086013591506080860135610bbd81610b1e565b809150509295509295909350565b600060208284031215610bdd57600080fd5b5035919050565b60008060008060808587031215610bfa57600080fd5b8435935060208501359250604085013591506060850135610c1a81610b1e565b939692955090935050565b600080600080600060a08688031215610c3d57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c8957610c89610c60565b500190565b600082821015610ca057610ca0610c60565b500390565b60006001600160a01b0383811690831681811015610cc557610cc5610c60565b039392505050565b60006001600160a01b03828116848216808303821115610cef57610cef610c60565b01949350505050565b805161ffff8116811461073357600080fd5b600080600080600080600060e0888a031215610d2557600080fd5b8751610d3081610b4c565b8097505060208801518060020b8114610d4857600080fd5b9550610d5660408901610cf8565b9450610d6460608901610cf8565b9350610d7260808901610cf8565b925060a088015160ff81168114610d8857600080fd5b60c0890151909250610d9981610b1e565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681851681830481118215151615610df657610df6610c60565b02949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610e3d57835163ffffffff1683529284019291840191600101610e1b565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e7257610e72610da9565b604052919050565b600067ffffffffffffffff821115610e9457610e94610da9565b5060051b60200190565b600082601f830112610eaf57600080fd5b81516020610ec4610ebf83610e7a565b610e49565b82815260059290921b84018101918181019086841115610ee357600080fd5b8286015b84811015610f07578051610efa81610b4c565b8352918301918301610ee7565b509695505050505050565b60008060408385031215610f2557600080fd5b825167ffffffffffffffff80821115610f3d57600080fd5b818501915085601f830112610f5157600080fd5b81516020610f61610ebf83610e7a565b82815260059290921b84018101918181019089841115610f8057600080fd5b948201945b83861015610fae5785518060060b8114610f9f5760008081fd5b82529482019490820190610f85565b91880151919650909350505080821115610fc757600080fd5b50610fd485828601610e9e565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561100957611009610c60565b81667fffffffffffff01831381161561102457611024610c60565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b8061106957634e487b7160e01b600052601260045260246000fd5b667fffffffffffff1982146000198214161561108757611087610c60565b90059392505050565b604081526000835180604084015260005b818110156110be57602081870181015160608684010152016110a1565b818111156110d0576000606083860101525b50602083019390935250601f91909101601f19160160600191905056fea26469706673582212201fae76c058cb0dfb51fb641c61db3516cf3f727ad635e15b4aefcea1824c70f764736f6c634300080d0033";

export class PoolsharkHedgePoolLibraries__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolsharkHedgePoolLibraries> {
    return super.deploy(
      overrides || {}
    ) as Promise<PoolsharkHedgePoolLibraries>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolsharkHedgePoolLibraries {
    return super.attach(address) as PoolsharkHedgePoolLibraries;
  }
  connect(signer: Signer): PoolsharkHedgePoolLibraries__factory {
    return super.connect(signer) as PoolsharkHedgePoolLibraries__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolsharkHedgePoolLibrariesInterface {
    return new utils.Interface(_abi) as PoolsharkHedgePoolLibrariesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolsharkHedgePoolLibraries {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PoolsharkHedgePoolLibraries;
  }
}

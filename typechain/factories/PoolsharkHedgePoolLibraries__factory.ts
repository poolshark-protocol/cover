/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolsharkHedgePoolLibraries,
  PoolsharkHedgePoolLibrariesInterface,
} from "../PoolsharkHedgePoolLibraries";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "concentratedFactory",
    outputs: [
      {
        internalType: "contract IConcentratedFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "token0amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "token1amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
    ],
    name: "getSqrtPriceLimitX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "swapFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "currentLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthGlobal",
        type: "uint256",
      },
    ],
    name: "handleFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "increaseV3Observation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConcentratedPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "isPoolObservationsEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDivRoundingUp",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "toUint128",
    outputs: [
      {
        internalType: "uint128",
        name: "z",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "toUint160",
    outputs: [
      {
        internalType: "uint160",
        name: "z",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "within1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061120f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636afc5bc01161009757806390261473116100665780639026147314610291578063aa9a0912146102a4578063aec6cbfe146102b7578063dfef6beb146102ca57600080fd5b80636afc5bc01461022b5780637247189014610240578063786570c214610253578063809fdd331461026657600080fd5b8063392b952d116100d3578063392b952d146101ac5780633ef27011146101bf57806365e8e4d1146101f2578063677342ce1461021857600080fd5b80630af8b27f1461010557806313a1ec751461012b57806330d880251461014e578063382d7a8214610181575b600080fd5b610118610113366004610b39565b6102dd565b6040519081526020015b60405180910390f35b61013e610139366004610b65565b6102f4565b6040519015158152602001610122565b61016161015c366004610b87565b610309565b604080519485526020850193909352918301526060820152608001610122565b61019461018f366004610bf6565b61037e565b6040516001600160a01b039091168152602001610122565b61013e6101ba366004610c28565b6103b9565b6101d26101cd366004610c45565b610435565b604080516001600160801b03938416815292909116602083015201610122565b610205610200366004610c28565b61052f565b60405160029190910b8152602001610122565b610118610226366004610c92565b6106d9565b61023e610239366004610c28565b6106e4565b005b61011861024e366004610cab565b610741565b600054610194906001600160a01b031681565b610279610274366004610c92565b61075a565b6040516001600160801b039091168152602001610122565b61011861029f366004610cab565b610775565b6101186102b2366004610b39565b610783565b6101186102c5366004610cec565b610790565b6101946102d8366004610c92565b6107f3565b60006102ea848484610809565b90505b9392505050565b60006103008383610846565b90505b92915050565b60008060008060006103248c8c62ffffff16620f4240610809565b9050610330818a610d3d565b985061033c818d610d55565b6103469089610d3d565b9750891561036a5761035d81600160801b8c610868565b6103679087610d3d565b95505b50969a959950939750919550929350505050565b6000816103a9576103a4600173fffd8963efd1fc6a506488495d951d5263988d26610d6c565b610303565b6103036401000000006001610d94565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190610dd1565b5050600561ffff9091161015979650505050505050565b6000808486116104555761044e6102748589898761091a565b9150610495565b8685116104725761046b6102748589898761094b565b9050610495565b6104816102748587898761094b565b90506104926102748589888761091a565b91505b6104dd6040518060400160405280601781526020017f746f6b656e496e20616d6f756e743a2020202020202020000000000000000000815250836001600160801b031661099c565b6105256040518060400160405280601781526020017f746f6b656e4f757420616d6f756e743a20202020202020000000000000000000815250826001600160801b031661099c565b9550959350505050565b604080516003808252608082019092526000918291906020820160608036833701905050905060008160008151811061056a5761056a610e86565b63ffffffff9092166020928302919091019091015261058b6005600c610e9c565b61ffff16816001815181106105a2576105a2610e86565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0385169063883bdbfd906105e6908590600401610ec6565b600060405180830381865afa158015610603573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261062b9190810190610fd9565b5090508160018151811061064157610641610e86565b602002602001015160030b8160018151811061065f5761065f610e86565b60200260200101518260008151811061067a5761067a610e86565b602002602001015161068c91906110a5565b610696919061110b565b92506106c66040518060400160405280600d81526020016c30bb32b930b3b2903a34b1b59d60991b8152506109e5565b6106d28360020b610a2b565b5050919050565b600061030382610a70565b6040516332148f6760e01b8152600560048201526001600160a01b038216906332148f6790602401600060405180830381600087803b15801561072657600080fd5b505af115801561073a573d6000803e3d6000fd5b5050505050565b600061074f8585858561091a565b90505b949350505050565b806001600160801b038116811461077057600080fd5b919050565b600061074f8585858561094b565b60006102ea848484610868565b60008385116107b1576107aa83600160601b888803610868565b90506107ea565b8584116107d3576107aa826107cb8888600160601b610868565b888803610868565b60006107e684600160601b898803610868565b9150505b95945050505050565b806001600160a01b038116811461077057600080fd5b6000610816848484610868565b90508180610826576108266110f5565b838509156102ed57600019811061083c57600080fd5b6001019392505050565b60008183111561085d575060018183031115610303565b506001919003111590565b60008080600019858709858702925082811083820303915050806000036108a1576000841161089657600080fd5b5082900490506102ed565b8084116108ad57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000811561093a5761093385858503600160601b610809565b9050610752565b61074f85858503600160601b610868565b6000811561097357610933610967606087901b86860386610809565b85808204910615150190565b83610985606087901b86860386610868565b81610992576109926110f5565b0495945050505050565b6109e182826040516024016109b29291906111a4565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610b18565b5050565b610a28816040516024016109f991906111c6565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610b18565b50565b610a2881604051602401610a4191815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316632d5b6cb960e01b179052610b18565b60b581600160881b8110610a895760409190911b9060801c5b69010000000000000000008110610aa55760209190911b9060401c5b650100000000008110610abd5760109190911b9060201c5b63010000008110610ad35760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c80820481111561077057900490565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080600060608486031215610b4e57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215610b7857600080fd5b50508035926020909101359150565b600080600080600080600060e0888a031215610ba257600080fd5b87359650602088013562ffffff81168114610bbc57600080fd5b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b8015158114610a2857600080fd5b600060208284031215610c0857600080fd5b81356102ed81610be8565b6001600160a01b0381168114610a2857600080fd5b600060208284031215610c3a57600080fd5b81356102ed81610c13565b600080600080600060a08688031215610c5d57600080fd5b853594506020860135935060408601359250606086013591506080860135610c8481610be8565b809150509295509295909350565b600060208284031215610ca457600080fd5b5035919050565b60008060008060808587031215610cc157600080fd5b8435935060208501359250604085013591506060850135610ce181610be8565b939692955090935050565b600080600080600060a08688031215610d0457600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d5057610d50610d27565b500190565b600082821015610d6757610d67610d27565b500390565b60006001600160a01b0383811690831681811015610d8c57610d8c610d27565b039392505050565b60006001600160a01b03828116848216808303821115610db657610db6610d27565b01949350505050565b805161ffff8116811461077057600080fd5b600080600080600080600060e0888a031215610dec57600080fd5b8751610df781610c13565b8097505060208801518060020b8114610e0f57600080fd5b9550610e1d60408901610dbf565b9450610e2b60608901610dbf565b9350610e3960808901610dbf565b925060a088015160ff81168114610e4f57600080fd5b60c0890151909250610e6081610be8565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681851681830481118215151615610ebd57610ebd610d27565b02949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610f0457835163ffffffff1683529284019291840191600101610ee2565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f3957610f39610e70565b604052919050565b600067ffffffffffffffff821115610f5b57610f5b610e70565b5060051b60200190565b600082601f830112610f7657600080fd5b81516020610f8b610f8683610f41565b610f10565b82815260059290921b84018101918181019086841115610faa57600080fd5b8286015b84811015610fce578051610fc181610c13565b8352918301918301610fae565b509695505050505050565b60008060408385031215610fec57600080fd5b825167ffffffffffffffff8082111561100457600080fd5b818501915085601f83011261101857600080fd5b81516020611028610f8683610f41565b82815260059290921b8401810191818101908984111561104757600080fd5b948201945b838610156110755785518060060b81146110665760008081fd5b8252948201949082019061104c565b9188015191965090935050508082111561108e57600080fd5b5061109b85828601610f65565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156110d0576110d0610d27565b81667fffffffffffff0183138116156110eb576110eb610d27565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b8061113057634e487b7160e01b600052601260045260246000fd5b667fffffffffffff1982146000198214161561114e5761114e610d27565b90059392505050565b6000815180845260005b8181101561117d57602081850181015186830182015201611161565b8181111561118f576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006111b76040830185611157565b90508260208301529392505050565b602081526000610300602083018461115756fea2646970667358221220de19e93d01ed44c0d4b8e1c4c9a1de432712444e4368ca2e81326a9c404d829b64736f6c634300080d0033";

export class PoolsharkHedgePoolLibraries__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolsharkHedgePoolLibraries> {
    return super.deploy(
      overrides || {}
    ) as Promise<PoolsharkHedgePoolLibraries>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolsharkHedgePoolLibraries {
    return super.attach(address) as PoolsharkHedgePoolLibraries;
  }
  connect(signer: Signer): PoolsharkHedgePoolLibraries__factory {
    return super.connect(signer) as PoolsharkHedgePoolLibraries__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolsharkHedgePoolLibrariesInterface {
    return new utils.Interface(_abi) as PoolsharkHedgePoolLibrariesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolsharkHedgePoolLibraries {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PoolsharkHedgePoolLibraries;
  }
}

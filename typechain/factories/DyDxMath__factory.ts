/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DyDxMath, DyDxMathInterface } from "../DyDxMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610ff6610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c806372471890146100505780639026147314610080578063aec6cbfe146100b0575b600080fd5b61006a60048036038101906100659190610e0c565b6100e0565b6040516100779190610e82565b60405180910390f35b61009a60048036038101906100959190610e0c565b61017c565b6040516100a79190610e82565b60405180910390f35b6100ca60048036038101906100c59190610e9d565b610218565b6040516100d79190610e82565b60405180910390f35b600061010e7f630171e1c3e62c8bcb8d240cd441d3f03a6666d179b6ab3088b3cba77a2943a560001b610751565b61013a7f4b6c40f23fc923283362fc7741e3a36f65989e20f8a440e01edb731994191ea760001b610751565b6101667fede896f4f78e1bc6a0ffa1be4672a1b3c084e18c8d4853ab7d2cca0219d658c960001b610751565b61017285858585610754565b9050949350505050565b60006101aa7f42cb5aba2fafe33d1532f125b1aa86c9a9da5ab53a7f7c495ca9a3f16c8a10b260001b610751565b6101d67ff6766160f2038a20f494a0146e27a2029765a7b7482f6e15381f25f062f07b5e60001b610751565b6102027f8ba3c0667019e976d1eb7d070c4ebcf1365909f0ec418a0dd91be814098a9dc260001b610751565b61020e85858585610a3b565b9050949350505050565b60006102467f4f5db3c2dbc5ce7b2fe7e458af15d7b47d08fe58f173db26291e2bf942fc526a60001b610751565b6102727fc3f3a2c3f26b4fac01d9aa28d11862430bb7852236103f9214265fecdafd812a60001b610751565b61029e7f03903ed94a4e05bbb6d4bb9925074c8ceb243fd57c7bd0d536bcd0084bc08f4560001b610751565b6102ca7fecee7e3329da091d5d97d6512a2cc0dfe8e017d7c1ce2edf6ecb9defbfa38cbe60001b610751565b8385116103e7576102fd7f6b0a534eb5fa808204021894c577c8f5074e8413f8ce1a8a3688e223c0237ecb60001b610751565b6103297f29a526abc91c0840448ec6b97d5b51de903016fb7e34097ac0385ec3e7ba06d960001b610751565b6103557f7d747ae1f6c180e636d993563f49667310e2253e212b3983b6eccb96f4d3b40960001b610751565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912846c010000000000000000000000008989036040518463ffffffff1660e01b815260040161039f93929190610f18565b602060405180830381865af41580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190610f64565b9050610748565b6104137f2920f553c0a915c439c415903037a51ebf228a32485ec53997705dd60d8bdf4e60001b610751565b61043f7f63b6982a102a765042f816c2271427a97cd68954aa5c448a76556b132bcf180b60001b610751565b8584116105d7576104727f01798eb5e3b53c0d4b916a40beb4f2490ba081a242f9d02413d6183b1f0ac96260001b610751565b61049e7f1648be966789504f850d68f9e47248349afd96d2912a88f264ce96d4b32e839760001b610751565b6104ca7f7d057c855aa6b34d6fbdc9e1308ff7692dfc3dd482f7365225e7de6573da4a4460001b610751565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a09128373__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a09128a8a6c010000000000000000000000006040518463ffffffff1660e01b815260040161052d93929190610f18565b602060405180830381865af415801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190610f64565b8989036040518463ffffffff1660e01b815260040161058f93929190610f18565b602060405180830381865af41580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190610f64565b9050610747565b6106037f131bb553c48628f1a66c40142f793cb920fc6d111c8213ed189575d1d2da3e6260001b610751565b61062f7f8026ec63a68d02ead0042650b7a1cc8ffab94e6704386ab80aed1d68cb222c0b60001b610751565b61065b7fd91e14bc4fbe6ed91f59f2a276c833144e327e9bb1fecea2f9002ea125bcc5f060001b610751565b600073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912856c010000000000000000000000008a89036040518463ffffffff1660e01b81526004016106a793929190610f18565b602060405180830381865af41580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610f64565b90506107167f05b1d5bf85df86ecd68f6f3510b7f64426c8175b088bac413d5b29c226e914fd60001b610751565b6107427f9f930ce61148821978bfb8ab6a258046dadac7f2802976e1eb3ee2683e11d5a960001b610751565b809150505b5b95945050505050565b50565b60006107827f6f8755f2b58dac8186a7012e9f55450a929b982ef85653bea24ba8a472ab8e5860001b610751565b6107ae7f5e34a9c270210445502e22341747e9e5f875216e335249ff899eabb5e8f2a54f60001b610751565b6107da7f3a52bb343ca04f0f404702f81eaec1e1adc72b55706f3817fea7a6d1a31919c860001b610751565b6108067fb1e93f0a1e5acf2ec3780d515040ff183c3aba0a9c59512f3316ebdcba51251160001b610751565b8115610921576108377e40fbe68978656a93c1a005a5874bfc81da3ebbd69484ce072fb016b26be0a960001b610751565b6108637f0460ff74eaf9467bc077671dc9030fec574ec5aaad04b499fbdd3503e42101f260001b610751565b61088f7f2b2c763205232a8507ff0aeed263c8d2f411c5263cec268057b507a69d4ad45a60001b610751565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__630af8b27f868686036c010000000000000000000000006040518463ffffffff1660e01b81526004016108d993929190610f18565b602060405180830381865af41580156108f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091a9190610f64565b9050610a33565b61094d7f91215ef5a4cd8d63b312910e2b01039cc5c9a7d42671aa33ce060db71282ed3560001b610751565b6109797fe4a8c9ed8a267da17c5b394eab4134db15c0af57e8fcd433dee5ead078ad923360001b610751565b6109a57fba0a8d1092a390af097ce48bee423e3feb36d7518ba3c9182938234fc9b31bf260001b610751565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912868686036c010000000000000000000000006040518463ffffffff1660e01b81526004016109ef93929190610f18565b602060405180830381865af4158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190610f64565b90505b949350505050565b6000610a697f6acb8ad062654d46b05062601e1f6fd88bae2311dcf7b0b9e1bd105e8dc1fe2560001b610751565b610a957fbe4f2e22ad778e7427a52f440d43725bbc13d8c3da9a940bdc047e263670b01e60001b610751565b610ac17f94cc3121311bead50fa98e47920200036a18646716a14b74b648e033b888f26260001b610751565b610aed7fdfa5547c24523174b4d28df90784baafae6bfa79440d6373494bd1c797ac92e960001b610751565b8115610c0957610b1f7fe835c09ee23c4ba2423f80fcc7d37ed45bf612dffd89e121a7758445d6eb600360001b610751565b610b4b7f732d583458d5633894a2341b87878bc3f7634310b645b3d56230281fa4b090c860001b610751565b610b777fb9d1b63feb9af593b62043faac98bb8762524e1c06a123d9d364c86ed3dc7f1c60001b610751565b610c0273__$1b9fef1800622f5f6a93914ffdeb7ba32f$__630af8b27f606088901b878703876040518463ffffffff1660e01b8152600401610bbb93929190610f18565b602060405180830381865af4158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190610f64565b85610d2a565b9050610d22565b610c357f1ec5eb804d48e9b32ba1b70f4f088085ec805bcfa60095ec2d8465e0fc6f489e60001b610751565b610c617ff655fb9ccd21751ae26a911f597d80a50ddcebc8d8cd7b18e538640ef8d6cbd660001b610751565b610c8d7ff48524fc5efa4e6c2c9e714e64673dfceca35e97c838bcb19ef4a7c087bca75b60001b610751565b8373__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912606088901b878703876040518463ffffffff1660e01b8152600401610ccf93929190610f18565b602060405180830381865af4158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190610f64565b81610d1e57610d1d610f91565b5b0490505b949350505050565b6000610d587f98cfd2effaf6042fc486a87c4d270b597f8ddb433fdfa225030a8d767d36165e60001b610d96565b610d847fa3e45b1795347b0b2db634dfd1f568ba219d5a88f052c1f3a4b4d2190320f2e760001b610d96565b60008284061182840401905092915050565b50565b600080fd5b6000819050919050565b610db181610d9e565b8114610dbc57600080fd5b50565b600081359050610dce81610da8565b92915050565b60008115159050919050565b610de981610dd4565b8114610df457600080fd5b50565b600081359050610e0681610de0565b92915050565b60008060008060808587031215610e2657610e25610d99565b5b6000610e3487828801610dbf565b9450506020610e4587828801610dbf565b9350506040610e5687828801610dbf565b9250506060610e6787828801610df7565b91505092959194509250565b610e7c81610d9e565b82525050565b6000602082019050610e976000830184610e73565b92915050565b600080600080600060a08688031215610eb957610eb8610d99565b5b6000610ec788828901610dbf565b9550506020610ed888828901610dbf565b9450506040610ee988828901610dbf565b9350506060610efa88828901610dbf565b9250506080610f0b88828901610dbf565b9150509295509295909350565b6000606082019050610f2d6000830186610e73565b610f3a6020830185610e73565b610f476040830184610e73565b949350505050565b600081519050610f5e81610da8565b92915050565b600060208284031215610f7a57610f79610d99565b5b6000610f8884828501610f4f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212203267ef43a9d16ebcf22802d63992ebcbd1b2ee30af35564aadb519f01ceb0e0964736f6c634300080d0033";

type DyDxMathConstructorParams =
  | [linkLibraryAddresses: DyDxMathLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DyDxMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DyDxMath__factory extends ContractFactory {
  constructor(...args: DyDxMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, DyDxMath__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: DyDxMathLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DyDxMath> {
    return super.deploy(overrides || {}) as Promise<DyDxMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DyDxMath {
    return super.attach(address) as DyDxMath;
  }
  connect(signer: Signer): DyDxMath__factory {
    return super.connect(signer) as DyDxMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DyDxMathInterface {
    return new utils.Interface(_abi) as DyDxMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DyDxMath {
    return new Contract(address, _abi, signerOrProvider) as DyDxMath;
  }
}

export interface DyDxMathLibraryAddresses {
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DyDxMath, DyDxMathInterface } from "../DyDxMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "token0amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "token1amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x611710610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80633ef270111461005b578063724718901461008c57806390261473146100bc578063aec6cbfe146100ec575b600080fd5b6100756004803603810190610070919061137f565b61011c565b604051610083929190611425565b60405180910390f35b6100a660048036038101906100a1919061144e565b61058d565b6040516100b391906114c4565b60405180910390f35b6100d660048036038101906100d1919061144e565b610629565b6040516100e391906114c4565b60405180910390f35b610106600480360381019061010191906114df565b6106c5565b60405161011391906114c4565b60405180910390f35b60008061014b7f7ac4b2cb2c153de70e4c84f53e292cf44167ebdf64573919445a8583d39eda9f60001b610bfe565b6101777fd3bc7d9ef90d803e97a7671340ffbaa62a0667f0369b62b82bf96a779f5b8d6360001b610bfe565b6101a37f9bc5602716cdbbbea5648e11fab39f2e0827652a4a275e63ecc4cb944bf7f46760001b610bfe565b848611610241576101d67f4830018278f4aa40eec967aba9c1a281598129486d01041ef5eff50e6bc6fa1e60001b610bfe565b6102027f06247c42a1ef6a3f1ce07b2aeb84c4e68ed159dea3eab0a710232728a14b3ca060001b610bfe565b61022e7ff3db3130dad4d73eba59de54e55d7dc5054163fea8f92fd896699689a145048d60001b610bfe565b61023a84888886610c01565b9050610431565b61026d7fd5d53d1f2785cd7c1239a68d9215530efd872b96b79287224e63d14e2d503d4a60001b610bfe565b6102997fb477758106ef2e98b7300705b79944eda667e63e5a57809ddd687e1b128c2ddb60001b610bfe565b868511610337576102cc7ff922f750472bdf2f87faebe8ebc7160df8ca62287adce4a9d04a7b7133fce53660001b610bfe565b6102f87f04a967409b7bd7096704655c84228ffc02dfb0cf694d056b055d599af347836560001b610bfe565b6103247f4d3373ed40cacc1e3942e5f266b5921b3de4c4af9177c56fe6cee5a312710afa60001b610bfe565b61033084888886610ee9565b9150610430565b6103637f70d869353e6ce33514cc5e318c838a9965580bb86de9e2ef44106729c66adb3260001b610bfe565b61038f7f8e5251259cf2323e7d45d1ab5b04df40d55523ee92c9b11725fda2a73f4a024160001b610bfe565b6103bb7f3b3c6b493bc401df3c53954300621c9df7f285f6684255f074d7b98841505d5f60001b610bfe565b6103c784868886610ee9565b91506103f57f608c844d14742fe6907f4aa3211568d742489c7cbf2024ffd753d6f8b8cea78f60001b610bfe565b6104217f2ee7edf759363a875017975d1c7cb2fa6674ce9c063e86f154a141325b1f496960001b610bfe565b61042d84888786610c01565b90505b5b61045d7f2cef810144b63094a90adbec880294f4aa3730e65d600224bf560aeadb27928a60001b610bfe565b6104897fa53f817792adda067534140766e922e146c7ebcace987f522cc886e5dcbe9c8260001b610bfe565b6104da6040518060400160405280601781526020017f746f6b656e496e20616d6f756e743a2020202020202020000000000000000000815250836fffffffffffffffffffffffffffffffff166111d8565b6105067f5fbfaab907680442b3f291ccabcb27edea616241c27a7db3f902073be2ab99d160001b610bfe565b6105327f1dcd88f2962c9066756fce748462b4df031eeecfce54f0b522c027e2f292c53260001b610bfe565b6105836040518060400160405280601781526020017f746f6b656e4f757420616d6f756e743a20202020202020000000000000000000815250826fffffffffffffffffffffffffffffffff166111d8565b9550959350505050565b60006105bb7f4e4d86617b5e28c7fa7d9d60fb394615a39d30427c4fa796fe7df5c9386d9c0060001b610bfe565b6105e77ff2b2d8581dac0a857183ef1d30b931cd05bb09846219be0f54ba443b263c4b1a60001b610bfe565b6106137fa151e00cd7a92b07065fd06f404881905d932650fa77e26c36b2dd1e5dee540c60001b610bfe565b61061f85858585610c01565b9050949350505050565b60006106577f1a19224647616f10e2c01b0e4727af184456a8da06c7bcc8ed382afe14f2921760001b610bfe565b6106837fddf259eaf57b630ead8b6fef9e58bd7e440102a7d3d802d30b30dcbc87d1c4b060001b610bfe565b6106af7fa95f2c9bb7fa230eb6cfade8aef1ec50160e725988024f27867330e4c1449ea560001b610bfe565b6106bb85858585610ee9565b9050949350505050565b60006106f37f513072c9a33e860faf06383bd43653d1245ffa207decd488a92e5a26503a626e60001b610bfe565b61071f7fbf8b6f8657efcf7db2c3be60c52bb4b806eaaa13396874097a26a8fef396b06e60001b610bfe565b61074b7f67dadd9853b886fc109508a7a7e187d32ffe60cfe452c38a41a5751246847b3e60001b610bfe565b6107777f83b9338e8d12f18a91857bb5772d9f4c091cc817da6933ca96db81e01e9ff0e160001b610bfe565b838511610894576107aa7f96bba51365df28a9cea5454a45b258398c21fee5add4b7acd52e34dcf93956af60001b610bfe565b6107d67fd6eaefe3592478e11ce08d1ed63bc175241a82209f3fd208b640c22c87c8860e60001b610bfe565b6108027f49d2139f7c43d37025a56e2983b04621274ed27507e73a5eee9d2657c81f598860001b610bfe565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912846c010000000000000000000000008989036040518463ffffffff1660e01b815260040161084c9392919061155a565b602060405180830381865af4158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d91906115a6565b9050610bf5565b6108c07f229e3df9dcd4a25b20c51b30533c6452b494969e0a16a9d266ab9590ea5a438760001b610bfe565b6108ec7f8adf4720f35e026a22a41aaf5108f4415df2dc1018b6c7a6b846789f34bd36aa60001b610bfe565b858411610a845761091f7fc7e358011da7b626cf004346003733e5473ff409ab82093589016f4d3ab9a66460001b610bfe565b61094b7fe1069acdf3fb57f393586c0f6eb66b63bfb72e96aa5273cc1351f1ffcdc8998d60001b610bfe565b6109777f23720e5fa17f47d0e7e86b07830d65c68087910f3806fb69dba682c941f3dcf060001b610bfe565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a09128373__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a09128a8a6c010000000000000000000000006040518463ffffffff1660e01b81526004016109da9392919061155a565b602060405180830381865af41580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b91906115a6565b8989036040518463ffffffff1660e01b8152600401610a3c9392919061155a565b602060405180830381865af4158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d91906115a6565b9050610bf4565b610ab07f081e8a1bb400dc95295d058df2c69bf0e90de180256c7191accacc042d475a6060001b610bfe565b610adc7f8e4f5477dca8f1a4a3b9fb08bae7e341df638142773460d6487d8b3afef6c7ff60001b610bfe565b610b087f71d01cae6f785eeff486bbac2824c022860a22dddf09e5b92d976918636055c560001b610bfe565b600073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912856c010000000000000000000000008a89036040518463ffffffff1660e01b8152600401610b549392919061155a565b602060405180830381865af4158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906115a6565b9050610bc37f985041110d29fb27bbf67408f982315d3962011fd4b3c091cc864457e943731d60001b610bfe565b610bef7fb3c2000c1afce72e7e55873758bbdb9f26128c88667552674d75b6276867fa6d60001b610bfe565b809150505b5b95945050505050565b50565b6000610c2f7f9a748e2922250610d40d17b7939962be893e5142eb46901d2c5e58b3b20c1f4660001b610bfe565b610c5b7f6298a82a8ac43ca8a5fce3f4b931326b15187c756f83a91b1999d625f348399160001b610bfe565b610c877fd94d09b9bcd9b52bfc6f6c793c19fb6686f4382d835565a52b092be4483e6a8760001b610bfe565b610cb37f6df7d20eb2c1a498441c99ceb42d382875c30c2f0160f30c4d3185d63e55fbff60001b610bfe565b8115610dcf57610ce57ffece312ea3a4a991e961466ab28f7d06ceb61bc303b864b03ebcd3d6f6bff10860001b610bfe565b610d117f9ce8ab7a14d3ec35dd780ccb6f2561bbc1de74400013e1b5d09f4dbcf339919360001b610bfe565b610d3d7f94be3dd95790b8940098f7c2d180454d378cf7be71c612f58fb20d57a30d685c60001b610bfe565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__630af8b27f868686036c010000000000000000000000006040518463ffffffff1660e01b8152600401610d879392919061155a565b602060405180830381865af4158015610da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc891906115a6565b9050610ee1565b610dfb7fc036dffb3c57f7d2af101a610f4d85511c07da1f7a82bf8fe2e75264a1b60dfd60001b610bfe565b610e277f6fda3ef59461ccadc69369898484b34d7f87f3997403921b3b0f3681df5ba28e60001b610bfe565b610e537fef96971e7f6d193809a234be6b8fa66126b1f8d7e2a0ebb2475b5e7f3c99f70e60001b610bfe565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912868686036c010000000000000000000000006040518463ffffffff1660e01b8152600401610e9d9392919061155a565b602060405180830381865af4158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede91906115a6565b90505b949350505050565b6000610f177fde7eb59a907216737fb1b1484a51b71f68d39d18050643e221187647adb0082260001b610bfe565b610f437fe2a9f50e4e4b7e7c5ba56d5c6b79c783ac6e130dbd9f8931d1158b2f6fb2092760001b610bfe565b610f6f7fc9dc79460f386d51c679876aa6eefeaede6a6ebc240b8cae8d39aaa8fa27d87560001b610bfe565b610f9b7fff005adfeb11016c8f908a504d03f1281aa5047b2c4376f8b638c971c3c8bbab60001b610bfe565b81156110b757610fcd7fb8d6a4c6d2aa373adad8402e824f610d0618f4b747b4f51abb1b479986506a2860001b610bfe565b610ff97f92581b8aa6bebd191c5ad214758a292e1ab263449cf4ce4c7d8f6ba50ad47deb60001b610bfe565b6110257f5a3b8dda7fe0054b96098dccd7b34b369f7721ad0a711ecb36a3998ce193502c60001b610bfe565b6110b073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__630af8b27f606088901b878703876040518463ffffffff1660e01b81526004016110699392919061155a565b602060405180830381865af4158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa91906115a6565b85611274565b90506111d0565b6110e37f1669354f9c4854d75f145a76b9e5bee7ee03d233870fcf72fd8129eac5b6b14a60001b610bfe565b61110f7f05d91932aa49a273678b907d4b7b1aa5a983d69fa93314cfb28283b4cab6bb3360001b610bfe565b61113b7f54d1f0bce848fcdbe7e21495b93307ae0a31744f8190b40d9c06ef352a82fd5260001b610bfe565b8373__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912606088901b878703876040518463ffffffff1660e01b815260040161117d9392919061155a565b602060405180830381865af415801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be91906115a6565b816111cc576111cb6115d3565b5b0490505b949350505050565b61127082826040516024016111ee9291906116aa565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112e0565b5050565b60006112a27f93c9e995106ce5a81fd7659b4800d3e49358f5a5972017c93df6cfa7c532929960001b611309565b6112ce7f5fac17bfb96b74fa790b63cea179a4d72ff0262edd6dc92ca2a5cdec40d8ba6b60001b611309565b60008284061182840401905092915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b50565b600080fd5b6000819050919050565b61132481611311565b811461132f57600080fd5b50565b6000813590506113418161131b565b92915050565b60008115159050919050565b61135c81611347565b811461136757600080fd5b50565b60008135905061137981611353565b92915050565b600080600080600060a0868803121561139b5761139a61130c565b5b60006113a988828901611332565b95505060206113ba88828901611332565b94505060406113cb88828901611332565b93505060606113dc88828901611332565b92505060806113ed8882890161136a565b9150509295509295909350565b60006fffffffffffffffffffffffffffffffff82169050919050565b61141f816113fa565b82525050565b600060408201905061143a6000830185611416565b6114476020830184611416565b9392505050565b600080600080608085870312156114685761146761130c565b5b600061147687828801611332565b945050602061148787828801611332565b935050604061149887828801611332565b92505060606114a98782880161136a565b91505092959194509250565b6114be81611311565b82525050565b60006020820190506114d960008301846114b5565b92915050565b600080600080600060a086880312156114fb576114fa61130c565b5b600061150988828901611332565b955050602061151a88828901611332565b945050604061152b88828901611332565b935050606061153c88828901611332565b925050608061154d88828901611332565b9150509295509295909350565b600060608201905061156f60008301866114b5565b61157c60208301856114b5565b61158960408301846114b5565b949350505050565b6000815190506115a08161131b565b92915050565b6000602082840312156115bc576115bb61130c565b5b60006115ca84828501611591565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b8381101561163c578082015181840152602081019050611621565b8381111561164b576000848401525b50505050565b6000601f19601f8301169050919050565b600061166d82611602565b611677818561160d565b935061168781856020860161161e565b61169081611651565b840191505092915050565b6116a481611311565b82525050565b600060408201905081810360008301526116c48185611662565b90506116d3602083018461169b565b939250505056fea2646970667358221220d48c1dd178f03e5734e64a9070a6e1d990aea14f21b4541005d910049862d88a64736f6c634300080d0033";

type DyDxMathConstructorParams =
  | [linkLibraryAddresses: DyDxMathLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DyDxMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DyDxMath__factory extends ContractFactory {
  constructor(...args: DyDxMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, DyDxMath__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: DyDxMathLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DyDxMath> {
    return super.deploy(overrides || {}) as Promise<DyDxMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DyDxMath {
    return super.attach(address) as DyDxMath;
  }
  connect(signer: Signer): DyDxMath__factory {
    return super.connect(signer) as DyDxMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DyDxMathInterface {
    return new utils.Interface(_abi) as DyDxMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DyDxMath {
    return new Contract(address, _abi, signerOrProvider) as DyDxMath;
  }
}

export interface DyDxMathLibraryAddresses {
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
}

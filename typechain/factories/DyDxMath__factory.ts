/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DyDxMath, DyDxMathInterface } from "../DyDxMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "token0amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "token1amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61170f610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80633ef270111461005b578063724718901461008c57806390261473146100bc578063aec6cbfe146100ec575b600080fd5b6100756004803603810190610070919061137e565b61011c565b604051610083929190611424565b60405180910390f35b6100a660048036038101906100a1919061144d565b61058d565b6040516100b391906114c3565b60405180910390f35b6100d660048036038101906100d1919061144d565b610629565b6040516100e391906114c3565b60405180910390f35b610106600480360381019061010191906114de565b6106c5565b60405161011391906114c3565b60405180910390f35b60008061014b7f1ec5eb804d48e9b32ba1b70f4f088085ec805bcfa60095ec2d8465e0fc6f489e60001b610bfd565b6101777ff655fb9ccd21751ae26a911f597d80a50ddcebc8d8cd7b18e538640ef8d6cbd660001b610bfd565b6101a37ff48524fc5efa4e6c2c9e714e64673dfceca35e97c838bcb19ef4a7c087bca75b60001b610bfd565b848611610241576101d67f4f5db3c2dbc5ce7b2fe7e458af15d7b47d08fe58f173db26291e2bf942fc526a60001b610bfd565b6102027fc3f3a2c3f26b4fac01d9aa28d11862430bb7852236103f9214265fecdafd812a60001b610bfd565b61022e7f03903ed94a4e05bbb6d4bb9925074c8ceb243fd57c7bd0d536bcd0084bc08f4560001b610bfd565b61023a84888886610c00565b9050610431565b61026d7fecee7e3329da091d5d97d6512a2cc0dfe8e017d7c1ce2edf6ecb9defbfa38cbe60001b610bfd565b6102997f6b0a534eb5fa808204021894c577c8f5074e8413f8ce1a8a3688e223c0237ecb60001b610bfd565b868511610337576102cc7f29a526abc91c0840448ec6b97d5b51de903016fb7e34097ac0385ec3e7ba06d960001b610bfd565b6102f87f7d747ae1f6c180e636d993563f49667310e2253e212b3983b6eccb96f4d3b40960001b610bfd565b6103247f2920f553c0a915c439c415903037a51ebf228a32485ec53997705dd60d8bdf4e60001b610bfd565b61033084888886610ee8565b9150610430565b6103637f63b6982a102a765042f816c2271427a97cd68954aa5c448a76556b132bcf180b60001b610bfd565b61038f7f01798eb5e3b53c0d4b916a40beb4f2490ba081a242f9d02413d6183b1f0ac96260001b610bfd565b6103bb7f1648be966789504f850d68f9e47248349afd96d2912a88f264ce96d4b32e839760001b610bfd565b6103c784868886610ee8565b91506103f57f7d057c855aa6b34d6fbdc9e1308ff7692dfc3dd482f7365225e7de6573da4a4460001b610bfd565b6104217f131bb553c48628f1a66c40142f793cb920fc6d111c8213ed189575d1d2da3e6260001b610bfd565b61042d84888786610c00565b90505b5b61045d7f8026ec63a68d02ead0042650b7a1cc8ffab94e6704386ab80aed1d68cb222c0b60001b610bfd565b6104897fd91e14bc4fbe6ed91f59f2a276c833144e327e9bb1fecea2f9002ea125bcc5f060001b610bfd565b6104da6040518060400160405280601781526020017f746f6b656e496e20616d6f756e743a2020202020202020000000000000000000815250836fffffffffffffffffffffffffffffffff166111d7565b6105067f05b1d5bf85df86ecd68f6f3510b7f64426c8175b088bac413d5b29c226e914fd60001b610bfd565b6105327f9f930ce61148821978bfb8ab6a258046dadac7f2802976e1eb3ee2683e11d5a960001b610bfd565b6105836040518060400160405280601781526020017f746f6b656e4f757420616d6f756e743a20202020202020000000000000000000815250826fffffffffffffffffffffffffffffffff166111d7565b9550959350505050565b60006105bb7f4d3373ed40cacc1e3942e5f266b5921b3de4c4af9177c56fe6cee5a312710afa60001b610bfd565b6105e77f70d869353e6ce33514cc5e318c838a9965580bb86de9e2ef44106729c66adb3260001b610bfd565b6106137f8e5251259cf2323e7d45d1ab5b04df40d55523ee92c9b11725fda2a73f4a024160001b610bfd565b61061f85858585610c00565b9050949350505050565b60006106577f3b3c6b493bc401df3c53954300621c9df7f285f6684255f074d7b98841505d5f60001b610bfd565b6106837f608c844d14742fe6907f4aa3211568d742489c7cbf2024ffd753d6f8b8cea78f60001b610bfd565b6106af7f2ee7edf759363a875017975d1c7cb2fa6674ce9c063e86f154a141325b1f496960001b610bfd565b6106bb85858585610ee8565b9050949350505050565b60006106f37f6f8755f2b58dac8186a7012e9f55450a929b982ef85653bea24ba8a472ab8e5860001b610bfd565b61071f7f5e34a9c270210445502e22341747e9e5f875216e335249ff899eabb5e8f2a54f60001b610bfd565b61074b7f3a52bb343ca04f0f404702f81eaec1e1adc72b55706f3817fea7a6d1a31919c860001b610bfd565b6107777fb1e93f0a1e5acf2ec3780d515040ff183c3aba0a9c59512f3316ebdcba51251160001b610bfd565b838511610893576107a97e40fbe68978656a93c1a005a5874bfc81da3ebbd69484ce072fb016b26be0a960001b610bfd565b6107d57f0460ff74eaf9467bc077671dc9030fec574ec5aaad04b499fbdd3503e42101f260001b610bfd565b6108017f2b2c763205232a8507ff0aeed263c8d2f411c5263cec268057b507a69d4ad45a60001b610bfd565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912846c010000000000000000000000008989036040518463ffffffff1660e01b815260040161084b93929190611559565b602060405180830381865af4158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c91906115a5565b9050610bf4565b6108bf7f91215ef5a4cd8d63b312910e2b01039cc5c9a7d42671aa33ce060db71282ed3560001b610bfd565b6108eb7fe4a8c9ed8a267da17c5b394eab4134db15c0af57e8fcd433dee5ead078ad923360001b610bfd565b858411610a835761091e7fba0a8d1092a390af097ce48bee423e3feb36d7518ba3c9182938234fc9b31bf260001b610bfd565b61094a7f6acb8ad062654d46b05062601e1f6fd88bae2311dcf7b0b9e1bd105e8dc1fe2560001b610bfd565b6109767fbe4f2e22ad778e7427a52f440d43725bbc13d8c3da9a940bdc047e263670b01e60001b610bfd565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a09128373__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a09128a8a6c010000000000000000000000006040518463ffffffff1660e01b81526004016109d993929190611559565b602060405180830381865af41580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a91906115a5565b8989036040518463ffffffff1660e01b8152600401610a3b93929190611559565b602060405180830381865af4158015610a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7c91906115a5565b9050610bf3565b610aaf7f94cc3121311bead50fa98e47920200036a18646716a14b74b648e033b888f26260001b610bfd565b610adb7fdfa5547c24523174b4d28df90784baafae6bfa79440d6373494bd1c797ac92e960001b610bfd565b610b077fe835c09ee23c4ba2423f80fcc7d37ed45bf612dffd89e121a7758445d6eb600360001b610bfd565b600073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912856c010000000000000000000000008a89036040518463ffffffff1660e01b8152600401610b5393929190611559565b602060405180830381865af4158015610b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9491906115a5565b9050610bc27f732d583458d5633894a2341b87878bc3f7634310b645b3d56230281fa4b090c860001b610bfd565b610bee7fb9d1b63feb9af593b62043faac98bb8762524e1c06a123d9d364c86ed3dc7f1c60001b610bfd565b809150505b5b95945050505050565b50565b6000610c2e7f2cef810144b63094a90adbec880294f4aa3730e65d600224bf560aeadb27928a60001b610bfd565b610c5a7fa53f817792adda067534140766e922e146c7ebcace987f522cc886e5dcbe9c8260001b610bfd565b610c867f5fbfaab907680442b3f291ccabcb27edea616241c27a7db3f902073be2ab99d160001b610bfd565b610cb27f1dcd88f2962c9066756fce748462b4df031eeecfce54f0b522c027e2f292c53260001b610bfd565b8115610dce57610ce47f8273c0a302f3e8c3ae3b665d5bdafe5eebaa5d5d62a42f9954552b0236c982b260001b610bfd565b610d107f91f864ff8365cbfc5487ea9348518e197b9547b3644d560e4893d1603b86c10860001b610bfd565b610d3c7f2c438b81b5e2cc56778e15f7add420eb8ca7d241f828af832aa1895f5757e75b60001b610bfd565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__630af8b27f868686036c010000000000000000000000006040518463ffffffff1660e01b8152600401610d8693929190611559565b602060405180830381865af4158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc791906115a5565b9050610ee0565b610dfa7fefec085b2bcfc23f447272dba03b026e8647436cbd7dfbedc8f189644e12137760001b610bfd565b610e267f15c492c578e9bc8c38649e5114eec2637bd384d63d5583f7ab355aae6ef1e96c60001b610bfd565b610e527fd99b6c48646475201c7dbe03c6f3ef2f1d8f132e67dbe2a8c5c6d4c8e077396460001b610bfd565b73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912868686036c010000000000000000000000006040518463ffffffff1660e01b8152600401610e9c93929190611559565b602060405180830381865af4158015610eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edd91906115a5565b90505b949350505050565b6000610f167fe9dac47ec66622308afa18405015dec2a2fff6fc9551446ff3c79957c7990ba560001b610bfd565b610f427f1b1a6f810f21d10bbfa2d85be70f74a4f2171b7993a231c43726ea2da5fea49e60001b610bfd565b610f6e7f9a6edc5507f7646a4a2e6ec09d8dc9c44aa3f2e012d66b304cfc7e0de978a5a660001b610bfd565b610f9a7f01c802342ff2fa2c631b8ae9baa31503b506e106caeb73bad1422576d97db48b60001b610bfd565b81156110b657610fcc7f630171e1c3e62c8bcb8d240cd441d3f03a6666d179b6ab3088b3cba77a2943a560001b610bfd565b610ff87f4b6c40f23fc923283362fc7741e3a36f65989e20f8a440e01edb731994191ea760001b610bfd565b6110247fede896f4f78e1bc6a0ffa1be4672a1b3c084e18c8d4853ab7d2cca0219d658c960001b610bfd565b6110af73__$1b9fef1800622f5f6a93914ffdeb7ba32f$__630af8b27f606088901b878703876040518463ffffffff1660e01b815260040161106893929190611559565b602060405180830381865af4158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a991906115a5565b85611273565b90506111cf565b6110e27f42cb5aba2fafe33d1532f125b1aa86c9a9da5ab53a7f7c495ca9a3f16c8a10b260001b610bfd565b61110e7ff6766160f2038a20f494a0146e27a2029765a7b7482f6e15381f25f062f07b5e60001b610bfd565b61113a7f8ba3c0667019e976d1eb7d070c4ebcf1365909f0ec418a0dd91be814098a9dc260001b610bfd565b8373__$1b9fef1800622f5f6a93914ffdeb7ba32f$__63aa9a0912606088901b878703876040518463ffffffff1660e01b815260040161117c93929190611559565b602060405180830381865af4158015611199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bd91906115a5565b816111cb576111ca6115d2565b5b0490505b949350505050565b61126f82826040516024016111ed9291906116a9565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112df565b5050565b60006112a17feea4253bd0f9179501670d6b58f0a143def3b8fb854f1ae966117be77a9fef6460001b611308565b6112cd7f36594b76efe1c0b024494c4cc30e189f6c95749004177866d45859954bff259b60001b611308565b60008284061182840401905092915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b50565b600080fd5b6000819050919050565b61132381611310565b811461132e57600080fd5b50565b6000813590506113408161131a565b92915050565b60008115159050919050565b61135b81611346565b811461136657600080fd5b50565b60008135905061137881611352565b92915050565b600080600080600060a0868803121561139a5761139961130b565b5b60006113a888828901611331565b95505060206113b988828901611331565b94505060406113ca88828901611331565b93505060606113db88828901611331565b92505060806113ec88828901611369565b9150509295509295909350565b60006fffffffffffffffffffffffffffffffff82169050919050565b61141e816113f9565b82525050565b60006040820190506114396000830185611415565b6114466020830184611415565b9392505050565b600080600080608085870312156114675761146661130b565b5b600061147587828801611331565b945050602061148687828801611331565b935050604061149787828801611331565b92505060606114a887828801611369565b91505092959194509250565b6114bd81611310565b82525050565b60006020820190506114d860008301846114b4565b92915050565b600080600080600060a086880312156114fa576114f961130b565b5b600061150888828901611331565b955050602061151988828901611331565b945050604061152a88828901611331565b935050606061153b88828901611331565b925050608061154c88828901611331565b9150509295509295909350565b600060608201905061156e60008301866114b4565b61157b60208301856114b4565b61158860408301846114b4565b949350505050565b60008151905061159f8161131a565b92915050565b6000602082840312156115bb576115ba61130b565b5b60006115c984828501611590565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b8381101561163b578082015181840152602081019050611620565b8381111561164a576000848401525b50505050565b6000601f19601f8301169050919050565b600061166c82611601565b611676818561160c565b935061168681856020860161161d565b61168f81611650565b840191505092915050565b6116a381611310565b82525050565b600060408201905081810360008301526116c38185611661565b90506116d2602083018461169a565b939250505056fea2646970667358221220b6487605a32c88da01c9f94357da5d7d651e2c137ae09ab87a6b1b5efd74913c64736f6c634300080d0033";

type DyDxMathConstructorParams =
  | [linkLibraryAddresses: DyDxMathLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DyDxMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DyDxMath__factory extends ContractFactory {
  constructor(...args: DyDxMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, DyDxMath__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: DyDxMathLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DyDxMath> {
    return super.deploy(overrides || {}) as Promise<DyDxMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DyDxMath {
    return super.attach(address) as DyDxMath;
  }
  connect(signer: Signer): DyDxMath__factory {
    return super.connect(signer) as DyDxMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DyDxMathInterface {
    return new utils.Interface(_abi) as DyDxMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DyDxMath {
    return new Contract(address, _abi, signerOrProvider) as DyDxMath;
  }
}

export interface DyDxMathLibraryAddresses {
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
}

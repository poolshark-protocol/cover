/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DyDxMath, DyDxMathInterface } from "../DyDxMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "token0amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "token1amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDx",
    outputs: [
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceLower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUpper",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61083b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80633ef270111461005b578063724718901461009357806390261473146100b4578063aec6cbfe146100c7575b600080fd5b61006e6100693660046106b6565b6100da565b604080516001600160801b039384168152929091166020830152015b60405180910390f35b6100a66100a13660046106ff565b6101c8565b60405190815260200161008a565b6100a66100c23660046106ff565b6101e1565b6100a66100d536600461073e565b6101ef565b6000808486116100f7576100f0848888866103df565b905061012e565b8685116101115761010a848888866104fa565b915061012e565b61011d848688866104fa565b915061012b848887866103df565b90505b6101766040518060400160405280601781526020017f746f6b656e496e20616d6f756e743a2020202020202020000000000000000000815250836001600160801b0316610637565b6101be6040518060400160405280601781526020017f746f6b656e4f757420616d6f756e743a20202020202020000000000000000000815250826001600160801b0316610637565b9550959350505050565b60006101d6858585856103df565b90505b949350505050565b60006101d6858585856104fa565b60008385116102865760405163554d048960e11b815260048101849052600160601b6024820152868603604482015273__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a0912906064015b602060405180830381865af415801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190610779565b90506103d6565b8584116103495760405163554d048960e11b81526004810187905260248101869052600160601b604482015273__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290849083908390606401602060405180830381865af41580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610779565b6040516001600160e01b031960e085901b16815260048101929092526024820152888803604482015260640161023e565b60405163554d048960e11b815260048101849052600160601b6024820152868503604482015260009073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610779565b9150505b95945050505050565b6000811561047457604051630af8b27f60e01b8152600481018690528484036024820152600160601b604482015273__$1b9fef1800622f5f6a93914ffdeb7ba32f$__90630af8b27f90606401602060405180830381865af4158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d9190610779565b90506101d9565b60405163554d048960e11b8152600481018690528484036024820152600160601b604482015273__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190610779565b6000811561059857604051630af8b27f60e01b8152606086901b600482015284840360248201526044810184905261046d9073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__90630af8b27f90606401602060405180830381865af4158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610779565b85808204910615150190565b60405163554d048960e11b8152606086901b6004820152848403602482015260448101849052849073__$1b9fef1800622f5f6a93914ffdeb7ba32f$__9063aa9a091290606401602060405180830381865af41580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610779565b8161062d5761062d610792565b0495945050505050565b61067c828260405160240161064d9291906107a8565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610680565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803580151581146106b157600080fd5b919050565b600080600080600060a086880312156106ce57600080fd5b853594506020860135935060408601359250606086013591506106f3608087016106a1565b90509295509295909350565b6000806000806080858703121561071557600080fd5b843593506020850135925060408501359150610733606086016106a1565b905092959194509250565b600080600080600060a0868803121561075657600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561078b57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b604081526000835180604084015260005b818110156107d657602081870181015160608684010152016107b9565b818111156107e8576000606083860101525b50602083019390935250601f91909101601f19160160600191905056fea264697066735822122005e04cd11418ce71d8b8c77423fc4eb089ffc480658c239892a6162c78556fae64736f6c634300080d0033";

type DyDxMathConstructorParams =
  | [linkLibraryAddresses: DyDxMathLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DyDxMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DyDxMath__factory extends ContractFactory {
  constructor(...args: DyDxMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, DyDxMath__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: DyDxMathLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1b9fef1800622f5f6a93914ffdeb7ba32f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DyDxMath> {
    return super.deploy(overrides || {}) as Promise<DyDxMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DyDxMath {
    return super.attach(address) as DyDxMath;
  }
  connect(signer: Signer): DyDxMath__factory {
    return super.connect(signer) as DyDxMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DyDxMathInterface {
    return new utils.Interface(_abi) as DyDxMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DyDxMath {
    return new Contract(address, _abi, signerOrProvider) as DyDxMath;
  }
}

export interface DyDxMathLibraryAddresses {
  ["contracts/libraries/FullPrecisionMath.sol:FullPrecisionMath"]: string;
}

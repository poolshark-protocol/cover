/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token20, Token20Interface } from "../Token20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017e7380380620017e7833981810160405281019062000037919062000214565b828281600390805190602001906200005192919062000091565b5080600490805190602001906200006a92919062000091565b50505080600560006101000a81548160ff021916908360ff160217905550505050620002d8565b8280546200009f9062000298565b90600052602060002090601f016020900481019282620000c357600085556200010f565b82601f10620000de57805160ff19168380011785556200010f565b828001600101855582156200010f579182015b828111156200010e578251825591602001919060010190620000f1565b5b5090506200011e919062000122565b5090565b5b808211156200013d57600081600090555060010162000123565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016957600080fd5b815160018060401b038082111562000186576200018562000141565b5b601f1960405181603f83601f8701160116810191508082108383111715620001b357620001b262000141565b5b81604052838152602092508683858801011115620001d057600080fd5b600091505b83821015620001f5578282870101518383830101528282019150620001d5565b83821115620002075760008385830101525b8094505050505092915050565b6000806000606084860312156200022a57600080fd5b835160018060401b03808211156200024157600080fd5b6200024f8783880162000157565b945060208601519150808211156200026657600080fd5b50620002758682870162000157565b925050604084015160ff811681146200028d57600080fd5b809150509250925092565b60008160011c90506001821680620002b157607f821691505b602082108103620002d257634e487b7160e01b600052602260045260246000fd5b50919050565b6114ff80620002e86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c681161009757806395d89b411161006657806395d89b4114610284578063a457c2d7146102a2578063a9059cbb146102d2578063dd62ed3e14610302576100f5565b806342966c681461020057806370a082311461021c57806379cc67901461024c5780637a1395aa14610268576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610332565b60405161010f9190610ee4565b60405180910390f35b610132600480360381019061012d9190610f5d565b6103c4565b60405161013f9190610f89565b60405180910390f35b6101506103e7565b60405161015d9190610f9c565b60405180910390f35b610180600480360381019061017b9190610fad565b6103f1565b60405161018d9190610f89565b60405180910390f35b61019e610420565b6040516101ab9190610fe9565b60405180910390f35b6101ce60048036038101906101c99190610f5d565b610437565b6040516101db9190610f89565b60405180910390f35b6101fe60048036038101906101f99190610f5d565b61046e565b005b61021a60048036038101906102159190610ffd565b61047c565b005b61023660048036038101906102319190611019565b610490565b6040516102439190610f9c565b60405180910390f35b61026660048036038101906102619190610f5d565b6104d8565b005b610282600480360381019061027d919061103c565b6104f8565b005b61028c610516565b6040516102999190610ee4565b60405180910390f35b6102bc60048036038101906102b79190610f5d565b6105a8565b6040516102c99190610f89565b60405180910390f35b6102ec60048036038101906102e79190610f5d565b61061f565b6040516102f99190610f89565b60405180910390f35b61031c60048036038101906103179190611069565b610642565b6040516103299190610f9c565b60405180910390f35b6060600380546103419061109c565b80601f016020809104026020016040519081016040528092919081815260200182805461036d9061109c565b80156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b6000806103cf6106c9565b90506103dc8185856106d1565b600191505092915050565b6000600254905090565b6000806103fc6106c9565b905061040985828561089a565b610414858585610926565b60019150509392505050565b6000600560009054906101000a900460ff16905090565b6000806104426106c9565b90506104638185856104548589610642565b61045e91906110f0565b6106d1565b600191505092915050565b6104788282610ba5565b5050565b61048d6104876106c9565b82610d04565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ea826104e46106c9565b8361089a565b6104f48282610d04565b5050565b80600560006101000a81548160ff021916908360ff16021790555050565b6060600480546105259061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546105519061109c565b801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b5050505050905090565b6000806105b36106c9565b905060006105c18286610642565b905083811015610606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fd9061110f565b60405180910390fd5b61061382868684036106d1565b60019250505092915050565b60008061062a6106c9565b9050610637818585610926565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610740576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073790611173565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a6906111d7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161088d9190610f9c565b60405180910390a3505050565b60006108a68484610642565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109205781811015610912576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109099061123b565b60405180910390fd5b61091f84848484036106d1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90611279565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb906112dd565b60405180910390fd5b610a0f838383610eda565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611341565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b2891906110f0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b8c9190610f9c565b60405180910390a3610b9f848484610edf565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0b906113a5565b60405180910390fd5b610c2060008383610eda565b8060026000828254610c3291906110f0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8791906110f0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cec9190610f9c565b60405180910390a3610d0060008383610edf565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a906113e3565b60405180910390fd5b610d7f82600083610eda565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90611447565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610e5c91906114ab565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ec19190610f9c565b60405180910390a3610ed583600084610edf565b505050565b505050565b505050565b600060208083528351808285015260005b81811015610f1457828187010151604082870101528281019050610ef5565b81811115610f26576000604083870101525b506040601f19601f8301168501019250505092915050565b60008135905060018060a01b0381168114610f5857600080fd5b919050565b60008060408385031215610f7057600080fd5b610f7983610f3e565b9150602083013590509250929050565b6000602082019050821515825292915050565b600060208201905082825292915050565b600080600060608486031215610fc257600080fd5b610fcb84610f3e565b9250610fd960208501610f3e565b9150604084013590509250925092565b600060208201905060ff8316825292915050565b60006020828403121561100f57600080fd5b8135905092915050565b60006020828403121561102b57600080fd5b61103482610f3e565b905092915050565b60006020828403121561104e57600080fd5b813560ff8116811461105f57600080fd5b8091505092915050565b6000806040838503121561107c57600080fd5b61108583610f3e565b915061109360208401610f3e565b90509250929050565b60008160011c905060018216806110b457607f821691505b6020821081036110d457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611104576111036110da565b5b828201905092915050565b60208152602560208201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f00000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152602460208201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f726573730000000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152602260208201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f737300000000000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152601d60208201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060408201526000606082019050919050565b60208152602560208201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f647265737300000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152602360208201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f657373000000000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152602660208201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e6365000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152601f60208201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060408201526000606082019050919050565b60208152602160208201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f730000000000000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b60208152602260208201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f636500000000000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b6000828210156114be576114bd6110da565b5b82820390509291505056fea2646970667358221220c841137e34694e6e103e7c59d6fdea0caf7789cd24702f803d955a268fb4d1f264736f6c634300080d0033";

export class Token20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenName: string,
    tokenSymbol: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token20> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      decimals_,
      overrides || {}
    ) as Promise<Token20>;
  }
  getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenName,
      tokenSymbol,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): Token20 {
    return super.attach(address) as Token20;
  }
  connect(signer: Signer): Token20__factory {
    return super.connect(signer) as Token20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Token20Interface {
    return new utils.Interface(_abi) as Token20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Token20 {
    return new Contract(address, _abi, signerOrProvider) as Token20;
  }
}

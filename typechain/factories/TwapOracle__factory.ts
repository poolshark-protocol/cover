/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TwapOracle, TwapOracleInterface } from "../TwapOracle";

const _abi = [
  {
    inputs: [],
    name: "WaitUntilAboveMinTick",
    type: "error",
  },
  {
    inputs: [],
    name: "WaitUntilBelowMaxTick",
    type: "error",
  },
  {
    inputs: [],
    name: "blockTime",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRangePool",
        name: "pool",
        type: "IRangePool",
      },
      {
        internalType: "uint16",
        name: "twapLength",
        type: "uint16",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "twapLength",
        type: "uint16",
      },
    ],
    name: "isPoolObservationsEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class TwapOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TwapOracle> {
    return super.deploy(overrides || {}) as Promise<TwapOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TwapOracle {
    return super.attach(address) as TwapOracle;
  }
  connect(signer: Signer): TwapOracle__factory {
    return super.connect(signer) as TwapOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwapOracleInterface {
    return new utils.Interface(_abi) as TwapOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwapOracle {
    return new Contract(address, _abi, signerOrProvider) as TwapOracle;
  }
}

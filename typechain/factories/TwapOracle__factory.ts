/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TwapOracle, TwapOracleInterface } from "../TwapOracle";

const _abi = [
  {
    inputs: [],
    name: "blockTime",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRangePool",
        name: "pool",
        type: "IRangePool",
      },
      {
        internalType: "uint16",
        name: "twapLength",
        type: "uint16",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "twapLength",
        type: "uint16",
      },
    ],
    name: "isPoolObservationsEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610a5761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80631b2f3d8a1461005b5780631e2e81071461009c57806348b15166146100bf5780639f8cb5d6146100da575b600080fd5b81801561006757600080fd5b5061007b6100763660046105ad565b610100565b6040805160ff909316835260029190910b6020830152015b60405180910390f35b6100af6100aa3660046105ad565b6101f1565b6040519015158152602001610093565b6100c7600c81565b60405161ffff9091168152602001610093565b6100ed6100e83660046105ad565b610204565b60405160029190910b8152602001610093565b60008061010d8484610210565b6101a15761014f6040518060400160405280601c81526020017f706f6f6c206f62736572766174696f6e73206e6f7420656e6f756768000000008152506102c7565b610159848461030d565b610196604051806040016040528060128152602001713837b7b61037b139b2b93b30ba34b7b7399d60711b8152506101918686610210565b61036e565b5060009050806101ea565b6101d9604051806040016040528060128152602001713837b7b61037b139b2b93b30ba34b7b7399d60711b8152506101918686610210565b60016101e585856103b7565b915091505b9250929050565b60006101fd8383610210565b9392505050565b60006101fd83836103b7565b600080836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027591906105e6565b50505093505050506102b5604051806040016040528060128152602001713837b7b61037b139b2b93b30ba34b7b7399d60711b8152508261ffff16610526565b61ffff80841691161015905092915050565b61030a816040516024016102db91906106e1565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610567565b50565b6040516332148f6760e01b815261ffff821660048201526001600160a01b038316906332148f6790602401600060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b505050505050565b6103b382826040516024016103849291906106f4565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052610567565b5050565b60408051600380825260808201909252600091829190602082016060803683370190505090506000816000815181106103f2576103f261072e565b63ffffffff9092166020928302919091019091015261041283600c61075a565b61ffff16816001815181106104295761042961072e565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0386169063883bdbfd9061046d908590600401610784565b600060405180830381865afa15801561048a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104b29190810190610897565b509050816001815181106104c8576104c861072e565b602002602001015160030b816001815181106104e6576104e661072e565b6020026020010151826000815181106105015761050161072e565b60200260200101516105139190610963565b61051d91906109b3565b95945050505050565b6103b3828260405160240161053c9291906109ff565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461030a57600080fd5b61ffff8116811461030a57600080fd5b600080604083850312156105c057600080fd5b82356105cb81610588565b915060208301356105db8161059d565b809150509250929050565b600080600080600080600060e0888a03121561060157600080fd5b875161060c81610588565b8097505060208801518060020b811461062457600080fd5b60408901519096506106358161059d565b60608901519095506106468161059d565b60808901519094506106578161059d565b60a089015190935060ff8116811461066e57600080fd5b60c0890151909250801515811461068457600080fd5b8091505092959891949750929550565b6000815180845260005b818110156106ba5760208185018101518683018201520161069e565b818111156106cc576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006101fd6020830184610694565b6040815260006107076040830185610694565b905082151560208301529392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168183048111821515161561077b5761077b610744565b02949350505050565b6020808252825182820181905260009190848201906040850190845b818110156107c257835163ffffffff16835292840192918401916001016107a0565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156107f7576107f7610718565b604052919050565b600067ffffffffffffffff82111561081957610819610718565b5060051b60200190565b600082601f83011261083457600080fd5b81516020610849610844836107ff565b6107ce565b82815260059290921b8401810191818101908684111561086857600080fd5b8286015b8481101561088c57805161087f81610588565b835291830191830161086c565b509695505050505050565b600080604083850312156108aa57600080fd5b825167ffffffffffffffff808211156108c257600080fd5b818501915085601f8301126108d657600080fd5b815160206108e6610844836107ff565b82815260059290921b8401810191818101908984111561090557600080fd5b948201945b838610156109335785518060060b81146109245760008081fd5b8252948201949082019061090a565b9188015191965090935050508082111561094c57600080fd5b5061095985828601610823565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561098e5761098e610744565b81667fffffffffffff0183138116156109a9576109a9610744565b5090039392505050565b60008160060b8360060b806109d857634e487b7160e01b600052601260045260246000fd5b667fffffffffffff198214600019821416156109f6576109f6610744565b90059392505050565b604081526000610a126040830185610694565b9050826020830152939250505056fea2646970667358221220a0c3e3699c4da34c6fcc784602860bc2af7e07fbd23574b34be6f1991f9b500f64736f6c634300080d0033";

export class TwapOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TwapOracle> {
    return super.deploy(overrides || {}) as Promise<TwapOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TwapOracle {
    return super.attach(address) as TwapOracle;
  }
  connect(signer: Signer): TwapOracle__factory {
    return super.connect(signer) as TwapOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwapOracleInterface {
    return new utils.Interface(_abi) as TwapOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwapOracle {
    return new Contract(address, _abi, signerOrProvider) as TwapOracle;
  }
}

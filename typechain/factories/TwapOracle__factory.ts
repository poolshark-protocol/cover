/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TwapOracle, TwapOracleInterface } from "../TwapOracle";

const _abi = [
  {
    inputs: [],
    name: "WaitUntilAboveMinTick",
    type: "error",
  },
  {
    inputs: [],
    name: "WaitUntilBelowMaxTick",
    type: "error",
  },
  {
    inputs: [],
    name: "blockTime",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRangePool",
        name: "pool",
        type: "IRangePool",
      },
      {
        internalType: "uint16",
        name: "twapLength",
        type: "uint16",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "twapLength",
        type: "uint16",
      },
    ],
    name: "isPoolObservationsEnough",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61087b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c80631b2f3d8a146100665780631e2e8107146100a757806348b15166146100ca57806348cd4cb1146100e55780639f8cb5d614610102575b600080fd5b81801561007257600080fd5b50610086610081366004610455565b610128565b6040805160ff909316835260029190910b6020830152015b60405180910390f35b6100ba6100b5366004610455565b610166565b604051901515815260200161009e565b6100d2600c81565b60405161ffff909116815260200161009e565b6100ed600081565b60405163ffffffff909116815260200161009e565b610115610110366004610455565b610179565b60405160029190910b815260200161009e565b6000806101358484610185565b61014e576101438484610203565b50600090508061015f565b600161015a8585610264565b915091505b9250929050565b60006101728383610185565b9392505050565b60006101728383610264565b600080836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea919061048e565b50505061ffff8088169116101594505050505092915050565b6040516332148f6760e01b815261ffff821660048201526001600160a01b038316906332148f6790602401600060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050505050565b604080516003808252608082019092526000918291906020820160608036833701905050905060008160008151811061029f5761029f610552565b63ffffffff909216602092830291909101909101526102bf83600c61057e565b61ffff16816001815181106102d6576102d6610552565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0386169063883bdbfd9061031a9085906004016105a8565b600060405180830381865afa158015610337573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035f91908101906106bb565b5090508160018151811061037557610375610552565b602002602001015160030b8160018151811061039357610393610552565b6020026020010151826000815181106103ae576103ae610552565b60200260200101516103c09190610787565b6103ca91906107d7565b92506103d9620d89e719610823565b60020b8360020b036103fe5760405163d099d94360e01b815260040160405180910390fd5b620d89e8600284900b016104255760405163a3f79e2b60e01b815260040160405180910390fd5b505092915050565b6001600160a01b038116811461044257600080fd5b50565b61ffff8116811461044257600080fd5b6000806040838503121561046857600080fd5b82356104738161042d565b9150602083013561048381610445565b809150509250929050565b600080600080600080600060e0888a0312156104a957600080fd5b87516104b48161042d565b8097505060208801518060020b81146104cc57600080fd5b60408901519096506104dd81610445565b60608901519095506104ee81610445565b60808901519094506104ff81610445565b60a089015190935060ff8116811461051657600080fd5b60c0890151909250801515811461052c57600080fd5b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168183048111821515161561059f5761059f610568565b02949350505050565b6020808252825182820181905260009190848201906040850190845b818110156105e657835163ffffffff16835292840192918401916001016105c4565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561061b5761061b61053c565b604052919050565b600067ffffffffffffffff82111561063d5761063d61053c565b5060051b60200190565b600082601f83011261065857600080fd5b8151602061066d61066883610623565b6105f2565b82815260059290921b8401810191818101908684111561068c57600080fd5b8286015b848110156106b05780516106a38161042d565b8352918301918301610690565b509695505050505050565b600080604083850312156106ce57600080fd5b825167ffffffffffffffff808211156106e657600080fd5b818501915085601f8301126106fa57600080fd5b8151602061070a61066883610623565b82815260059290921b8401810191818101908984111561072957600080fd5b948201945b838610156107575785518060060b81146107485760008081fd5b8252948201949082019061072e565b9188015191965090935050508082111561077057600080fd5b5061077d85828601610647565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156107b2576107b2610568565b81667fffffffffffff0183138116156107cd576107cd610568565b5090039392505050565b60008160060b8360060b806107fc57634e487b7160e01b600052601260045260246000fd5b667fffffffffffff1982146000198214161561081a5761081a610568565b90059392505050565b60008160020b627fffff19810361083c5761083c610568565b6000039291505056fea264697066735822122079e648a47f878cea01d4f81adcca258f3f7a663de63c050702e11fae0c22587d64736f6c634300080d0033";

export class TwapOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TwapOracle> {
    return super.deploy(overrides || {}) as Promise<TwapOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TwapOracle {
    return super.attach(address) as TwapOracle;
  }
  connect(signer: Signer): TwapOracle__factory {
    return super.connect(signer) as TwapOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwapOracleInterface {
    return new utils.Interface(_abi) as TwapOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwapOracle {
    return new Contract(address, _abi, signerOrProvider) as TwapOracle;
  }
}

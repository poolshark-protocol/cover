/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  PoolsharkHedgePoolView,
  PoolsharkHedgePoolViewInterface,
} from "../PoolsharkHedgePoolView";

const _abi = [
  {
    inputs: [],
    name: "InvalidSwapFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTick",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "LiquidityOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerEven",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxTickLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughOutputLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Token0Missing",
    type: "error",
  },
  {
    inputs: [],
    name: "Token1Missing",
    type: "error",
  },
  {
    inputs: [],
    name: "UpperOdd",
    type: "error",
  },
  {
    inputs: [],
    name: "feeGrowthGlobal0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeGrowthGlobal1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceAndNearestTicks",
    outputs: [
      {
        internalType: "uint160",
        name: "_price",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "_nearestTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSecondsGrowthAndLastObservation",
    outputs: [
      {
        internalType: "uint160",
        name: "_secondsGrowthGlobal",
        type: "uint160",
      },
      {
        internalType: "uint32",
        name: "_lastObservation",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenProtocolFees",
    outputs: [
      {
        internalType: "uint128",
        name: "_token0ProtocolFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_token1ProtocolFee",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside0Last",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside1Last",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "lowerTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick",
        type: "int24",
      },
    ],
    name: "rangeFeeGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "feeGrowthInside0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "ticks",
    outputs: [
      {
        internalType: "int24",
        name: "previousTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "nextTick",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "feeGrowthOutside0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthOutside1",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "secondsGrowthOutside",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class PoolsharkHedgePoolView__factory {
  static readonly abi = _abi;
  static createInterface(): PoolsharkHedgePoolViewInterface {
    return new utils.Interface(_abi) as PoolsharkHedgePoolViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolsharkHedgePoolView {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PoolsharkHedgePoolView;
  }
}

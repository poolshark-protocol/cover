/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ISwapLib, ISwapLibInterface } from "../ISwapLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "swapFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "currentLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthGlobal",
        type: "uint256",
      },
    ],
    name: "handleFees",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFeeAmount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolFee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthGlobal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ISwapLib__factory {
  static readonly abi = _abi;
  static createInterface(): ISwapLibInterface {
    return new utils.Interface(_abi) as ISwapLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISwapLib {
    return new Contract(address, _abi, signerOrProvider) as ISwapLib;
  }
}
